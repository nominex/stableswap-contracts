{
  "contractName": "StableSwapFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INIT_CODE_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_devFee",
          "type": "uint256"
        }
      ],
      "name": "setDevFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_swapFee",
          "type": "uint32"
        }
      ],
      "name": "setSwapFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_futureA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_futureTime",
          "type": "uint256"
        }
      ],
      "name": "rampA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        }
      ],
      "name": "stopRampA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INIT_CODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_futureA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_futureTime\",\"type\":\"uint256\"}],\"name\":\"rampA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_devFee\",\"type\":\"uint256\"}],\"name\":\"setDevFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_swapFee\",\"type\":\"uint32\"}],\"name\":\"setSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"}],\"name\":\"stopRampA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/StableSwapFactory.sol\":\"StableSwapFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"project:/contracts/StableSwapERC20.sol\":{\"keccak256\":\"0xfd324940a8ee738f1fa5c7c0516bacfa9dfc617d79057b892a3974321dcd4ded\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e4a2500e919b998289baf6200acd9437c84ff2c94921b170285a692470e10037\",\"dweb:/ipfs/QmSXCKpUQohXUkWMzLBeQsQtHw96GJcqYbBBXyFfTtqW2u\"]},\"project:/contracts/StableSwapFactory.sol\":{\"keccak256\":\"0xcee75d8981f67c1fe0c33bc9a950e8b447eaad7c558c75716efc75171c044ced\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a935d8e91e880cbc241822a1d846d1588b0c0422b99ff19efbec46f900a61a45\",\"dweb:/ipfs/QmeyyQFm3z47unwC9PqRqsyPYVVBR3uiuqRT7pXZgMinsN\"]},\"project:/contracts/StableSwapPair.sol\":{\"keccak256\":\"0xfcc6280afd0f16adc42ae7a8360071173953c81a08c2903c474966167e1c9ec7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7eae051a20a44e96ebd728a0194b30691caf1e38b5f6857902853f593ba9d605\",\"dweb:/ipfs/QmQYAxAsBo5WkhCgnYenod5fRtTpPz5ZmcU5Z8amiX5NhL\"]},\"project:/contracts/interfaces/INomiswapCallee.sol\":{\"keccak256\":\"0xacd4b53dd95d9b5411449f8207eaf820cb409bbe471dbca714c76a53c34dd2ba\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a9038bbed61d51309fa8fc4c2cc4b953fb80b941780cb34258ebdf0e6f639323\",\"dweb:/ipfs/QmQSHYywSioABgon7fCvnPM5ir4T4FvEPiDzGyAz6bweeP\"]},\"project:/contracts/interfaces/INomiswapERC20.sol\":{\"keccak256\":\"0x2737e32674994900a880c61b46af7bfcd7f593789e710bdc51d36b9e5c2e4949\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7cbe5cc81643ed32aa81c41ac672a1477d018ec62ed2ff4c72e1e6259e5cabbe\",\"dweb:/ipfs/QmY6tZsTSzvdA5UQKpB1RYkjCoQQPDNQZ1a24eaDZW3z51\"]},\"project:/contracts/interfaces/INomiswapFactory.sol\":{\"keccak256\":\"0xc5137e516b4343883f1f0677640c6085b0703a08ee43e6aa646e90c83558f234\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://142455df84a3786d4d85ebe5047e59722c1206a1174dd58a6477616b0797ea2d\",\"dweb:/ipfs/QmQ8oZGGk6rVQt5HDrtTKy9sSTziw7HmoeREFSz35uEspB\"]},\"project:/contracts/interfaces/INomiswapPair.sol\":{\"keccak256\":\"0x0c8e15c45a7fc369f3653849907983dee36578a3f3fc9f6efec46b696f2270ba\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://85c7d10e9133e3b8bb8740e5296db96fbc8ca65ccdedc664e4c0dcdf3fef9367\",\"dweb:/ipfs/QmeTRvnvcL5aZVk4BtprWz8TbdrjheJDqGswG81m7g1SQH\"]},\"project:/contracts/interfaces/INomiswapStablePair.sol\":{\"keccak256\":\"0xbf8d95949a08da095e652b532c3840324d67f765fd712ccf037fd6ccb4408ac2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6433dc30ca1763c20befcaf2ef459bb05d4e526e0945d77321e3b6890edb939d\",\"dweb:/ipfs/QmfT6MHdvKyZbqja84k1EBjsTtJQAoTiBHWQTGKUETrYA4\"]},\"project:/contracts/libraries/Math.sol\":{\"keccak256\":\"0x304193cd6520c5b6afc0c23e2b3deb9f4d43bd06080f14752610d18776f96997\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b86312631dbbe4cbfc870bb02b5605c7bce290ce533194b96714fdc1be5fb3c5\",\"dweb:/ipfs/QmRPvevnHMJnfRcepCzjKcKbjPyMjEdZwU2ojauF8v19Ns\"]},\"project:/contracts/libraries/MathUtils.sol\":{\"keccak256\":\"0x12cbfa59837600b0160164ce954f46cabfeab8203efe4ea0c0db6eac00df620f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4d7022ef5c9830e5a5292c4a9ea30f431582c0e356a94e5e25632d45c1f33c6c\",\"dweb:/ipfs/QmbG1fqGTXJBGab9NRKVddzKajGiLhuEgRaiVGfc9uWP5Q\"]},\"project:/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x95ff0ef08c4d04cb3fd73d792b654beb75b2a53b6236ad6b8319aa455f9e930b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ebbb2d706cedae4883c790ecc7767c48948e8ed62d32d5c5b26b917c1a7d05e5\",\"dweb:/ipfs/QmV9vBsmXgFFjGouxTZUfajD7uWvf7DWSEUVHDzoBinTL6\"]},\"project:/contracts/util/FactoryGuard.sol\":{\"keccak256\":\"0x33c3e985d80539165debff54bb360d9c67642aeef4a655c4183e72a12509b0f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://383a650b5007f6fedc47993c757bec0681c41ade07501fc8f129f8e8f46a10d1\",\"dweb:/ipfs/QmTw9VA8kgchDWFxMtcqdw3Se5JJPpZZ5tWD7gAQVEUjdB\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c80636864a4b31161008c578063a2e74af611610066578063a2e74af6146101ce578063c9c65396146101e1578063e6a43905146101f4578063f46901ed1461023557600080fd5b80636864a4b3146101955780636aec995d146101a85780639e68ceb8146101bb57600080fd5b80631e3dd18b116100bd5780631e3dd18b14610163578063257671f514610176578063574f2ba31461018d57600080fd5b8063017e7e58146100e4578063094b74151461012e578063139dac3e1461014e575b600080fd5b6000546101049073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6001546101049073ffffffffffffffffffffffffffffffffffffffff1681565b61016161015c366004610d9f565b610248565b005b610104610171366004610dc9565b6103bd565b61017f60025481565b604051908152602001610125565b60045461017f565b6101616101a3366004610de2565b6103f4565b6101616101b6366004610e04565b6104d8565b6101616101c9366004610e37565b6105e5565b6101616101dc366004610de2565b6106be565b6101046101ef366004610e77565b610786565b610104610202366004610e77565b600360209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b610161610243366004610de2565b610ca0565b60015473ffffffffffffffffffffffffffffffffffffffff1633146102ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e0000000000000000000000000060448201526064015b60405180910390fd5b60008111610338576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4e6f6d69737761703a20464f5242494444454e5f46454500000000000000000060448201526064016102c5565b6040517f1c75b6b20000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff831690631c75b6b2906024015b600060405180830381600087803b1580156103a157600080fd5b505af11580156103b5573d6000803e3d6000fd5b505050505050565b600481815481106103cd57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60015473ffffffffffffffffffffffffffffffffffffffff163314610475576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e0000000000000000000000000060448201526064016102c5565b8073ffffffffffffffffffffffffffffffffffffffff1663c4db7fa06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104bd57600080fd5b505af11580156104d1573d6000803e3d6000fd5b5050505050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610559576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e0000000000000000000000000060448201526064016102c5565b6040517f593d132c000000000000000000000000000000000000000000000000000000008152600481018390526024810182905273ffffffffffffffffffffffffffffffffffffffff84169063593d132c90604401600060405180830381600087803b1580156105c857600080fd5b505af11580156105dc573d6000803e3d6000fd5b50505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e0000000000000000000000000060448201526064016102c5565b6040517fd6d788c300000000000000000000000000000000000000000000000000000000815263ffffffff8216600482015273ffffffffffffffffffffffffffffffffffffffff83169063d6d788c390602401610387565b60015473ffffffffffffffffffffffffffffffffffffffff16331461073f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e0000000000000000000000000060448201526064016102c5565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015460009073ffffffffffffffffffffffffffffffffffffffff16331461080a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e0000000000000000000000000060448201526064016102c5565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361089f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4e6f6d69737761703a204944454e544943414c5f41444452455353455300000060448201526064016102c5565b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106108dc5783856108df565b84845b909250905073ffffffffffffffffffffffffffffffffffffffff8216610961576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f6d69737761703a205a45524f5f414444524553530000000000000000000060448201526064016102c5565b73ffffffffffffffffffffffffffffffffffffffff8281166000908152600360209081526040808320858516845290915290205416156109fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4e6f6d69737761703a20504149525f455849535453000000000000000000000060448201526064016102c5565b600060405180602001610a0f90610d68565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f5945073ffffffffffffffffffffffffffffffffffffffff8516610b22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4e6f6d69737761703a20504149525f4e4f545f4352454154454400000000000060448201526064016102c5565b6040517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152848116602483015286169063485cc95590604401600060405180830381600087803b158015610b9357600080fd5b505af1158015610ba7573d6000803e3d6000fd5b5050505073ffffffffffffffffffffffffffffffffffffffff84811660008181526003602081815260408084208987168086529083528185208054978d167fffffffffffffffffffffffff000000000000000000000000000000000000000098891681179091559383528185208686528352818520805488168517905560048054600181018255958190527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610d21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e0000000000000000000000000060448201526064016102c5565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6143008062000eab83390190565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d9a57600080fd5b919050565b60008060408385031215610db257600080fd5b610dbb83610d76565b946020939093013593505050565b600060208284031215610ddb57600080fd5b5035919050565b600060208284031215610df457600080fd5b610dfd82610d76565b9392505050565b600080600060608486031215610e1957600080fd5b610e2284610d76565b95602085013595506040909401359392505050565b60008060408385031215610e4a57600080fd5b610e5383610d76565b9150602083013563ffffffff81168114610e6c57600080fd5b809150509250929050565b60008060408385031215610e8a57600080fd5b610e9383610d76565b9150610ea160208401610d76565b9050925092905056fe60a0604052600a805463ffffffff191681179055600762000026600160701b60036200017d565b6001600160e01b03166200003b9190620001af565b600b556200004c60646055620001d2565b600d556200005d60646055620001d2565b600e553480156200006d57600080fd5b50604080518082018252600c81526b4e6f6d6973776170204c507360a01b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527f41181e8e0e1134e304563ce4f0d2a1743ef2b39102f68b1aaa3b51c14c12b4e0918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a0830152339160c00160408051601f1981840301815291905280516020909101206003555060016005556001600160a01b031660805242601055620001f4565b634e487b7160e01b600052601160045260246000fd5b60006001600160e01b0382811684821681151582840482111615620001a657620001a662000167565b02949350505050565b600082620001cd57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615620001ef57620001ef62000167565b500290565b6080516140c66200023a600039600081816105e201528181610eaf015281816110980152818161137d015281816123d501528181612b0c015261337b01526140c66000f3fe608060405234801561001057600080fd5b506004361061025c5760003560e01c806370a0823111610145578063c45a0155116100bd578063d46300fd1161008c578063d6d788c311610071578063d6d788c31461065c578063dd62ed3e1461066f578063fff6cae91461069a57600080fd5b8063d46300fd14610641578063d505accf1461064957600080fd5b8063c45a0155146105e0578063c4db7fa014610606578063ca706bcf1461060e578063d21220a71461062157600080fd5b806395d89b4111610114578063ba9a7a56116100f9578063ba9a7a56146105a8578063baa8c7cb146105b1578063bc25cf77146105cd57600080fd5b806395d89b4114610559578063a9059cbb1461059557600080fd5b806370a08231146104e85780637ecebe001461050857806389afcb441461052857806392e9a8ac1461055057600080fd5b8063313ce567116101d857806354cf2aeb116101a7578063632db21c1161018c578063632db21c146104b95780636827e764146104cc5780636a627842146104d557600080fd5b806354cf2aeb14610481578063593d132c146104a657600080fd5b8063313ce567146103fa5780633644e51514610414578063485cc9551461041d5780634e25dc471461043057600080fd5b80630dfe16811161022f5780631c75b6b2116102145780631c75b6b2146103ad57806323b872dd146103c057806330adf81f146103d357600080fd5b80630dfe16811461035157806318160ddd1461039657600080fd5b8063022c0d9f1461026157806306fdde03146102765780630902f1ac146102c8578063095ea7b31461032e575b600080fd5b61027461026f366004613a1d565b6106a2565b005b6102b26040518060400160405280600c81526020017f4e6f6d6973776170204c5073000000000000000000000000000000000000000081525081565b6040516102bf9190613ae3565b60405180910390f35b600854604080516dffffffffffffffffffffffffffff80841682526e01000000000000000000000000000084041660208201527c010000000000000000000000000000000000000000000000000000000090920463ffffffff16908201526060016102bf565b61034161033c366004613b34565b610e80565b60405190151581526020016102bf565b6006546103719073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102bf565b61039f60005481565b6040519081526020016102bf565b6102746103bb366004613b60565b610e97565b6103416103ce366004613b79565b610fa5565b61039f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b610402601281565b60405160ff90911681526020016102bf565b61039f60035481565b61027461042b366004613bba565b611080565b600c546104609070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1681565b6040516fffffffffffffffffffffffffffffffff90911681526020016102bf565b600a546104919063ffffffff1681565b60405163ffffffff90911681526020016102bf565b6102746104b4366004613bf3565b6112f4565b61039f6104c7366004613b34565b6115f2565b61039f600b5481565b61039f6104e3366004613c15565b611893565b61039f6104f6366004613c15565b60016020526000908152604090205481565b61039f610516366004613c15565b60046020526000908152604090205481565b61053b610536366004613c15565b611c90565b604080519283526020830191909152016102bf565b61039f60095481565b6102b26040518060400160405280600681526020017f4e4d582d4c50000000000000000000000000000000000000000000000000000081525081565b6103416105a3366004613b34565b61217d565b61039f6103e881565b600c54610460906fffffffffffffffffffffffffffffffff1681565b6102746105db366004613c15565b61218a565b7f0000000000000000000000000000000000000000000000000000000000000000610371565b61027461234c565b61039f61061c366004613b34565b6124c5565b6007546103719073ffffffffffffffffffffffffffffffffffffffff1681565b61039f612768565b610274610657366004613c41565b612809565b61027461066a366004613cb2565b612af4565b61039f61067d366004613bba565b600260209081526000928352604080842090915290825290205481565b610274612c3c565b600260055403610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600555841515806107265750600084115b6107b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4e6f6d69737761703a20494e53554646494349454e545f4f55545055545f414d60448201527f4f554e5400000000000000000000000000000000000000000000000000000000606482015260840161070a565b60008061080d6008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150818710801561084057508086105b6108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4e6f6d69737761703a20494e53554646494349454e545f4c4951554944495459604482015260640161070a565b600654600754600091829173ffffffffffffffffffffffffffffffffffffffff91821691908116908916821480159061090b57508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b610971576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f6d69737761703a20494e56414c49445f544f000000000000000000000000604482015260640161070a565b8a1561098257610982828a8d612ddf565b891561099357610993818a8c612ddf565b8615610a26576040517f2210968200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a16906322109682906109f39033908f908f908e908e90600401613cd8565b600060405180830381600087803b158015610a0d57600080fd5b505af1158015610a21573d6000803e3d6000fd5b505050505b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610a90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab49190613d50565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8216906370a0823190602401602060405180830381865afa158015610b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b459190613d50565b9250505060008985610b579190613d98565b8311610b64576000610b78565b610b6e8a86613d98565b610b789084613d98565b90506000610b868a86613d98565b8311610b93576000610ba7565b610b9d8a86613d98565b610ba79084613d98565b90506000821180610bb85750600081115b610c44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4e6f6d69737761703a20494e53554646494349454e545f494e5055545f414d4f60448201527f554e540000000000000000000000000000000000000000000000000000000000606482015260840161070a565b6000610c4e612768565b600a54600c5491925063ffffffff1690600090612710906fffffffffffffffffffffffffffffffff16610c818488613daf565b610c8d6127108b613daf565b610c979190613d98565b610ca19190613daf565b610cab9190613e1b565b600c549091506000906127109070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff16610ce88588613daf565b610cf46127108b613daf565b610cfe9190613d98565b610d089190613daf565b610d129190613e1b565b90506000610d21838387612e71565b600c54909150600090610d46906fffffffffffffffffffffffffffffffff168d613daf565b600c54909150600090610d7f9070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff168d613daf565b90506000610d8e83838a612e71565b905080841015610dfa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4e6f6d69737761703a2044000000000000000000000000000000000000000000604482015260640161070a565b5050505050505050610e0c8484612f9e565b60408051838152602081018390529081018c9052606081018b905273ffffffffffffffffffffffffffffffffffffffff8a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600555505050505050505050565b6000610e8d338484613131565b5060015b92915050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610f36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640161070a565b80600003610fa0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4e6f6d6973776170506169723a20646576206665652030000000000000000000604482015260640161070a565b600b55565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1461106a5773ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902054611038908390613d98565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602090815260408083203384529091529020555b6110758484846131a0565b5060015b9392505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640161070a565b6006805473ffffffffffffffffffffffffffffffffffffffff8085167fffffffffffffffffffffffff000000000000000000000000000000000000000092831681179093556007805491851691909216179055604080517f313ce567000000000000000000000000000000000000000000000000000000008152905163313ce567916004808201926020929091908290030181865afa1580156111c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ea9190613e2f565b6111f5906012613e4c565b61120090600a613fb0565b600c60006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a79190613e2f565b6112b2906012613e4c565b6112bd90600a613fb0565b600c80546fffffffffffffffffffffffffffffffff9283167001000000000000000000000000000000000292169190911790555050565b600260055403611360576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161070a565b60026005553373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611404576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640161070a565b62015180600f546114159190613fd1565b42101561147e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4e6f6d6973776170506169723a20494e56414c49445f54494d45000000000000604482015260640161070a565b61148b6201518042613fd1565b81101561151a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4e6f6d6973776170506169723a20494e56414c49445f4655545552455f54494d60448201527f4500000000000000000000000000000000000000000000000000000000000000606482015260840161070a565b6000611524612768565b90506000611533606485613daf565b90506000841180156115475750620f424084105b61155057600080fd5b818110156115745781611564600a83613daf565b101561156f57600080fd5b61158b565b61157f600a83613daf565b81111561158b57600080fd5b600d829055600e81905542600f819055601084905560408051848152602081018490528082019290925260608201859052517fa2b71ec6df949300b59aab36b55e189697b750119dd349fcfa8c0f779e83c2549181900360800190a1505060016005555050565b60008060006116506008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b50600c546dffffffffffffffffffffffffffff9283169450911691506fffffffffffffffffffffffffffffffff808216840291700100000000000000000000000000000000900416820260006116a4612768565b905060006116b3848484612e71565b60065490915073ffffffffffffffffffffffffffffffffffffffff908116908a160361177057600c5470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1688028303600061171382848661326f565b600c549091506000906fffffffffffffffffffffffffffffffff168783036001018161174157611741613dec565b600a54919004915063ffffffff166127109081039082028161176557611765613dec565b049950505050611887565b60075473ffffffffffffffffffffffffffffffffffffffff8a81169116146117f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e56414c49445f494e5055545f544f4b454e00000000000000000000000000604482015260640161070a565b600c546fffffffffffffffffffffffffffffffff1688028403600061181a82848661326f565b600c5490915060009070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff166001878403018161185c5761185c613dec565b600a54919004915063ffffffff166127109081039082028161188057611880613dec565b0499505050505b50505050505092915050565b6000600260055403611901576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161070a565b60026005556000806119626008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015292945090925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa1580156119da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fe9190613d50565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015611a72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a969190613d50565b90506000611aa48585613376565b60008054919250611ab3612768565b90506000611ac2868684613523565b90506000611ae06dffffffffffffffffffffffffffff8a1688613d98565b90506000611afe6dffffffffffffffffffffffffffff8a1688613d98565b905084600003611b34576103e8611b16838387613523565b611b209190613d98565b9a50611b2f60006103e861356c565b611b90565b600854600090611b6a906dffffffffffffffffffffffffffff808216916e01000000000000000000000000000090041687613523565b90508086611b788287613d98565b611b829190613daf565b611b8c9190613e1b565b9b50505b60008b11611c20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e6f6d69737761703a20494e53554646494349454e545f4c495155494449545960448201527f5f4d494e54454400000000000000000000000000000000000000000000000000606482015260840161070a565b611c2a8c8c61356c565b611c348888612f9e565b8515611c405760098390555b604080518381526020810183905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600555509698975050505050505050565b600080600260055403611cff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161070a565b6002600555600080611d606008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506006546007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015293955091935073ffffffffffffffffffffffffffffffffffffffff9081169291169060009083906370a0823190602401602060405180830381865afa158015611de0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e049190613d50565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015611e74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e989190613d50565b30600090815260016020526040812054919250611eb58888613376565b60005490915080611ec68685613daf565b611ed09190613e1b565b9a5080611edd8585613daf565b611ee79190613e1b565b995060008b118015611ef9575060008a115b611f85576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e6f6d69737761703a20494e53554646494349454e545f4c495155494449545960448201527f5f4255524e454400000000000000000000000000000000000000000000000000606482015260840161070a565b611f8f3084613617565b611f9a878d8d612ddf565b611fa5868d8c612ddf565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8816906370a0823190602401602060405180830381865afa15801561200f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120339190613d50565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290955073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa1580156120a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120c49190613d50565b93506120d08585612f9e565b811561211457600854612110906dffffffffffffffffffffffffffff808216916e01000000000000000000000000000090041661210b612768565b613523565b6009555b604080518c8152602081018c905273ffffffffffffffffffffffffffffffffffffffff8e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600581905550915091565b6000610e8d3384846131a0565b6002600554036121f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161070a565b60026005556006546007546008546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff93841693909216916122c291849186916dffffffffffffffffffffffffffff169083906370a08231906024015b602060405180830381865afa15801561228f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122b39190613d50565b6122bd9190613d98565b612ddf565b6008546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015261234291839186916e01000000000000000000000000000090046dffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401612272565b5050600160055550565b6002600554036123b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161070a565b60026005553373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461245c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640161070a565b6000612466612768565b600d819055600e81905542600f81905560108190556040519192507f46e22fb3709ad289f62ce63d469248536dbc78d82b84a3d7e74ad606dc201938916124b591848252602082015260400190565b60405180910390a1506001600555565b60008060006125236008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b50600a546dffffffffffffffffffffffffffff9283169450911691506000906127109063ffffffff168602600c54919004860391506fffffffffffffffffffffffffffffffff80821685029170010000000000000000000000000000000090041683026000612590612768565b9050600061259f848484612e71565b60065490915073ffffffffffffffffffffffffffffffffffffffff908116908b160361265357600c546fffffffffffffffffffffffffffffffff168502840160006125eb82848661326f565b600c5490915070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff168186037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018161264957612649613dec565b049950505061275b565b60075473ffffffffffffffffffffffffffffffffffffffff8b81169116146126d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e56414c49445f494e5055545f544f4b454e00000000000000000000000000604482015260640161070a565b600c5470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1685028301600061271182848661326f565b600c549091506fffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff828803018161188057611880613dec565b5050505050505092915050565b601054600e546000919042821115610e9157600d54600f54818311156127cd576127928185613d98565b61279c8242613d98565b6127a68486613d98565b6127b09190613daf565b6127ba9190613e1b565b6127c49083613fd1565b94505050505090565b6127d78185613d98565b6127e18242613d98565b6127eb8585613d98565b6127f59190613daf565b6127ff9190613e1b565b6127c49083613d98565b42841015612873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f6d69737761703a2045585049524544000000000000000000000000000000604482015260640161070a565b60035473ffffffffffffffffffffffffffffffffffffffff8816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876128d383613fe9565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016129749291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156129fd573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590612a7857508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b612ade576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4e6f6d69737761703a20494e56414c49445f5349474e41545552450000000000604482015260640161070a565b612ae9898989613131565b505050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614612b93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640161070a565b6127108163ffffffff161115612c05576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4e6f6d6973776170506169723a20464f5242494444454e5f4645450000000000604482015260640161070a565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff92909216919091179055565b600260055403612ca8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161070a565b60026005556006546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152612dd89173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015612d1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d419190613d50565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015612daf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dd39190613d50565b612f9e565b6001600555565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052612e6c9084906136ca565b505050565b600080612e7e8486613fd1565b90506000612e8d846004613daf565b905081600003612ea257600092505050611079565b600082815b610100811015612f92576000600489848c612ec28280613daf565b612ecc9190613e1b565b612ed69190613daf565b612ee09190613e1b565b612eea9190613e1b565b9050829350806003612efc9190613daf565b836001612f0a606489613e1b565b612f149190613d98565b612f1e9190613daf565b612f289190613fd1565b83612f34836002613daf565b6064612f408a8a613daf565b612f4a9190613e1b565b612f549190613fd1565b612f5e9190613daf565b612f689190613e1b565b9250612f7483856137d6565b15612f7f5750612f92565b5080612f8a81613fe9565b915050612ea7565b50979650505050505050565b6dffffffffffffffffffffffffffff8211801590612fca57506dffffffffffffffffffffffffffff8111155b613030576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e6f6d69737761703a204f564552464c4f570000000000000000000000000000604482015260640161070a565b600061304164010000000042614021565b6008805463ffffffff83167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff8781166e0100000000000000000000000000009081027fffffffff000000000000000000000000000000000000000000000000000000009095168a83161794909417918216831794859055604080519382169282169290921783529290930490911660208201529192507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260409020546131d1908290613d98565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260016020526040808220939093559084168152205461320e908290613fd1565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906131939085815260200190565b60008061327d836004613daf565b9050600061328c866002613daf565b6132968680613daf565b6132a09190613e1b565b905060646132af836002613daf565b6132b99190613e1b565b6132c38683613daf565b6132cd9190613e1b565b90506000826132dd606488613daf565b6132e79190613e1b565b6132f19088613fd1565b9050600086945060005b61010081101561336a578591508783613315846002613daf565b61331f9190613fd1565b6133299190613d98565b846133348880613daf565b61333e9190613fd1565b6133489190613e1b565b955061335486836137d6565b61336a578061336281613fe9565b9150506132fb565b50505050509392505050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa1580156133e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134089190614035565b60095473ffffffffffffffffffffffffffffffffffffffff821615801594509192509061350f57801561350a576000613464866dffffffffffffffffffffffffffff16866dffffffffffffffffffffffffffff1661210b612768565b9050600954811115613508576000600954826134809190613d98565b60005461348d9190613daf565b905060006009546e0100000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600b54856134d09190613daf565b6134da9190613e1b565b6134e49190613fd1565b905060006134f28284613e1b565b9050801561350457613504868261356c565b5050505b505b61351b565b801561351b5760006009555b505092915050565b600c546000906fffffffffffffffffffffffffffffffff8082168602917001000000000000000000000000000000009004168402613562828286612e71565b9695505050505050565b8060005461357a9190613fd1565b600090815573ffffffffffffffffffffffffffffffffffffffff83168152600160205260409020546135ad908290613fd1565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061360b9085815260200190565b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040902054613648908290613d98565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260408120919091555461367d908290613d98565b600090815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161360b565b600061372c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166137f89092919063ffffffff16565b805190915015612e6c578080602001905181019061374a9190614052565b612e6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161070a565b6000818311156137ed575060018183031115610e91565b506001919003111590565b6060613807848460008561380f565b949350505050565b6060824710156138a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161070a565b73ffffffffffffffffffffffffffffffffffffffff85163b61391f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161070a565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516139489190614074565b60006040518083038185875af1925050503d8060008114613985576040519150601f19603f3d011682016040523d82523d6000602084013e61398a565b606091505b509150915061399a8282866139a5565b979650505050505050565b606083156139b4575081611079565b8251156139c45782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a9190613ae3565b73ffffffffffffffffffffffffffffffffffffffff81168114613a1a57600080fd5b50565b600080600080600060808688031215613a3557600080fd5b85359450602086013593506040860135613a4e816139f8565b9250606086013567ffffffffffffffff80821115613a6b57600080fd5b818801915088601f830112613a7f57600080fd5b813581811115613a8e57600080fd5b896020828501011115613aa057600080fd5b9699959850939650602001949392505050565b60005b83811015613ace578181015183820152602001613ab6565b83811115613add576000848401525b50505050565b6020815260008251806020840152613b02816040850160208701613ab3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008060408385031215613b4757600080fd5b8235613b52816139f8565b946020939093013593505050565b600060208284031215613b7257600080fd5b5035919050565b600080600060608486031215613b8e57600080fd5b8335613b99816139f8565b92506020840135613ba9816139f8565b929592945050506040919091013590565b60008060408385031215613bcd57600080fd5b8235613bd8816139f8565b91506020830135613be8816139f8565b809150509250929050565b60008060408385031215613c0657600080fd5b50508035926020909101359150565b600060208284031215613c2757600080fd5b8135611079816139f8565b60ff81168114613a1a57600080fd5b600080600080600080600060e0888a031215613c5c57600080fd5b8735613c67816139f8565b96506020880135613c77816139f8565b955060408801359450606088013593506080880135613c9581613c32565b9699959850939692959460a0840135945060c09093013592915050565b600060208284031215613cc457600080fd5b813563ffffffff8116811461107957600080fd5b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101949350505050565b600060208284031215613d6257600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015613daa57613daa613d69565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613de757613de7613d69565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082613e2a57613e2a613dec565b500490565b600060208284031215613e4157600080fd5b815161107981613c32565b600060ff821660ff841680821015613e6657613e66613d69565b90039392505050565b600181815b80851115613eb857816fffffffffffffffffffffffffffffffff04821115613e9e57613e9e613d69565b80851615613eab57918102915b93841c9390800290613e74565b509250929050565b600082613ecf57506001610e91565b81613edc57506000610e91565b8160018114613ef25760028114613efc57613f39565b6001915050610e91565b60ff841115613f0d57613f0d613d69565b6001841b91506fffffffffffffffffffffffffffffffff821115613f3357613f33613d69565b50610e91565b5060208310610133831016604e8410600b8410161715613f7c575081810a6fffffffffffffffffffffffffffffffff811115613f7757613f77613d69565b610e91565b613f868383613e6f565b806fffffffffffffffffffffffffffffffff04821115613fa857613fa8613d69565b029392505050565b600061107960ff84166fffffffffffffffffffffffffffffffff8416613ec0565b60008219821115613fe457613fe4613d69565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361401a5761401a613d69565b5060010190565b60008261403057614030613dec565b500690565b60006020828403121561404757600080fd5b8151611079816139f8565b60006020828403121561406457600080fd5b8151801515811461107957600080fd5b60008251614086818460208701613ab3565b919091019291505056fea26469706673582212203e44df173bf8b96b4a1374366096588fcbf1bcf6ea660ff03b8dcc920b20b76364736f6c634300080f0033a2646970667358221220a6302310c7e3d17833fbb53cb1f00f314af7de77c266b58af60626ff0446dccc64736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:737:22",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:22",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "151:289:22",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "161:27:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "181:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "175:5:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "175:13:22"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "165:6:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "197:10:22",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "206:1:22",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "201:1:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:77:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "293:3:22"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "298:1:22"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "289:3:22"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "289:11:22"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "316:6:22"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "324:1:22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "312:3:22"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "312:14:22"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "328:4:22",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "308:3:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "308:25:22"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "302:5:22"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "302:32:22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "282:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "282:53:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "282:53:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "227:1:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "230:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "224:2:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:13:22"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "238:21:22",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "240:17:22",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "249:1:22"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "252:4:22",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "245:3:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "245:12:22"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "240:1:22"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "220:3:22",
                    "statements": []
                  },
                  "src": "216:129:22"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "371:31:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "384:3:22"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "389:6:22"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "380:3:22"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "380:16:22"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "398:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "373:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "373:27:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "373:27:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "360:1:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "363:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "357:2:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "357:13:22"
                  },
                  "nodeType": "YulIf",
                  "src": "354:48:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "411:23:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "422:3:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "427:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:16:22"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "411:3:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "127:3:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "132:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "143:3:22",
                "type": ""
              }
            ],
            "src": "14:426:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "526:209:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "572:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "581:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "584:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "574:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "574:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "574:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "547:7:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "556:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "543:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "543:23:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "568:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "539:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "539:32:22"
                  },
                  "nodeType": "YulIf",
                  "src": "536:52:22"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "597:29:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "616:9:22"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "610:5:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "610:16:22"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "601:5:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "689:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "698:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "701:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "691:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "691:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "691:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "648:5:22"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "674:3:22",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "679:1:22",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "670:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "670:11:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "683:1:22",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "666:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "666:19:22"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "655:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "655:31:22"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "645:2:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "645:42:22"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "638:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "638:50:22"
                  },
                  "nodeType": "YulIf",
                  "src": "635:70:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "714:15:22",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "724:5:22"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "714:6:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "492:9:22",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "503:7:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "515:6:22",
                "type": ""
              }
            ],
            "src": "445:290:22"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 22,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5960:22",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:22",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:125:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "190:42:22",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:55:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:74:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:74:22"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:22",
                "type": ""
              }
            ],
            "src": "14:226:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:147:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "304:29:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "326:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "313:12:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "313:20:22"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "304:5:22"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "419:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "428:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "431:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "421:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "421:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "421:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "355:5:22"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "366:5:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "373:42:22",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "362:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "362:54:22"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "352:2:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "352:65:22"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:73:22"
                  },
                  "nodeType": "YulIf",
                  "src": "342:93:22"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "273:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "284:5:22",
                "type": ""
              }
            ],
            "src": "245:196:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "533:167:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "579:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "588:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "591:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "581:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "581:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "581:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "554:7:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "563:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "550:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "550:23:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "575:2:22",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "546:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "546:32:22"
                  },
                  "nodeType": "YulIf",
                  "src": "543:52:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "604:39:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "633:9:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "614:18:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:29:22"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "604:6:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "652:42:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "679:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "690:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "675:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "675:18:22"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "662:12:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "662:32:22"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "652:6:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "491:9:22",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "502:7:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "514:6:22",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "522:6:22",
                "type": ""
              }
            ],
            "src": "446:254:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "775:110:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "821:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "830:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "833:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "823:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "823:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "823:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "796:7:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "805:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "792:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "792:23:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "817:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "788:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "788:32:22"
                  },
                  "nodeType": "YulIf",
                  "src": "785:52:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "846:33:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "869:9:22"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "856:12:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "856:23:22"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "846:6:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "741:9:22",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "752:7:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "764:6:22",
                "type": ""
              }
            ],
            "src": "705:180:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "991:76:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1001:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1013:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1024:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1009:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1009:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1001:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1043:9:22"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1054:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1036:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1036:25:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1036:25:22"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "960:9:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "971:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "982:4:22",
                "type": ""
              }
            ],
            "src": "890:177:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1173:76:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1183:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1195:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1206:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1191:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1191:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1183:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1225:9:22"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1236:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1218:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1218:25:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1218:25:22"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1142:9:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1153:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1164:4:22",
                "type": ""
              }
            ],
            "src": "1072:177:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1324:116:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1370:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1379:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1382:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1372:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1372:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1372:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1345:7:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1354:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1341:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1341:23:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1366:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1337:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1337:32:22"
                  },
                  "nodeType": "YulIf",
                  "src": "1334:52:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1395:39:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1424:9:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1405:18:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1405:29:22"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1395:6:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1290:9:22",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1301:7:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1313:6:22",
                "type": ""
              }
            ],
            "src": "1254:186:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1549:218:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1595:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1604:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1607:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1597:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1597:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1597:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1570:7:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1579:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1566:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1566:23:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1591:2:22",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1562:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1562:32:22"
                  },
                  "nodeType": "YulIf",
                  "src": "1559:52:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1620:39:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1649:9:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1630:18:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1630:29:22"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1620:6:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1668:42:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1695:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1706:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1691:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1691:18:22"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1678:12:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1678:32:22"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1668:6:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1719:42:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1746:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1757:2:22",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1742:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1742:18:22"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1729:12:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1729:32:22"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1719:6:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1499:9:22",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1510:7:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1522:6:22",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1530:6:22",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1538:6:22",
                "type": ""
              }
            ],
            "src": "1445:322:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1858:264:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1904:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1913:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1916:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1906:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1906:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1906:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1879:7:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1888:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1875:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1875:23:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1900:2:22",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1871:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1871:32:22"
                  },
                  "nodeType": "YulIf",
                  "src": "1868:52:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1929:39:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1958:9:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1939:18:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1939:29:22"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1929:6:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1977:45:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2007:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2018:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2003:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2003:18:22"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1990:12:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1990:32:22"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1981:5:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2076:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2085:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2088:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2078:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2078:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2078:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2044:5:22"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2055:5:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2062:10:22",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2051:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2051:22:22"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2041:2:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2041:33:22"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2034:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2034:41:22"
                  },
                  "nodeType": "YulIf",
                  "src": "2031:61:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2101:15:22",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2111:5:22"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2101:6:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1816:9:22",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1827:7:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1839:6:22",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1847:6:22",
                "type": ""
              }
            ],
            "src": "1772:350:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2214:173:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2260:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2269:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2272:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2262:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2262:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2262:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2235:7:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2244:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2231:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2231:23:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2256:2:22",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2227:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2227:32:22"
                  },
                  "nodeType": "YulIf",
                  "src": "2224:52:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2285:39:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2314:9:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2295:18:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2295:29:22"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2285:6:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2333:48:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2366:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2377:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2362:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2362:18:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2343:18:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2343:38:22"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2333:6:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2172:9:22",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2183:7:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2195:6:22",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2203:6:22",
                "type": ""
              }
            ],
            "src": "2127:260:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2566:169:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2583:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2594:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2576:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2576:21:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2576:21:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2617:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2628:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2613:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2613:18:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2633:2:22",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2606:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2606:30:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2606:30:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2656:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2667:2:22",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2652:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2652:18:22"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2672:21:22",
                        "type": "",
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2645:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2645:49:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2645:49:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2703:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2715:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2726:2:22",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2711:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2711:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2703:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2543:9:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2557:4:22",
                "type": ""
              }
            ],
            "src": "2392:343:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2914:173:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2931:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2942:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2924:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2924:21:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2924:21:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2965:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2976:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2961:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2961:18:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2981:2:22",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2954:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2954:30:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2954:30:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3004:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3015:2:22",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3000:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3000:18:22"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e5f464545",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3020:25:22",
                        "type": "",
                        "value": "Nomiswap: FORBIDDEN_FEE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2993:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2993:53:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2993:53:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3055:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3067:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3078:2:22",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3063:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3063:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3055:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_90b73549368af0ae6cdb0c9edf500f2f0d39c143efb4b8689b0b8abb658de3e2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2891:9:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2905:4:22",
                "type": ""
              }
            ],
            "src": "2740:347:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3221:119:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3231:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3243:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3254:2:22",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3239:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3239:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3231:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3273:9:22"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3284:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3266:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3266:25:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3266:25:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3311:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3322:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3307:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3307:18:22"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3327:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3300:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3300:34:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3300:34:22"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3182:9:22",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3193:6:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3201:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3212:4:22",
                "type": ""
              }
            ],
            "src": "3092:248:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3444:93:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3454:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3466:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3477:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3462:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3462:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3454:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3496:9:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3511:6:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3519:10:22",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3507:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3507:23:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3489:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3489:42:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3489:42:22"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3413:9:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3424:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3435:4:22",
                "type": ""
              }
            ],
            "src": "3345:192:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3716:179:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3733:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3744:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3726:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3726:21:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3726:21:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3767:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3778:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3763:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3763:18:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3783:2:22",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3756:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3756:30:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3756:30:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3806:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3817:2:22",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3802:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3802:18:22"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a204944454e544943414c5f414444524553534553",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3822:31:22",
                        "type": "",
                        "value": "Nomiswap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3795:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3795:59:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3795:59:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3863:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3875:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3886:2:22",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3871:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3871:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3863:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a90c6f057c10e1a53d74da75bc56c676fd121fbdb3c3cf8b1ff7e64725a22925__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3693:9:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3707:4:22",
                "type": ""
              }
            ],
            "src": "3542:353:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4074:172:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4091:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4102:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4084:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4084:21:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4084:21:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4125:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4136:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4121:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4121:18:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4141:2:22",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4114:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4114:30:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4114:30:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4164:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4175:2:22",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4160:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4160:18:22"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a205a45524f5f41444452455353",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4180:24:22",
                        "type": "",
                        "value": "Nomiswap: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4153:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4153:52:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4153:52:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4214:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4226:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4237:2:22",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4222:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4222:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4214:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_405e2892877ce8e6370fa3a0dded544224faed24ee93c93308d1a806b4e016ab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4051:9:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4065:4:22",
                "type": ""
              }
            ],
            "src": "3900:346:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4425:171:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4442:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4453:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4435:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4435:21:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4435:21:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4476:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4487:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4472:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4472:18:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4492:2:22",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4465:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4465:30:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4465:30:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4515:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4526:2:22",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4511:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4511:18:22"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20504149525f455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4531:23:22",
                        "type": "",
                        "value": "Nomiswap: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4504:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4504:51:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4504:51:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4564:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4576:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4587:2:22",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4572:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4572:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4564:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5ace30fe13309f9ef6658b58036e9987d38a6a9e5c2410c1ff9a1017d5d88bae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4402:9:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4416:4:22",
                "type": ""
              }
            ],
            "src": "4251:345:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4748:221:22",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4758:76:22",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4768:66:22",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4762:2:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4850:3:22"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4863:2:22",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4867:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4859:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4859:15:22"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4876:2:22"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4855:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4855:24:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4843:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4843:37:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4843:37:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4900:3:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4905:2:22",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4896:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4896:12:22"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4918:2:22",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4922:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4914:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4914:15:22"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4931:2:22"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4910:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4910:24:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4889:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4889:46:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4889:46:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4944:19:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4955:3:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4960:2:22",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4951:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4951:12:22"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4944:3:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4716:3:22",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4721:6:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4729:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4740:3:22",
                "type": ""
              }
            ],
            "src": "4601:368:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5148:176:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5165:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5176:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5158:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5158:21:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5158:21:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5199:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5210:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5195:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5195:18:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5215:2:22",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5188:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5188:30:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5188:30:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5238:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5249:2:22",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5234:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5234:18:22"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20504149525f4e4f545f43524541544544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5254:28:22",
                        "type": "",
                        "value": "Nomiswap: PAIR_NOT_CREATED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5227:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5227:56:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5227:56:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5292:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5304:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5315:2:22",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5300:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5300:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5292:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4cd3c6d7e8df26671528fa650a7de99101eba8529ad12a9bcaca2a5489122164__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5125:9:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5139:4:22",
                "type": ""
              }
            ],
            "src": "4974:350:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5458:198:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5468:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5480:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5491:2:22",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5476:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5476:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5468:4:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5503:52:22",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5513:42:22",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5507:2:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5571:9:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5586:6:22"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5594:2:22"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5582:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5582:15:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5564:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5564:34:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5564:34:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5618:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5629:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5614:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5614:18:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5638:6:22"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5646:2:22"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5634:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5634:15:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5607:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5607:43:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5607:43:22"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5419:9:22",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5430:6:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5438:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5449:4:22",
                "type": ""
              }
            ],
            "src": "5329:327:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5790:168:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5800:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5812:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5823:2:22",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5808:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5808:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5800:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5842:9:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5857:6:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5865:42:22",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5853:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5853:55:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5835:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5835:74:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5835:74:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5929:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5940:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5925:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5925:18:22"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5945:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5918:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5918:34:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5918:34:22"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5751:9:22",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5762:6:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5770:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5781:4:22",
                "type": ""
              }
            ],
            "src": "5661:297:22"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Nomiswap: FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_90b73549368af0ae6cdb0c9edf500f2f0d39c143efb4b8689b0b8abb658de3e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Nomiswap: FORBIDDEN_FEE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_a90c6f057c10e1a53d74da75bc56c676fd121fbdb3c3cf8b1ff7e64725a22925__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Nomiswap: IDENTICAL_ADDRESSES\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_405e2892877ce8e6370fa3a0dded544224faed24ee93c93308d1a806b4e016ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Nomiswap: ZERO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5ace30fe13309f9ef6658b58036e9987d38a6a9e5c2410c1ff9a1017d5d88bae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Nomiswap: PAIR_EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_stringliteral_4cd3c6d7e8df26671528fa650a7de99101eba8529ad12a9bcaca2a5489122164__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Nomiswap: PAIR_NOT_CREATED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 22,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "147:2731:8:-:0;;;;;318:33;;;:::i;:::-;-1:-1:-1;;318:33:8;;;;;;;;;;;;;;;;301:51;;318:33;;301:51;;:::i;:::-;;;;;;;;;;;;;291:62;;;;;;259:94;;460:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;504:11;:26;;-1:-1:-1;;;;;;504:26:8;-1:-1:-1;;;;;504:26:8;;;;;;;;;;147:2731;;;;;;;;;;:::o;14:426:22:-;143:3;181:6;175:13;206:1;216:129;230:6;227:1;224:13;216:129;;;328:4;312:14;;;308:25;;302:32;289:11;;;282:53;245:12;216:129;;;363:6;360:1;357:13;354:48;;;398:1;389:6;384:3;380:16;373:27;354:48;-1:-1:-1;418:16:22;;;;;14:426;-1:-1:-1;;14:426:22:o;445:290::-;515:6;568:2;556:9;547:7;543:23;539:32;536:52;;;584:1;581;574:12;536:52;610:16;;-1:-1:-1;;;;;655:31:22;;645:42;;635:70;;701:1;698;691:12;635:70;724:5;445:290;-1:-1:-1;;;445:290:22:o;:::-;147:2731:8;;;;;;",
  "deployedSourceMap": "147:2731:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;201:20;;;;;;;;;;;;190:42:22;178:55;;;160:74;;148:2;133:18;201:20:8;;;;;;;;227:26;;;;;;;;;2047:246;;;;;;:::i;:::-;;:::i;:::-;;428:25;;;;;;:::i;:::-;;:::i;259:94::-;;;;;;;;;1036:25:22;;;1024:2;1009:18;259:94:8;890:177:22;543:94:8;615:8;:15;543:94;;2715:160;;;;;;:::i;:::-;;:::i;2497:212::-;;;;;;:::i;:::-;;:::i;2299:192::-;;;;;;:::i;:::-;;:::i;1876:165::-;;;;;;:::i;:::-;;:::i;643:1080::-;;;;;;:::i;:::-;;:::i;360:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1729:141;;;;;;:::i;:::-;;:::i;2047:246::-;2139:11;;;;2125:10;:25;2117:57;;;;;;;2594:2:22;2117:57:8;;;2576:21:22;2633:2;2613:18;;;2606:30;2672:21;2652:18;;;2645:49;2711:18;;2117:57:8;;;;;;;;;2202:1;2192:7;:11;2184:47;;;;;;;2942:2:22;2184:47:8;;;2924:21:22;2981:2;2961:18;;;2954:30;3020:25;3000:18;;;2993:53;3063:18;;2184:47:8;2740:347:22;2184:47:8;2241:45;;;;;;;;1036:25:22;;;2241:36:8;;;;;;1009:18:22;;2241:45:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2047:246;;:::o;428:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;428:25:8;:::o;2715:160::-;2790:11;;;;2776:10;:25;2768:57;;;;;;;2594:2:22;2768:57:8;;;2576:21:22;2633:2;2613:18;;;2606:30;2672:21;2652:18;;;2645:49;2711:18;;2768:57:8;2392:343:22;2768:57:8;2850:5;2835:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2715:160;:::o;2497:212::-;2607:11;;;;2593:10;:25;2585:57;;;;;;;2594:2:22;2585:57:8;;;2576:21:22;2633:2;2613:18;;;2606:30;2672:21;2652:18;;;2645:49;2711:18;;2585:57:8;2392:343:22;2585:57:8;2652:50;;;;;;;;3266:25:22;;;3307:18;;;3300:34;;;2652:27:8;;;;;;3239:18:22;;2652:50:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2497:212;;;:::o;2299:192::-;2392:11;;;;2378:10;:25;2370:57;;;;;;;2594:2:22;2370:57:8;;;2576:21:22;2633:2;2613:18;;;2606:30;2672:21;2652:18;;;2645:49;2711:18;;2370:57:8;2392:343:22;2370:57:8;2437:47;;;;;3519:10:22;3507:23;;2437:47:8;;;3489:42:22;2437:37:8;;;;;;3462:18:22;;2437:47:8;3345:192:22;1876:165:8;1963:11;;;;1949:10;:25;1941:57;;;;;;;2594:2:22;1941:57:8;;;2576:21:22;2633:2;2613:18;;;2606:30;2672:21;2652:18;;;2645:49;2711:18;;1941:57:8;2392:343:22;1941:57:8;2008:11;:26;;;;;;;;;;;;;;;1876:165::o;643:1080::-;759:11;;713:12;;759:11;;745:10;:25;737:57;;;;;;;2594:2:22;737:57:8;;;2576:21:22;2633:2;2613:18;;;2606:30;2672:21;2652:18;;;2645:49;2711:18;;737:57:8;2392:343:22;737:57:8;822:6;812:16;;:6;:16;;;804:58;;;;;;;3744:2:22;804:58:8;;;3726:21:22;3783:2;3763:18;;;3756:30;3822:31;3802:18;;;3795:59;3871:18;;804:58:8;3542:353:22;804:58:8;873:14;889;916:6;907:15;;:6;:15;;;:53;;945:6;953;907:53;;;926:6;934;907:53;872:88;;-1:-1:-1;872:88:8;-1:-1:-1;978:20:8;;;970:55;;;;;;;4102:2:22;970:55:8;;;4084:21:22;4141:2;4121:18;;;4114:30;4180:24;4160:18;;;4153:52;4222:18;;970:55:8;3900:346:22;970:55:8;1043:37;:15;;;1078:1;1043:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:37;1035:71;;;;;;;4453:2:22;1035:71:8;;;4435:21:22;4492:2;4472:18;;;4465:30;4531:23;4511:18;;;4504:51;4572:18;;1035:71:8;4251:345:22;1035:71:8;1146:21;1170:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4768:66:22;4863:2;4859:15;;;4855:24;;1170:33:8;1238:32;;4843:37:22;4914:15;;;4910:24;4896:12;;;4889:46;1170:33:8;;-1:-1:-1;1213:12:8;;4951::22;;1238:32:8;;;;;;;;;;;;1228:43;;;;;;1213:58;;1359:4;1348:8;1342:15;1337:2;1327:8;1323:17;1320:1;1312:52;1304:60;-1:-1:-1;1391:18:8;;;1383:57;;;;;;;5176:2:22;1383:57:8;;;5158:21:22;5215:2;5195:18;;;5188:30;5254:28;5234:18;;;5227:56;5300:18;;1383:57:8;4974:350:22;1383:57:8;1450:47;;;;;:31;5582:15:22;;;1450:47:8;;;5564:34:22;5634:15;;;5614:18;;;5607:43;1450:31:8;;;;;5476:18:22;;1450:47:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1507:15:8;;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:30;;;;;;;;;;;;;;1547:15;;;;;;:23;;;;;;;;:30;;;;;;;;1632:8;:19;;-1:-1:-1;1632:19:8;;;;;;;;;;;;;;;;;;;;;;1700:15;;1666:50;;5835:74:22;;;5925:18;;;5918:34;1666:50:8;;5808:18:22;1666:50:8;;;;;;;727:996;;;;643:1080;;;;:::o;1729:141::-;1804:11;;;;1790:10;:25;1782:57;;;;;;;2594:2:22;1782:57:8;;;2576:21:22;2633:2;2613:18;;;2606:30;2672:21;2652:18;;;2645:49;2711:18;;1782:57:8;2392:343:22;1782:57:8;1849:5;:14;;;;;;;;;;;;;;;1729:141::o;-1:-1:-1:-;;;;;;;;:::o;245:196:22:-;313:20;;373:42;362:54;;352:65;;342:93;;431:1;428;421:12;342:93;245:196;;;:::o;446:254::-;514:6;522;575:2;563:9;554:7;550:23;546:32;543:52;;;591:1;588;581:12;543:52;614:29;633:9;614:29;:::i;:::-;604:39;690:2;675:18;;;;662:32;;-1:-1:-1;;;446:254:22:o;705:180::-;764:6;817:2;805:9;796:7;792:23;788:32;785:52;;;833:1;830;823:12;785:52;-1:-1:-1;856:23:22;;705:180;-1:-1:-1;705:180:22:o;1254:186::-;1313:6;1366:2;1354:9;1345:7;1341:23;1337:32;1334:52;;;1382:1;1379;1372:12;1334:52;1405:29;1424:9;1405:29;:::i;:::-;1395:39;1254:186;-1:-1:-1;;;1254:186:22:o;1445:322::-;1522:6;1530;1538;1591:2;1579:9;1570:7;1566:23;1562:32;1559:52;;;1607:1;1604;1597:12;1559:52;1630:29;1649:9;1630:29;:::i;:::-;1620:39;1706:2;1691:18;;1678:32;;-1:-1:-1;1757:2:22;1742:18;;;1729:32;;1445:322;-1:-1:-1;;;1445:322:22:o;1772:350::-;1839:6;1847;1900:2;1888:9;1879:7;1875:23;1871:32;1868:52;;;1916:1;1913;1906:12;1868:52;1939:29;1958:9;1939:29;:::i;:::-;1929:39;;2018:2;2007:9;2003:18;1990:32;2062:10;2055:5;2051:22;2044:5;2041:33;2031:61;;2088:1;2085;2078:12;2031:61;2111:5;2101:15;;;1772:350;;;;;:::o;2127:260::-;2195:6;2203;2256:2;2244:9;2235:7;2231:23;2227:32;2224:52;;;2272:1;2269;2262:12;2224:52;2295:29;2314:9;2295:29;:::i;:::-;2285:39;;2343:38;2377:2;2366:9;2362:18;2343:38;:::i;:::-;2333:48;;2127:260;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.15;\n\nimport './StableSwapPair.sol';\nimport './interfaces/INomiswapFactory.sol';\n\ncontract StableSwapFactory is INomiswapFactory {\n\n    address public feeTo;\n    address public feeToSetter;\n    bytes32 public INIT_CODE_HASH = keccak256(abi.encodePacked(type(StableSwapPair).creationCode));\n\n    mapping(address => mapping(address => address)) public getPair;\n    address[] public allPairs;\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    function allPairsLength() external view returns (uint) {\n        return allPairs.length;\n    }\n\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        require(tokenA != tokenB, 'Nomiswap: IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'Nomiswap: ZERO_ADDRESS');\n        require(getPair[token0][token1] == address(0), 'Nomiswap: PAIR_EXISTS'); // single check is sufficient\n        bytes memory bytecode = type(StableSwapPair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        require(pair != address(0), \"Nomiswap: PAIR_NOT_CREATED\");\n        StableSwapPair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        feeToSetter = _feeToSetter;\n    }\n\n    function setDevFee(address _pair, uint256 _devFee) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        require(_devFee > 0, 'Nomiswap: FORBIDDEN_FEE');\n        INomiswapStablePair(_pair).setDevFee(_devFee);\n    }\n\n    function setSwapFee(address _pair, uint32 _swapFee) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        INomiswapStablePair(_pair).setSwapFee(_swapFee);\n    }\n\n    function rampA(address _pair, uint256 _futureA, uint256 _futureTime) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        StableSwapPair(_pair).rampA(_futureA, _futureTime);\n    }\n\n    function stopRampA(address _pair) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        StableSwapPair(_pair).stopRampA();\n    }\n\n}\n",
  "sourcePath": "/home/ivan/repo/dex-stable-swap/contracts/StableSwapFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/StableSwapFactory.sol",
    "exportedSymbols": {
      "Address": [
        754
      ],
      "FactoryGuard": [
        4214
      ],
      "IERC20": [
        117
      ],
      "IERC20Metadata": [
        142
      ],
      "IERC20Permit": [
        178
      ],
      "INomiswapCallee": [
        3292
      ],
      "INomiswapERC20": [
        3375
      ],
      "INomiswapFactory": [
        3450
      ],
      "INomiswapPair": [
        3563
      ],
      "INomiswapStablePair": [
        3634
      ],
      "Math": [
        3710
      ],
      "MathUtils": [
        3743
      ],
      "ReentrancyGuard": [
        39
      ],
      "SafeERC20": [
        459
      ],
      "StableSwapERC20": [
        1160
      ],
      "StableSwapFactory": [
        1475
      ],
      "StableSwapPair": [
        3278
      ],
      "UQ112x112": [
        3787
      ]
    },
    "id": 1476,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1162,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:24:8"
      },
      {
        "absolutePath": "project:/contracts/StableSwapPair.sol",
        "file": "./StableSwapPair.sol",
        "id": 1163,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1476,
        "sourceUnit": 3279,
        "src": "71:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/INomiswapFactory.sol",
        "file": "./interfaces/INomiswapFactory.sol",
        "id": 1164,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1476,
        "sourceUnit": 3451,
        "src": "102:43:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1165,
              "name": "INomiswapFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3450,
              "src": "177:16:8"
            },
            "id": 1166,
            "nodeType": "InheritanceSpecifier",
            "src": "177:16:8"
          }
        ],
        "canonicalName": "StableSwapFactory",
        "contractDependencies": [
          3278
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1475,
        "linearizedBaseContracts": [
          1475,
          3450
        ],
        "name": "StableSwapFactory",
        "nameLocation": "156:17:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              3392
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 1168,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "216:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 1475,
            "src": "201:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1167,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "201:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3397
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 1170,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "242:11:8",
            "nodeType": "VariableDeclaration",
            "scope": 1475,
            "src": "227:26:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1169,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "227:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3402
            ],
            "constant": false,
            "functionSelector": "257671f5",
            "id": 1181,
            "mutability": "mutable",
            "name": "INIT_CODE_HASH",
            "nameLocation": "274:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 1475,
            "src": "259:94:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1171,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "259:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1176,
                            "name": "StableSwapPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3278,
                            "src": "323:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_StableSwapPair_$3278_$",
                              "typeString": "type(contract StableSwapPair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_StableSwapPair_$3278_$",
                              "typeString": "type(contract StableSwapPair)"
                            }
                          ],
                          "id": 1175,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "318:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "318:20:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_StableSwapPair_$3278",
                          "typeString": "type(contract StableSwapPair)"
                        }
                      },
                      "id": 1178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "318:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "expression": {
                      "id": 1173,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "301:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "301:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 1179,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "301:51:8",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 1172,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "291:9:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1180,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "291:62:8",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3411
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 1187,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "415:7:8",
            "nodeType": "VariableDeclaration",
            "scope": 1475,
            "src": "360:62:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1186,
              "keyType": {
                "id": 1182,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "368:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "360:47:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1185,
                "keyType": {
                  "id": 1183,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "387:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "379:27:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1184,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "398:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3418
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 1190,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "445:8:8",
            "nodeType": "VariableDeclaration",
            "scope": 1475,
            "src": "428:25:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1188,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "428:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1189,
              "nodeType": "ArrayTypeName",
              "src": "428:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1199,
              "nodeType": "Block",
              "src": "494:43:8",
              "statements": [
                {
                  "expression": {
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1195,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1170,
                      "src": "504:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1196,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1192,
                      "src": "518:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "504:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1198,
                  "nodeType": "ExpressionStatement",
                  "src": "504:26:8"
                }
              ]
            },
            "id": 1200,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1192,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "480:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "472:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "471:22:8"
            },
            "returnParameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:0:8"
            },
            "scope": 1475,
            "src": "460:77:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3423
            ],
            "body": {
              "id": 1208,
              "nodeType": "Block",
              "src": "598:39:8",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1205,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "615:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "615:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1204,
                  "id": 1207,
                  "nodeType": "Return",
                  "src": "608:22:8"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 1209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "552:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "566:2:8"
            },
            "returnParameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1209,
                  "src": "592:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "591:6:8"
            },
            "scope": 1475,
            "src": "543:94:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3432
            ],
            "body": {
              "id": 1338,
              "nodeType": "Block",
              "src": "727:996:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1219,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "745:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "745:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1221,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1170,
                          "src": "759:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "745:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "772:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "737:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "737:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "737:57:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1227,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1211,
                          "src": "812:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1228,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1213,
                          "src": "822:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "812:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a204944454e544943414c5f414444524553534553",
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "830:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a90c6f057c10e1a53d74da75bc56c676fd121fbdb3c3cf8b1ff7e64725a22925",
                          "typeString": "literal_string \"Nomiswap: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Nomiswap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a90c6f057c10e1a53d74da75bc56c676fd121fbdb3c3cf8b1ff7e64725a22925",
                          "typeString": "literal_string \"Nomiswap: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "804:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "804:58:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "804:58:8"
                },
                {
                  "assignments": [
                    1234,
                    1236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1234,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "881:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1338,
                      "src": "873:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1233,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "873:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1236,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "897:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1338,
                      "src": "889:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1235,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "889:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1247,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1237,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1211,
                        "src": "907:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1238,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1213,
                        "src": "916:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "907:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 1243,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1213,
                          "src": "945:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1244,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1211,
                          "src": "953:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1245,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "944:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "907:53:8",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 1240,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1211,
                          "src": "926:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1241,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1213,
                          "src": "934:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1242,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "925:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "872:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1249,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1234,
                          "src": "978:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "996:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "988:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1250,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "988:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "988:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "978:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a205a45524f5f41444452455353",
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1000:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_405e2892877ce8e6370fa3a0dded544224faed24ee93c93308d1a806b4e016ab",
                          "typeString": "literal_string \"Nomiswap: ZERO_ADDRESS\""
                        },
                        "value": "Nomiswap: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_405e2892877ce8e6370fa3a0dded544224faed24ee93c93308d1a806b4e016ab",
                          "typeString": "literal_string \"Nomiswap: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 1248,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "970:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "970:55:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "970:55:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1259,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1187,
                              "src": "1043:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 1261,
                            "indexExpression": {
                              "id": 1260,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1234,
                              "src": "1051:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1043:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1263,
                          "indexExpression": {
                            "id": 1262,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1236,
                            "src": "1059:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1043:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1078:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1070:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1264,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1070:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1070:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1043:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20504149525f455849535453",
                        "id": 1269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1082:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ace30fe13309f9ef6658b58036e9987d38a6a9e5c2410c1ff9a1017d5d88bae",
                          "typeString": "literal_string \"Nomiswap: PAIR_EXISTS\""
                        },
                        "value": "Nomiswap: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ace30fe13309f9ef6658b58036e9987d38a6a9e5c2410c1ff9a1017d5d88bae",
                          "typeString": "literal_string \"Nomiswap: PAIR_EXISTS\""
                        }
                      ],
                      "id": 1258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1035:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1035:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1271,
                  "nodeType": "ExpressionStatement",
                  "src": "1035:71:8"
                },
                {
                  "assignments": [
                    1273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1273,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1159:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1338,
                      "src": "1146:21:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1272,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1146:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1278,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1275,
                          "name": "StableSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3278,
                          "src": "1175:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_StableSwapPair_$3278_$",
                            "typeString": "type(contract StableSwapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_StableSwapPair_$3278_$",
                            "typeString": "type(contract StableSwapPair)"
                          }
                        ],
                        "id": 1274,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1170:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1170:20:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_StableSwapPair_$3278",
                        "typeString": "type(contract StableSwapPair)"
                      }
                    },
                    "id": 1277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1170:33:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1146:57:8"
                },
                {
                  "assignments": [
                    1280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1280,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1221:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1338,
                      "src": "1213:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1279,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1213:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1288,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1284,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1234,
                            "src": "1255:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1285,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1236,
                            "src": "1263:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1282,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1238:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1238:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1238:32:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1281,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1228:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1213:58:8"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1290:84:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1304:60:8",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1320:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1327:8:8"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1337:2:8",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1323:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1323:17:8"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1348:8:8"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1342:5:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1342:15:8"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1359:4:8"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1312:7:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1312:52:8"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1304:4:8"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1273,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1327:8:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1273,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1348:8:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1216,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1304:4:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1280,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1359:4:8",
                      "valueSize": 1
                    }
                  ],
                  "id": 1289,
                  "nodeType": "InlineAssembly",
                  "src": "1281:93:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1291,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1216,
                          "src": "1391:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1407:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1399:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1292,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1399:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1399:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1391:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20504149525f4e4f545f43524541544544",
                        "id": 1297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1411:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cd3c6d7e8df26671528fa650a7de99101eba8529ad12a9bcaca2a5489122164",
                          "typeString": "literal_string \"Nomiswap: PAIR_NOT_CREATED\""
                        },
                        "value": "Nomiswap: PAIR_NOT_CREATED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cd3c6d7e8df26671528fa650a7de99101eba8529ad12a9bcaca2a5489122164",
                          "typeString": "literal_string \"Nomiswap: PAIR_NOT_CREATED\""
                        }
                      ],
                      "id": 1290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1383:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1383:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1299,
                  "nodeType": "ExpressionStatement",
                  "src": "1383:57:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1304,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1234,
                        "src": "1482:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1305,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1236,
                        "src": "1490:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1301,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1216,
                            "src": "1465:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1300,
                          "name": "StableSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3278,
                          "src": "1450:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_StableSwapPair_$3278_$",
                            "typeString": "type(contract StableSwapPair)"
                          }
                        },
                        "id": 1302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1450:20:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StableSwapPair_$3278",
                          "typeString": "contract StableSwapPair"
                        }
                      },
                      "id": 1303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1644,
                      "src": "1450:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1450:47:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1307,
                  "nodeType": "ExpressionStatement",
                  "src": "1450:47:8"
                },
                {
                  "expression": {
                    "id": 1314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1308,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1187,
                          "src": "1507:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1311,
                        "indexExpression": {
                          "id": 1309,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1234,
                          "src": "1515:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1507:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1312,
                      "indexExpression": {
                        "id": 1310,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1236,
                        "src": "1523:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1507:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1313,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1216,
                      "src": "1533:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1507:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1315,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:30:8"
                },
                {
                  "expression": {
                    "id": 1322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1316,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1187,
                          "src": "1547:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1319,
                        "indexExpression": {
                          "id": 1317,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1236,
                          "src": "1555:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1547:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1320,
                      "indexExpression": {
                        "id": 1318,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1234,
                        "src": "1563:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1547:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1321,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1216,
                      "src": "1573:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1547:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1323,
                  "nodeType": "ExpressionStatement",
                  "src": "1547:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1327,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1216,
                        "src": "1646:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1324,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1190,
                        "src": "1632:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1632:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1329,
                  "nodeType": "ExpressionStatement",
                  "src": "1632:19:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1331,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1234,
                        "src": "1678:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1332,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1236,
                        "src": "1686:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1333,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1216,
                        "src": "1694:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1334,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1190,
                          "src": "1700:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1700:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1330,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3387,
                      "src": "1666:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1666:50:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1337,
                  "nodeType": "EmitStatement",
                  "src": "1661:55:8"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 1339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "652:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1211,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "671:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1339,
                  "src": "663:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1213,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "687:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1339,
                  "src": "679:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "662:32:8"
            },
            "returnParameters": {
              "id": 1217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1216,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "721:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1339,
                  "src": "713:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "713:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "712:14:8"
            },
            "scope": 1475,
            "src": "643:1080:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3437
            ],
            "body": {
              "id": 1356,
              "nodeType": "Block",
              "src": "1772:98:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1345,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1790:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1790:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1347,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1170,
                          "src": "1804:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1790:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1817:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1344,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1782:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1782:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1351,
                  "nodeType": "ExpressionStatement",
                  "src": "1782:57:8"
                },
                {
                  "expression": {
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1352,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "1849:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1353,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1341,
                      "src": "1857:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1849:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1355,
                  "nodeType": "ExpressionStatement",
                  "src": "1849:14:8"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 1357,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1738:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1341,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1755:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "1747:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1747:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1746:16:8"
            },
            "returnParameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1772:0:8"
            },
            "scope": 1475,
            "src": "1729:141:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3442
            ],
            "body": {
              "id": 1374,
              "nodeType": "Block",
              "src": "1931:110:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1363,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1949:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1949:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1365,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1170,
                          "src": "1963:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1949:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1976:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1941:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1369,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:57:8"
                },
                {
                  "expression": {
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1370,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1170,
                      "src": "2008:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1371,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1359,
                      "src": "2022:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2008:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1373,
                  "nodeType": "ExpressionStatement",
                  "src": "2008:26:8"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 1375,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1885:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1359,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1908:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "1900:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1900:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1899:22:8"
            },
            "returnParameters": {
              "id": 1361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1931:0:8"
            },
            "scope": 1475,
            "src": "1876:165:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1404,
              "nodeType": "Block",
              "src": "2107:186:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1383,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2125:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2125:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1385,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1170,
                          "src": "2139:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2125:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2152:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1382,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2117:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2117:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1389,
                  "nodeType": "ExpressionStatement",
                  "src": "2117:57:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1391,
                          "name": "_devFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1379,
                          "src": "2192:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2202:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2192:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e5f464545",
                        "id": 1394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2205:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90b73549368af0ae6cdb0c9edf500f2f0d39c143efb4b8689b0b8abb658de3e2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN_FEE\""
                        },
                        "value": "Nomiswap: FORBIDDEN_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90b73549368af0ae6cdb0c9edf500f2f0d39c143efb4b8689b0b8abb658de3e2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN_FEE\""
                        }
                      ],
                      "id": 1390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2184:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2184:47:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1396,
                  "nodeType": "ExpressionStatement",
                  "src": "2184:47:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1401,
                        "name": "_devFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1379,
                        "src": "2278:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1398,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "2261:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1397,
                          "name": "INomiswapStablePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3634,
                          "src": "2241:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_INomiswapStablePair_$3634_$",
                            "typeString": "type(contract INomiswapStablePair)"
                          }
                        },
                        "id": 1399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2241:26:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INomiswapStablePair_$3634",
                          "typeString": "contract INomiswapStablePair"
                        }
                      },
                      "id": 1400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDevFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3605,
                      "src": "2241:36:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2241:45:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1403,
                  "nodeType": "ExpressionStatement",
                  "src": "2241:45:8"
                }
              ]
            },
            "functionSelector": "139dac3e",
            "id": 1405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDevFee",
            "nameLocation": "2056:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1377,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "2074:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "2066:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2066:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1379,
                  "mutability": "mutable",
                  "name": "_devFee",
                  "nameLocation": "2089:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "2081:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2081:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2065:32:8"
            },
            "returnParameters": {
              "id": 1381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2107:0:8"
            },
            "scope": 1475,
            "src": "2047:246:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3449
            ],
            "body": {
              "id": 1427,
              "nodeType": "Block",
              "src": "2360:131:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1413,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2378:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2378:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1415,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1170,
                          "src": "2392:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2378:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2405:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2370:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2370:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1419,
                  "nodeType": "ExpressionStatement",
                  "src": "2370:57:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1424,
                        "name": "_swapFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1409,
                        "src": "2475:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1421,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1407,
                            "src": "2457:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1420,
                          "name": "INomiswapStablePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3634,
                          "src": "2437:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_INomiswapStablePair_$3634_$",
                            "typeString": "type(contract INomiswapStablePair)"
                          }
                        },
                        "id": 1422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2437:26:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INomiswapStablePair_$3634",
                          "typeString": "contract INomiswapStablePair"
                        }
                      },
                      "id": 1423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSwapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3600,
                      "src": "2437:37:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32) external"
                      }
                    },
                    "id": 1425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2437:47:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1426,
                  "nodeType": "ExpressionStatement",
                  "src": "2437:47:8"
                }
              ]
            },
            "functionSelector": "9e68ceb8",
            "id": 1428,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSwapFee",
            "nameLocation": "2308:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1407,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "2327:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1428,
                  "src": "2319:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2319:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1409,
                  "mutability": "mutable",
                  "name": "_swapFee",
                  "nameLocation": "2341:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1428,
                  "src": "2334:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1408,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2334:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2318:32:8"
            },
            "returnParameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2360:0:8"
            },
            "scope": 1475,
            "src": "2299:192:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1453,
              "nodeType": "Block",
              "src": "2575:134:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1438,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2593:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2593:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1440,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1170,
                          "src": "2607:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2593:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2620:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2585:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2585:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1444,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:57:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1449,
                        "name": "_futureA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1432,
                        "src": "2680:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1450,
                        "name": "_futureTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1434,
                        "src": "2690:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1446,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1430,
                            "src": "2667:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1445,
                          "name": "StableSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3278,
                          "src": "2652:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_StableSwapPair_$3278_$",
                            "typeString": "type(contract StableSwapPair)"
                          }
                        },
                        "id": 1447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2652:21:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StableSwapPair_$3278",
                          "typeString": "contract StableSwapPair"
                        }
                      },
                      "id": 1448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rampA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2467,
                      "src": "2652:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 1451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2652:50:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1452,
                  "nodeType": "ExpressionStatement",
                  "src": "2652:50:8"
                }
              ]
            },
            "functionSelector": "6aec995d",
            "id": 1454,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rampA",
            "nameLocation": "2506:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1430,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "2520:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1454,
                  "src": "2512:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2512:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1432,
                  "mutability": "mutable",
                  "name": "_futureA",
                  "nameLocation": "2535:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1454,
                  "src": "2527:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1434,
                  "mutability": "mutable",
                  "name": "_futureTime",
                  "nameLocation": "2553:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1454,
                  "src": "2545:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2545:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2511:54:8"
            },
            "returnParameters": {
              "id": 1436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2575:0:8"
            },
            "scope": 1475,
            "src": "2497:212:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1473,
              "nodeType": "Block",
              "src": "2758:117:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1460,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2776:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2776:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1462,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1170,
                          "src": "2790:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2776:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2803:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2768:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2768:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1466,
                  "nodeType": "ExpressionStatement",
                  "src": "2768:57:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1468,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1456,
                            "src": "2850:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1467,
                          "name": "StableSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3278,
                          "src": "2835:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_StableSwapPair_$3278_$",
                            "typeString": "type(contract StableSwapPair)"
                          }
                        },
                        "id": 1469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2835:21:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StableSwapPair_$3278",
                          "typeString": "contract StableSwapPair"
                        }
                      },
                      "id": 1470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopRampA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2505,
                      "src": "2835:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2835:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1472,
                  "nodeType": "ExpressionStatement",
                  "src": "2835:33:8"
                }
              ]
            },
            "functionSelector": "6864a4b3",
            "id": 1474,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stopRampA",
            "nameLocation": "2724:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1456,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "2742:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1474,
                  "src": "2734:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2733:15:8"
            },
            "returnParameters": {
              "id": 1458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2758:0:8"
            },
            "scope": 1475,
            "src": "2715:160:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1476,
        "src": "147:2731:8",
        "usedErrors": []
      }
    ],
    "src": "45:2834:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-08-13T06:36:43.581Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}