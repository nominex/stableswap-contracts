{
  "contractName": "NomiswapStableFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INIT_CODE_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_devFee",
          "type": "uint128"
        }
      ],
      "name": "setDevFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_swapFee",
          "type": "uint32"
        }
      ],
      "name": "setSwapFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_futureA",
          "type": "uint32"
        },
        {
          "internalType": "uint40",
          "name": "_futureTime",
          "type": "uint40"
        }
      ],
      "name": "rampA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        }
      ],
      "name": "stopRampA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INIT_CODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_futureA\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"_futureTime\",\"type\":\"uint40\"}],\"name\":\"rampA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_devFee\",\"type\":\"uint128\"}],\"name\":\"setDevFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_swapFee\",\"type\":\"uint32\"}],\"name\":\"setSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"}],\"name\":\"stopRampA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NomiswapStableFactory.sol\":\"NomiswapStableFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"project:/contracts/NomiswapStableERC20.sol\":{\"keccak256\":\"0xd4e93be0840371a2d67e1d97e54427a2d0707c65a637624289f58bcbeec333a7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2cb80793ac22127609c362b7d2ef23b698fca2b2845572a4ac3ca6021fbd3107\",\"dweb:/ipfs/QmWKuC1bNoQ8acXBYEjX5d6kkonbbcw4TxKu7tBEDzYgj4\"]},\"project:/contracts/NomiswapStableFactory.sol\":{\"keccak256\":\"0xc691ed62437442a46c84b17008612b776bba3af7ac7c1a90924400a13cbf73af\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5dca0c783aea9cda429fe6ef38b0131c5f8fdc7e226583b2c0dd90bae60fdfe8\",\"dweb:/ipfs/QmShfPry8wTfwP7jLV3TqtxzTSK5nWMX9zxMBgr93yuvMc\"]},\"project:/contracts/NomiswapStablePair.sol\":{\"keccak256\":\"0x4de22090a7d6a3dfc0599dc8ceebbac98ae244fa9d44d24102821a26a5b96200\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ecf5b4b822874bed8bf1585a6b7352d2a1b1feb32a53c239fe9a25cff9ca0d46\",\"dweb:/ipfs/QmWvMdCf4EnWusv8cvaS6WmyJkZfmKcBqRh3CFJTqKGS79\"]},\"project:/contracts/interfaces/INomiswapCallee.sol\":{\"keccak256\":\"0xacd4b53dd95d9b5411449f8207eaf820cb409bbe471dbca714c76a53c34dd2ba\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a9038bbed61d51309fa8fc4c2cc4b953fb80b941780cb34258ebdf0e6f639323\",\"dweb:/ipfs/QmQSHYywSioABgon7fCvnPM5ir4T4FvEPiDzGyAz6bweeP\"]},\"project:/contracts/interfaces/INomiswapERC20.sol\":{\"keccak256\":\"0x2737e32674994900a880c61b46af7bfcd7f593789e710bdc51d36b9e5c2e4949\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7cbe5cc81643ed32aa81c41ac672a1477d018ec62ed2ff4c72e1e6259e5cabbe\",\"dweb:/ipfs/QmY6tZsTSzvdA5UQKpB1RYkjCoQQPDNQZ1a24eaDZW3z51\"]},\"project:/contracts/interfaces/INomiswapFactory.sol\":{\"keccak256\":\"0xc5137e516b4343883f1f0677640c6085b0703a08ee43e6aa646e90c83558f234\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://142455df84a3786d4d85ebe5047e59722c1206a1174dd58a6477616b0797ea2d\",\"dweb:/ipfs/QmQ8oZGGk6rVQt5HDrtTKy9sSTziw7HmoeREFSz35uEspB\"]},\"project:/contracts/interfaces/INomiswapPair.sol\":{\"keccak256\":\"0x0c8e15c45a7fc369f3653849907983dee36578a3f3fc9f6efec46b696f2270ba\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://85c7d10e9133e3b8bb8740e5296db96fbc8ca65ccdedc664e4c0dcdf3fef9367\",\"dweb:/ipfs/QmeTRvnvcL5aZVk4BtprWz8TbdrjheJDqGswG81m7g1SQH\"]},\"project:/contracts/interfaces/INomiswapStableFactory.sol\":{\"keccak256\":\"0x23c893698ad4b2be2fd227a6447c7fce6f541ffc42e46fe0fc28d41223326383\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e55e7d8049cc5f33604d0b993671ecd8d2602e572341e9c01060fb66f3a31100\",\"dweb:/ipfs/QmRwTutky42bL2K3rPQoUPSHMuEkrv48S7Y7f9ByTLUJPG\"]},\"project:/contracts/interfaces/INomiswapStablePair.sol\":{\"keccak256\":\"0xa1fc0ec05979c95974fcb063511608eda0a7fa604cd51f76f7b2bdd46d8426bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2f4931165a9c0b53b8329a84aa6b5fc753d8443d99c328d690f6d8abfa8739ba\",\"dweb:/ipfs/QmSreerYfBtPaa1QmJqwLvQMYg312s9ud8bkbiRvCAAhLb\"]},\"project:/contracts/libraries/MathUtils.sol\":{\"keccak256\":\"0x8dab218f7960e9d09cf585d11636f0718534e736fe5d00fe5ada686d75219296\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://38318737164b4e1fb5d97d9dea537d277423c1ea33b9dd69209f7c73294120d5\",\"dweb:/ipfs/QmSGYHviCuzsg7Gy1korkCJ9a5sFZpwEuVnS9rfjq5jZzH\"]},\"project:/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x95ff0ef08c4d04cb3fd73d792b654beb75b2a53b6236ad6b8319aa455f9e930b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ebbb2d706cedae4883c790ecc7767c48948e8ed62d32d5c5b26b917c1a7d05e5\",\"dweb:/ipfs/QmV9vBsmXgFFjGouxTZUfajD7uWvf7DWSEUVHDzoBinTL6\"]},\"project:/contracts/util/FactoryGuard.sol\":{\"keccak256\":\"0x33c3e985d80539165debff54bb360d9c67642aeef4a655c4183e72a12509b0f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://383a650b5007f6fedc47993c757bec0681c41ade07501fc8f129f8e8f46a10d1\",\"dweb:/ipfs/QmTw9VA8kgchDWFxMtcqdw3Se5JJPpZZ5tWD7gAQVEUjdB\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000fd5760003560e01c80636864a4b31162000097578063bcec1e4d116200006e578063bcec1e4d1462000251578063c9c653961462000268578063e6a43905146200027f578063f46901ed14620002c357600080fd5b80636864a4b3146200020c5780639e68ceb81462000223578063a2e74af6146200023a57600080fd5b8063257671f511620000d8578063257671f5146200018557806352b5c71e146200019e57806354fd4d5014620001b7578063574f2ba3146200020357600080fd5b8063017e7e581462000102578063094b7415146200014d5780631e3dd18b146200016e575b600080fd5b600054620001239073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b600154620001239073ffffffffffffffffffffffffffffffffffffffff1681565b620001236200017f36600462000e6b565b620002da565b6200018f60025481565b60405190815260200162000144565b620001b5620001af36600462000eaf565b62000312565b005b620001f46040518060400160405280601b81526020017f4e6f6d6973776170537461626c65466163746f727920322e302e30000000000081525081565b60405162000144919062000f32565b6004546200018f565b620001b56200021d36600462000f85565b620004af565b620001b56200023436600462000fbf565b62000597565b620001b56200024b36600462000f85565b62000673565b620001b56200026236600462000ff7565b6200073d565b62000123620002793660046200104e565b62000859565b62000123620002903660046200104e565b600360209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b620001b5620002d436600462000f85565b62000d93565b60048181548110620002eb57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60015473ffffffffffffffffffffffffffffffffffffffff16331462000399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e0000000000000000000000000060448201526064015b60405180910390fd5b6000816fffffffffffffffffffffffffffffffff161162000417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4e6f6d69737761703a20464f5242494444454e5f464545000000000000000000604482015260640162000390565b6040517f111f8ef30000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff8216600482015273ffffffffffffffffffffffffffffffffffffffff83169063111f8ef3906024015b600060405180830381600087803b1580156200049257600080fd5b505af1158015620004a7573d6000803e3d6000fd5b505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff16331462000532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000390565b8073ffffffffffffffffffffffffffffffffffffffff1663c4db7fa06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200057b57600080fd5b505af115801562000590573d6000803e3d6000fd5b5050505050565b60015473ffffffffffffffffffffffffffffffffffffffff1633146200061a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000390565b6040517fd6d788c300000000000000000000000000000000000000000000000000000000815263ffffffff8216600482015273ffffffffffffffffffffffffffffffffffffffff83169063d6d788c39060240162000477565b60015473ffffffffffffffffffffffffffffffffffffffff163314620006f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000390565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff163314620007c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000390565b6040517f73c48bb500000000000000000000000000000000000000000000000000000000815263ffffffff8316600482015264ffffffffff8216602482015273ffffffffffffffffffffffffffffffffffffffff8416906373c48bb590604401600060405180830381600087803b1580156200083b57600080fd5b505af115801562000850573d6000803e3d6000fd5b50505050505050565b60015460009073ffffffffffffffffffffffffffffffffffffffff163314620008df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000390565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000976576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4e6f6d69737761703a204944454e544943414c5f414444524553534553000000604482015260640162000390565b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610620009b5578385620009b8565b84845b909250905073ffffffffffffffffffffffffffffffffffffffff821662000a3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f6d69737761703a205a45524f5f4144445245535300000000000000000000604482015260640162000390565b73ffffffffffffffffffffffffffffffffffffffff82811660009081526003602090815260408083208585168452909152902054161562000ada576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4e6f6d69737761703a20504149525f4558495354530000000000000000000000604482015260640162000390565b60006040518060200162000aee9062000e5d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604081815273ffffffffffffffffffffffffffffffffffffffff80871660208401528516908201529091506000908290606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262000b8d92916020016200107d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606087811b8216602085015286901b1660348301529150600090604801604051602081830303815290604052805190602001209050808251602084016000f5955073ffffffffffffffffffffffffffffffffffffffff861662000c9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4e6f6d69737761703a20504149525f4e4f545f43524541544544000000000000604482015260640162000390565b73ffffffffffffffffffffffffffffffffffffffff85811660008181526003602081815260408084208a87168086529083528185208054978e167fffffffffffffffffffffffff000000000000000000000000000000000000000098891681179091559383528185208686528352818520805488168517905560048054600181018255958190527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a3505050505092915050565b60015473ffffffffffffffffffffffffffffffffffffffff16331462000e16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000390565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b614d9d80620010b183390190565b60006020828403121562000e7e57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811462000eaa57600080fd5b919050565b6000806040838503121562000ec357600080fd5b62000ece8362000e85565b915060208301356fffffffffffffffffffffffffffffffff8116811462000ef457600080fd5b809150509250929050565b60005b8381101562000f1c57818101518382015260200162000f02565b8381111562000f2c576000848401525b50505050565b602081526000825180602084015262000f5381604085016020870162000eff565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006020828403121562000f9857600080fd5b62000fa38262000e85565b9392505050565b803563ffffffff8116811462000eaa57600080fd5b6000806040838503121562000fd357600080fd5b62000fde8362000e85565b915062000fee6020840162000faa565b90509250929050565b6000806000606084860312156200100d57600080fd5b620010188462000e85565b9250620010286020850162000faa565b9150604084013564ffffffffff811681146200104357600080fd5b809150509250925092565b600080604083850312156200106257600080fd5b6200106d8362000e85565b915062000fee6020840162000e85565b600083516200109181846020880162000eff565b835190830190620010a781836020880162000eff565b0194935050505056fe610140604052600680546001600160801b031916600117905560076200002b600160701b6003620003f6565b62000037919062000418565b600680546001600160801b03928316600160801b0292169190911790556200006260646055620003f6565b600780546001600160401b03191663ffffffff92909216918217640100000000929092029190911763ffffffff60901b19166208312760931b179055348015620000ab57600080fd5b5060405162004d9d38038062004d9d833981016040819052620000ce9162000458565b604080518082018252601381527f4e6f6d697377617020737461626c65204c5073000000000000000000000000006020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527f22155260db1abf6474eb894108f4b66f54f6b4a9c481b6e3e789468ed505cc97918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a0830152339160c00160408051808303601f190181528282528051602091820120608052600160049081556001600160a01b0395861660a0526007805464ffffffffff60681b19166d01000000000000000000000000004264ffffffffff160217905587861660c081905295871660e05263313ce56760e01b84529151600095945063313ce5679383810193908290030181865afa1580156200023f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000265919062000490565b905060128160ff161115620002be5760405162461bcd60e51b8152602060048201526025602482015260008051602062004d7d8339815191526044820152643a37b5b2b760d91b60648201526084015b60405180910390fd5b620002cb816012620004bc565b620002d890600a62000622565b6001600160801b0316610100816001600160801b0316815250506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000333573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000359919062000490565b905060128160ff161115620003ae5760405162461bcd60e51b8152602060048201526025602482015260008051602062004d7d8339815191526044820152643a37b5b2b760d91b6064820152608401620002b5565b620003bb816012620004bc565b620003c890600a62000622565b6001600160801b031661012052506200063c92505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615620004135762000413620003e0565b500290565b6000826200043657634e487b7160e01b600052601260045260246000fd5b500490565b80516001600160a01b03811681146200045357600080fd5b919050565b600080604083850312156200046c57600080fd5b62000477836200043b565b915062000487602084016200043b565b90509250929050565b600060208284031215620004a357600080fd5b815160ff81168114620004b557600080fd5b9392505050565b600060ff821660ff841680821015620004d957620004d9620003e0565b90039392505050565b600181815b8085111562000529576001600160801b038290048211156200050d576200050d620003e0565b808516156200051b57918102915b93841c9390800290620004e7565b509250929050565b60008262000542575060016200061c565b8162000551575060006200061c565b81600181146200056a57600281146200057557620005b0565b60019150506200061c565b60ff841115620005895762000589620003e0565b6001841b91506001600160801b03821115620005a957620005a9620003e0565b506200061c565b5060208310610133831016604e8410600b8410161715620005ef575081810a6001600160801b03811115620005e957620005e9620003e0565b6200061c565b620005fb8383620004e2565b6001600160801b03819004821115620006185762000618620003e0565b0290505b92915050565b6000620004b560ff84166001600160801b03841662000531565b60805160a05160c05160e051610100516101205161461f6200075e6000396000818161049001528181610d7d015281816113710152818161299e015261355d01526000818161063701528181610d590152818161134d0152818161297a015261351d0152600081816106bd0152818161096a015281816114a4015281816117a301528181611e920152818161232f015281816125a901528181612ae1015261329c01526000818161038c01528181610949015281816113ca015281816116ef01528181611e700152818161227e0152818161258701528181612a4901526131ee0152600081816106790152818161106801528181611a6b0152818161276901528181612fd9015261393b0152600081816104560152612d4e015261461f6000f3fe608060405234801561001057600080fd5b50600436106102925760003560e01c80637ecebe0011610160578063bc25cf77116100d8578063d46300fd1161008c578063d6d788c311610071578063d6d788c3146106fa578063dd62ed3e1461070d578063fff6cae91461073857600080fd5b8063d46300fd146106df578063d505accf146106e757600080fd5b8063c4db7fa0116100bd578063c4db7fa01461069d578063ca706bcf146106a5578063d21220a7146106b857600080fd5b8063bc25cf7714610664578063c45a01551461067757600080fd5b8063a457c2d71161012f578063ba9a7a5611610114578063ba9a7a5614610629578063baa8c7cb14610632578063bc063e1a1461065957600080fd5b8063a457c2d714610603578063a9059cbb1461061657600080fd5b80637ecebe001461059757806389afcb44146105b757806395d89b41146105df578063a0be06f9146105e757600080fd5b8063313ce5671161020e578063632db21c116101c25780636a627842116101a75780636a6278421461055157806370a082311461056457806373c48bb51461058457600080fd5b8063632db21c1461050e5780636827e7641461052157600080fd5b806339509351116101f357806339509351146104785780634e25dc471461048b57806354cf2aeb146104d357600080fd5b8063313ce567146104375780633644e5151461045157600080fd5b80630dfe16811161026557806318160ddd1161024a57806318160ddd146103e657806323b872dd146103fd57806330adf81f1461041057600080fd5b80630dfe168114610387578063111f8ef3146103d357600080fd5b8063022c0d9f1461029757806306fdde03146102ac5780630902f1ac146102fe578063095ea7b314610364575b600080fd5b6102aa6102a5366004613f4d565b610740565b005b6102e86040518060400160405280601381526020017f4e6f6d697377617020737461626c65204c50730000000000000000000000000081525081565b6040516102f59190614013565b60405180910390f35b600554604080516dffffffffffffffffffffffffffff80841682526e01000000000000000000000000000084041660208201527c010000000000000000000000000000000000000000000000000000000090920463ffffffff16908201526060016102f5565b610377610372366004614064565b611039565b60405190151581526020016102f5565b6103ae7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102f5565b6102aa6103e1366004614090565b611050565b6103ef60005481565b6040519081526020016102f5565b61037761040b3660046140c2565b6111a0565b6103ef7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61043f601281565b60405160ff90911681526020016102f5565b6103ef7f000000000000000000000000000000000000000000000000000000000000000081565b610377610486366004614064565b61127b565b6104b27f000000000000000000000000000000000000000000000000000000000000000081565b6040516fffffffffffffffffffffffffffffffff90911681526020016102f5565b6007546104f9907201000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff90911681526020016102f5565b6103ef61051c366004614064565b6112c4565b6006546104b29070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1681565b6103ef61055f366004614103565b6115d4565b6103ef610572366004614103565b60016020526000908152604090205481565b6102aa610592366004614139565b6119e2565b6103ef6105a5366004614103565b60036020526000908152604090205481565b6105ca6105c5366004614103565b611dca565b604080519283526020830191909152016102f5565b6102e8612244565b6006546104b2906fffffffffffffffffffffffffffffffff1681565b610377610611366004614064565b612404565b610377610624366004614064565b6124d4565b6103ef6103e881565b6104b27f000000000000000000000000000000000000000000000000000000000000000081565b6103ef63ffffffff81565b6102aa610672366004614103565b6124e1565b7f00000000000000000000000000000000000000000000000000000000000000006103ae565b6102aa6126e0565b6103ef6106b3366004614064565b6128ed565b6103ae7f000000000000000000000000000000000000000000000000000000000000000081565b6103ef612bdf565b6102aa6106f536600461417a565b612cbb565b6102aa6107083660046141f1565b612fc1565b6103ef61071b36600461420c565b600260209081526000928352604080842090915290825290205481565b6102aa613147565b6002600454036107b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600455841515806107c45750600084115b61084f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4e6f6d69737761703a20494e53554646494349454e545f4f55545055545f414d60448201527f4f554e540000000000000000000000000000000000000000000000000000000060648201526084016107a8565b6000806108ab6005546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915081871080156108de57508086105b610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4e6f6d69737761703a20494e53554646494349454e545f4c495155494449545960448201526064016107a8565b6000807f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff898116908316148015906109de57508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b610a44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f6d69737761703a20494e56414c49445f544f00000000000000000000000060448201526064016107a8565b8a15610a5557610a55828a8d613328565b8915610a6657610a66818a8c613328565b8615610af9576040517f2210968200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a1690632210968290610ac69033908f908f908e908e9060040161423a565b600060405180830381600087803b158015610ae057600080fd5b505af1158015610af4573d6000803e3d6000fd5b505050505b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610b63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8791906142b2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8216906370a0823190602401602060405180830381865afa158015610bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1891906142b2565b9250505060008985610c2a91906142fa565b8311610c37576000610c4b565b610c418a866142fa565b610c4b90846142fa565b90506000610c598a866142fa565b8311610c66576000610c7a565b610c708a866142fa565b610c7a90846142fa565b90506000821180610c8b5750600081115b610d17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4e6f6d69737761703a20494e53554646494349454e545f494e5055545f414d4f60448201527f554e54000000000000000000000000000000000000000000000000000000000060648201526084016107a8565b6000610d21612bdf565b60075490915063ffffffff72010000000000000000000000000000000000009091048116906fffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116917f00000000000000000000000000000000000000000000000000000000000000009091169060009083610dae868a614311565b610dbc63ffffffff8d614311565b610dc691906142fa565b610dd09190614311565b610dda919061437d565b9050600063ffffffff83610dee878a614311565b610dfc63ffffffff8d614311565b610e0691906142fa565b610e109190614311565b610e1a919061437d565b90506000610e298383896133ba565b90506000610e37868f614311565b90506000610e45868f614311565b90506000610e5483838c6133ba565b905080841015610ec0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4e6f6d69737761703a204400000000000000000000000000000000000000000060448201526064016107a8565b6000610ecd8f8f8d613504565b90506000610edb83836142fa565b600054610ee89190614311565b60065490915060009084906e01000000000000000000000000000090610f349070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1686614311565b610f3e919061437d565b610f489190614391565b9050610f54818361437d565b60068054600090610f789084906fffffffffffffffffffffffffffffffff166143a9565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050505050505050505050505050610fc5848461359a565b60408051838152602081018390529081018c9052606081018b905273ffffffffffffffffffffffffffffffffffffffff8a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600455505050505050505050565b600061104633848461372d565b5060015b92915050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146110ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e0000000000000000000000000060448201526064016107a8565b806fffffffffffffffffffffffffffffffff1660000361116b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4e6f6d6973776170537461626c65506169723a2064657620666565203000000060448201526064016107a8565b600680546fffffffffffffffffffffffffffffffff928316700100000000000000000000000000000000029216919091179055565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff146112655773ffffffffffffffffffffffffffffffffffffffff841660009081526002602090815260408083203384529091529020546112339083906142fa565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602090815260408083203384529091529020555b61127084848461379c565b5060015b9392505050565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916110469185906112bf908690614391565b61372d565b60008060006113226005546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506dffffffffffffffffffffffffffff91821693501690506fffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116907f000000000000000000000000000000000000000000000000000000000000000016600061139d8386614311565b905060006113ab8386614311565b905060006113b7612bdf565b905060006113c68484846133ba565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16036114a2576000611427868c614311565b61143190856142fa565b9050600061144082848661386b565b905060006114588961145289856142fa565b90613914565b6007549091506114989061148a9063ffffffff72010000000000000000000000000000000000009091048116906142fa565b61145263ffffffff84614311565b9b505050506115c6565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1614611557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e56414c49445f494e5055545f544f4b454e0000000000000000000000000060448201526064016107a8565b6000611563878c614311565b61156d90866142fa565b9050600061157c82848661386b565b9050600061158e8861145288856142fa565b6007549091506115c09061148a9063ffffffff72010000000000000000000000000000000000009091048116906142fa565b9b505050505b505050505050505092915050565b6000600260045403611642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107a8565b60026004556000806116a36005546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152919350915060009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175a91906142b2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156117ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180e91906142b2565b9050611818613937565b60008054906118376dffffffffffffffffffffffffffff8716856142fa565b905060006118556dffffffffffffffffffffffffffff8716856142fa565b90508260000361189c576000611869612bdf565b90506000611878878784613504565b90506118866103e8826142fa565b995061189560006103e8613a86565b50506118f1565b6118ee6dffffffffffffffffffffffffffff88166118ba8585614311565b6118c4919061437d565b6dffffffffffffffffffffffffffff88166118df8685614311565b6118e9919061437d565b613b31565b97505b60008811611981576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e6f6d69737761703a20494e53554646494349454e545f4c495155494449545960448201527f5f4d494e5445440000000000000000000000000000000000000000000000000060648201526084016107a8565b61198b8989613a86565b611995858561359a565b604080518381526020810183905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600455509395945050505050565b600260045403611a4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107a8565b60026004553373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611af2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e0000000000000000000000000060448201526064016107a8565b600754611b1690620151809068010000000000000000900464ffffffffff16614391565b421015611b7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4e6f6d6973776170537461626c65506169723a20494e56414c49445f54494d4560448201526064016107a8565b611b8c6201518042614391565b8164ffffffffff161015611c22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e6f6d6973776170537461626c65506169723a20494e56414c49445f4655545560448201527f52455f54494d450000000000000000000000000000000000000000000000000060648201526084016107a8565b6000611c2c612bdf565b905060008363ffffffff16118015611c565750611c4d6064620f4240614311565b8363ffffffff16105b611c5f57600080fd5b8063ffffffff168363ffffffff161015611c9d578063ffffffff1660648463ffffffff16611c8d9190614311565b1015611c9857600080fd5b611cc0565b611cae606463ffffffff8316614311565b8363ffffffff161115611cc057600080fd5b6007805463ffffffff8381167fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009092168217640100000000918716918202177fffffffffffffffffffffffffffff00000000000000000000ffffffffffffffff16680100000000000000004264ffffffffff818116929092027fffffffffffffffffffffffffffff0000000000ffffffffffffffffffffffffff16929092176d0100000000000000000000000000918816918202179094556040805193845260208401929092529082015260608101919091527fa2b71ec6df949300b59aab36b55e189697b750119dd349fcfa8c0f779e83c2549060800160405180910390a15050600160045550565b600080600260045403611e39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107a8565b600260049081556040517f70a0823100000000000000000000000000000000000000000000000000000000815230918101919091527f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015611ef3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1791906142b2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015611f87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fab91906142b2565b30600090815260016020526040902054909150611fc6613937565b60005480611fd48584614311565b611fde919061437d565b975080611feb8484614311565b611ff5919061437d565b96506000881180156120075750600087115b612093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e6f6d69737761703a20494e53554646494349454e545f4c495155494449545960448201527f5f4255524e45440000000000000000000000000000000000000000000000000060648201526084016107a8565b61209d3083613b47565b6120a8868a8a613328565b6120b3858a89613328565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa15801561211d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061214191906142b2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa1580156121ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121d291906142b2565b92506121de848461359a565b604080518981526020810189905273ffffffffffffffffffffffffffffffffffffffff8b169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050506001600481905550915091565b60606040518060400160405280600781526020017f4e4d582d534c50000000000000000000000000000000000000000000000000008152507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156122e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261232d919081019061440c565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015612398573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526123de919081019061440c565b6040516020016123f0939291906144cc565b604051602081830303815290604052905090565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054828110156124c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f4e6f6d6973776170537461626c6545524332303a20646563726561736564206160448201527f6c6c6f77616e63652062656c6f77207a65726f0000000000000000000000000060648201526084016107a8565b61127033856112bf86856142fa565b600061104633848461379c565b60026004540361254d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107a8565b600260049081556005546040517f70a0823100000000000000000000000000000000000000000000000000000000815230928101929092527f0000000000000000000000000000000000000000000000000000000000000000917f00000000000000000000000000000000000000000000000000000000000000009161265691849186916dffffffffffffffffffffffffffff9091169073ffffffffffffffffffffffffffffffffffffffff8416906370a08231906024015b602060405180830381865afa158015612623573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061264791906142b2565b61265191906142fa565b613328565b6005546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526126d691839186916e01000000000000000000000000000090046dffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401612606565b5050600160045550565b60026004540361274c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107a8565b60026004553373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146127f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e0000000000000000000000000060448201526064016107a8565b60006127fa612bdf565b600780547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001663ffffffff83169081176401000000008202177fffffffffffffffffffffffffffff00000000000000000000ffffffffffffffff16680100000000000000004264ffffffffff81169182027fffffffffffffffffffffffffffff0000000000ffffffffffffffffffffffffff16929092176d010000000000000000000000000091909102179092556040805191825260208201929092529192507f46e22fb3709ad289f62ce63d469248536dbc78d82b84a3d7e74ad606dc201938910160405180910390a1506001600455565b600080600061294b6005546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506007546dffffffffffffffffffffffffffff9283169450911691506fffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116917f00000000000000000000000000000000000000000000000000000000000000009091169060009063ffffffff906129ec9072010000000000000000000000000000000000009004821689614311565b6129fa63ffffffff8a614311565b612a0491906142fa565b612a0e919061437d565b90506000612a1c8487614311565b90506000612a2a8487614311565b90506000612a36612bdf565b90506000612a458484846133ba565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1603612adf576000612aa68887614311565b612ab09086614391565b90506000612abf82848661386b565b905087612acc82876142fa565b612ad6919061437d565b9b505050612bd0565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1614612b94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e56414c49445f494e5055545f544f4b454e0000000000000000000000000060448201526064016107a8565b6000612ba08787614311565b612baa9085614391565b90506000612bb982848661386b565b905088612bc682886142fa565b6115c0919061437d565b50505050505050505092915050565b6007546000906d0100000000000000000000000000810464ffffffffff1690640100000000900463ffffffff164282111561104a5760075463ffffffff81169068010000000000000000900464ffffffffff1681831115612c7f57612c4481856142fa565b612c4e83856142fa565b612c5883426142fa565b612c629190614311565b612c6c919061437d565b612c769083614391565b94505050505090565b612c8981856142fa565b612c9384846142fa565b612c9d83426142fa565b612ca79190614311565b612cb1919061437d565b612c7690836142fa565b42841015612d25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f6d69737761703a204558504952454400000000000000000000000000000060448201526064016107a8565b73ffffffffffffffffffffffffffffffffffffffff8716600090815260036020526040812080547f0000000000000000000000000000000000000000000000000000000000000000917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9187612da083614542565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001612e419291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015612eca573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590612f4557508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b612fab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4e6f6d69737761703a20494e56414c49445f5349474e4154555245000000000060448201526064016107a8565b612fb689898961372d565b505050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614613060576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e0000000000000000000000000060448201526064016107a8565b63ffffffff8163ffffffff1611156130fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4e6f6d6973776170537461626c65506169723a20464f5242494444454e5f464560448201527f450000000000000000000000000000000000000000000000000000000000000060648201526084016107a8565b6007805463ffffffff9092167201000000000000000000000000000000000000027fffffffffffffffffffff00000000ffffffffffffffffffffffffffffffffffff909216919091179055565b6002600454036131b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107a8565b600260049081556040517f70a082310000000000000000000000000000000000000000000000000000000081523091810191909152613321907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa15801561324a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061326e91906142b2565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156132f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061331c91906142b2565b61359a565b6001600455565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526133b5908490613bfa565b505050565b6000808385106133ca57836133cc565b845b905060008486106133dd57856133df565b845b905060006133ed8284614391565b9050806000036134035760009350505050611274565b6000613410866010614311565b905060008361341f8484614311565b6134299190614311565b905060008461343a60646004614311565b61344490856142fa565b61344e9190614311565b9050600084975060005b6101008110156134f55788915060008883613474816064614311565b61347e9190614311565b613488919061437d565b905083613496826003614311565b6134a09190614391565b85826134ad8d6002614311565b6134b79190614311565b6134c19190614391565b6134cb919061437d565b99506134d78a84613d06565b156134e257506134f5565b50806134ed81614542565b915050613458565b50505050505050509392505050565b6000806135436fffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001686614311565b905060006135836fffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001686614311565b90506135908282866133ba565b9695505050505050565b6dffffffffffffffffffffffffffff82118015906135c657506dffffffffffffffffffffffffffff8111155b61362c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e6f6d69737761703a204f564552464c4f57000000000000000000000000000060448201526064016107a8565b600061363d6401000000004261457a565b6005805463ffffffff83167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff8781166e0100000000000000000000000000009081027fffffffff000000000000000000000000000000000000000000000000000000009095168a83161794909417918216831794859055604080519382169282169290921783529290930490911660208201529192507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260409020546137cd9082906142fa565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260016020526040808220939093559084168152205461380a908290614391565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061378f9085815260200190565b8160008061387a846004614311565b90506000600486888161388e816064614311565b6138989190614311565b6138a2919061437d565b6138ac9190614311565b6138b6919061437d565b90508587038202606487020160005b610100811015613908578594508385026138e88187028501600283028501613914565b96506138f48787613d06565b156138ff5750613908565b506001016138c5565b50505050509392505050565b60008160016139238286614391565b61392d91906142fa565b611274919061437d565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa1580156139a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139c8919061458e565b60065490915073ffffffffffffffffffffffffffffffffffffffff8216158015916fffffffffffffffffffffffffffffffff1690613a4d5760018111156133b557613a1d83613a186001846142fa565b613a86565b600680547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166001179055505050565b60018111156133b557600680547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166001179055505050565b80600054613a949190614391565b600090815573ffffffffffffffffffffffffffffffffffffffff8316815260016020526040902054613ac7908290614391565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90613b259085815260200190565b60405180910390a35050565b6000818310613b405781611274565b5090919050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040902054613b789082906142fa565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604081209190915554613bad9082906142fa565b600090815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001613b25565b6000613c5c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16613d289092919063ffffffff16565b8051909150156133b55780806020019051810190613c7a91906145ab565b6133b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016107a8565b600081831115613d1d57506001818303111561104a565b506001919003111590565b6060613d378484600085613d3f565b949350505050565b606082471015613dd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016107a8565b73ffffffffffffffffffffffffffffffffffffffff85163b613e4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107a8565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051613e7891906145cd565b60006040518083038185875af1925050503d8060008114613eb5576040519150601f19603f3d011682016040523d82523d6000602084013e613eba565b606091505b5091509150613eca828286613ed5565b979650505050505050565b60608315613ee4575081611274565b825115613ef45782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a89190614013565b73ffffffffffffffffffffffffffffffffffffffff81168114613f4a57600080fd5b50565b600080600080600060808688031215613f6557600080fd5b85359450602086013593506040860135613f7e81613f28565b9250606086013567ffffffffffffffff80821115613f9b57600080fd5b818801915088601f830112613faf57600080fd5b813581811115613fbe57600080fd5b896020828501011115613fd057600080fd5b9699959850939650602001949392505050565b60005b83811015613ffe578181015183820152602001613fe6565b8381111561400d576000848401525b50505050565b6020815260008251806020840152614032816040850160208701613fe3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000806040838503121561407757600080fd5b823561408281613f28565b946020939093013593505050565b6000602082840312156140a257600080fd5b81356fffffffffffffffffffffffffffffffff8116811461127457600080fd5b6000806000606084860312156140d757600080fd5b83356140e281613f28565b925060208401356140f281613f28565b929592945050506040919091013590565b60006020828403121561411557600080fd5b813561127481613f28565b803563ffffffff8116811461413457600080fd5b919050565b6000806040838503121561414c57600080fd5b61415583614120565b9150602083013564ffffffffff8116811461416f57600080fd5b809150509250929050565b600080600080600080600060e0888a03121561419557600080fd5b87356141a081613f28565b965060208801356141b081613f28565b95506040880135945060608801359350608088013560ff811681146141d457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60006020828403121561420357600080fd5b61127482614120565b6000806040838503121561421f57600080fd5b823561422a81613f28565b9150602083013561416f81613f28565b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101949350505050565b6000602082840312156142c457600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561430c5761430c6142cb565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614349576143496142cb565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261438c5761438c61434e565b500490565b600082198211156143a4576143a46142cb565b500190565b60006fffffffffffffffffffffffffffffffff8083168185168083038211156143d4576143d46142cb565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561441e57600080fd5b815167ffffffffffffffff8082111561443657600080fd5b818401915084601f83011261444a57600080fd5b81518181111561445c5761445c6143dd565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156144a2576144a26143dd565b816040528281528760208487010111156144bb57600080fd5b613eca836020830160208801613fe3565b600084516144de818460208901613fe3565b80830190507f2d00000000000000000000000000000000000000000000000000000000000000808252855161451a816001850160208a01613fe3565b60019201918201528351614535816002840160208801613fe3565b0160020195945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614573576145736142cb565b5060010190565b6000826145895761458961434e565b500690565b6000602082840312156145a057600080fd5b815161127481613f28565b6000602082840312156145bd57600080fd5b8151801515811461127457600080fd5b600082516145df818460208701613fe3565b919091019291505056fea26469706673582212209bbcf82b22f490fb76f1177940afefdf59480b202f5e83a46a3b45ac46c2e1d664736f6c634300080f00334e6f6d6973776170537461626c65506169723a20756e737570706f7274656420a2646970667358221220b41c009caa24495a72a95f813a5d1d4736bcc9e5594c7d8298cbaa44c20cbaf464736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:737:18",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:18",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "151:289:18",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "161:27:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "181:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "175:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "175:13:18"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "165:6:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "197:10:18",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "206:1:18",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "201:1:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:77:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "293:3:18"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "298:1:18"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "289:3:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "289:11:18"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "316:6:18"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "324:1:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "312:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "312:14:18"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "328:4:18",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "308:3:18"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "308:25:18"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "302:5:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "302:32:18"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "282:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "282:53:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "282:53:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "227:1:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "230:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "224:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:13:18"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "238:21:18",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "240:17:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "249:1:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "252:4:18",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "245:3:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "245:12:18"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "240:1:18"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "220:3:18",
                    "statements": []
                  },
                  "src": "216:129:18"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "371:31:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "384:3:18"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "389:6:18"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "380:3:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "380:16:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "398:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "373:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "373:27:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "373:27:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "360:1:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "363:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "357:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "357:13:18"
                  },
                  "nodeType": "YulIf",
                  "src": "354:48:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "411:23:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "422:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "427:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:16:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "411:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "127:3:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "132:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "143:3:18",
                "type": ""
              }
            ],
            "src": "14:426:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "526:209:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "572:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "581:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "584:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "574:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "574:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "574:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "547:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "556:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "543:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "543:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "568:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "539:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "539:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "536:52:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "597:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "616:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "610:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "610:16:18"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "601:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "689:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "698:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "701:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "691:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "691:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "691:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "648:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:18"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "674:3:18",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "679:1:18",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "670:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "670:11:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "683:1:18",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "666:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "666:19:18"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "655:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "655:31:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "645:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "645:42:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "638:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "638:50:18"
                  },
                  "nodeType": "YulIf",
                  "src": "635:70:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "714:15:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "724:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "714:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "492:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "503:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "515:6:18",
                "type": ""
              }
            ],
            "src": "445:290:18"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7695:18",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:18",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:125:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "190:42:18",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:55:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:74:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:74:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:18",
                "type": ""
              }
            ],
            "src": "14:226:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "315:110:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "361:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "370:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "373:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "363:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "363:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "363:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "336:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "345:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "332:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "332:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "357:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "325:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "386:33:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "409:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "396:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "396:23:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "386:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "281:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "292:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "304:6:18",
                "type": ""
              }
            ],
            "src": "245:180:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "531:76:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "541:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "553:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "564:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "549:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "549:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "541:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "583:9:18"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "594:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "576:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "576:25:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "576:25:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "500:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "511:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "522:4:18",
                "type": ""
              }
            ],
            "src": "430:177:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "661:147:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "671:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "693:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "680:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "680:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "671:5:18"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "786:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "795:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "798:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "788:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "788:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "788:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "722:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "733:5:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "740:42:18",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "729:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "729:54:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "719:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "719:65:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "712:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "712:73:18"
                  },
                  "nodeType": "YulIf",
                  "src": "709:93:18"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "640:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "651:5:18",
                "type": ""
              }
            ],
            "src": "612:196:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "900:288:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "946:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "955:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "958:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "948:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "948:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "948:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "921:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "930:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "917:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "917:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "942:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "913:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "913:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "910:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "971:39:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1000:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "981:18:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "981:29:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "971:6:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1019:45:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1049:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1060:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1045:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1045:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1032:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1032:32:18"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1023:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1142:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1151:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1154:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1144:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1144:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1144:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1086:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1097:5:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1104:34:18",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1093:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1093:46:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1083:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1083:57:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1076:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1076:65:18"
                  },
                  "nodeType": "YulIf",
                  "src": "1073:85:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1167:15:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1177:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1167:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "858:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "869:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "881:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "889:6:18",
                "type": ""
              }
            ],
            "src": "813:375:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1246:205:18",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1256:10:18",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1265:1:18",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1260:1:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1325:63:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1350:3:18"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1355:1:18"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1346:3:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1346:11:18"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "1369:3:18"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1374:1:18"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1365:3:18"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1365:11:18"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1359:5:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1359:18:18"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1339:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1339:39:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1339:39:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1286:1:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1289:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1283:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1283:13:18"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1297:19:18",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1299:15:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1308:1:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1311:2:18",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1304:3:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1304:10:18"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1299:1:18"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1279:3:18",
                    "statements": []
                  },
                  "src": "1275:113:18"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1414:31:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1427:3:18"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1432:6:18"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1423:3:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1423:16:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1441:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1416:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1416:27:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1416:27:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1403:1:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1406:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1400:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1400:13:18"
                  },
                  "nodeType": "YulIf",
                  "src": "1397:48:18"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1224:3:18",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "1229:3:18",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1234:6:18",
                "type": ""
              }
            ],
            "src": "1193:258:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1577:321:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1594:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1605:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1587:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1587:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1587:21:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1617:27:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1637:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1631:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1631:13:18"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1621:6:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1664:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1675:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1660:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1660:18:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1680:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1653:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1653:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1653:34:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1722:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1730:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1718:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1718:15:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1739:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1750:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1735:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1735:18:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1755:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1696:21:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1696:66:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1696:66:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1771:121:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1787:9:18"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1806:6:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1814:2:18",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1802:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1802:15:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1819:66:18",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1798:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1798:88:18"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1783:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1783:104:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1889:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1779:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1779:113:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1771:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1546:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1557:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1568:4:18",
                "type": ""
              }
            ],
            "src": "1456:442:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2004:76:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2014:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2026:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2037:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2022:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2022:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2014:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2056:9:18"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2067:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2049:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2049:25:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2049:25:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1973:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1984:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1995:4:18",
                "type": ""
              }
            ],
            "src": "1903:177:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2155:116:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2201:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2210:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2213:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2203:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2203:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2203:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2176:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2185:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2172:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2172:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2197:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2168:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2168:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "2165:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2226:39:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2255:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2236:18:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2236:29:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2226:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2121:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2132:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2144:6:18",
                "type": ""
              }
            ],
            "src": "2085:186:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2324:115:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2334:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2356:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2343:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2343:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2334:5:18"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2417:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2426:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2429:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2419:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2419:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2419:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2385:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2396:5:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2403:10:18",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2392:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2392:22:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2382:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2382:33:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2375:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2375:41:18"
                  },
                  "nodeType": "YulIf",
                  "src": "2372:61:18"
                }
              ]
            },
            "name": "abi_decode_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2303:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2314:5:18",
                "type": ""
              }
            ],
            "src": "2276:163:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2530:172:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2576:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2585:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2588:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2578:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2578:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2578:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2551:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2560:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2547:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2547:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2572:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2543:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2543:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "2540:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2601:39:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2630:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2611:18:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2611:29:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2601:6:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2649:47:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2681:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2692:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2677:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2677:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "2659:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2659:37:18"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2649:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2488:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2499:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2511:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2519:6:18",
                "type": ""
              }
            ],
            "src": "2444:258:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2809:322:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2855:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2864:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2867:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2857:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2857:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2857:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2830:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2839:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2826:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2826:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2851:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2822:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2822:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "2819:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2880:39:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2909:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2890:18:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2890:29:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2880:6:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2928:47:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2960:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2971:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2956:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2956:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "2938:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2938:37:18"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2928:6:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2984:45:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3014:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3025:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3010:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3010:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2997:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2997:32:18"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2988:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3085:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3094:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3097:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3087:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3087:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3087:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3051:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3062:5:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3069:12:18",
                                "type": "",
                                "value": "0xffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3058:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3058:24:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3048:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3048:35:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3041:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3041:43:18"
                  },
                  "nodeType": "YulIf",
                  "src": "3038:63:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3110:15:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3120:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3110:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint32t_uint40",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2759:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2770:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2782:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2790:6:18",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2798:6:18",
                "type": ""
              }
            ],
            "src": "2707:424:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3223:173:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3269:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3278:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3281:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3271:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3271:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3271:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3244:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3253:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3240:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3240:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3265:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3236:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3236:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "3233:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3294:39:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3323:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3304:18:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3304:29:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3294:6:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3342:48:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3375:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3386:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3371:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3371:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3352:18:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3352:38:18"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3342:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3181:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3192:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3204:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3212:6:18",
                "type": ""
              }
            ],
            "src": "3136:260:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3575:169:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3592:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3603:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3585:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3585:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3585:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3626:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3637:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3622:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3622:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3642:2:18",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3615:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3615:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3615:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3665:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3676:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3661:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3661:18:18"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3681:21:18",
                        "type": "",
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3654:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3654:49:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3654:49:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3712:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3724:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3735:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3720:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3720:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3712:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3552:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3566:4:18",
                "type": ""
              }
            ],
            "src": "3401:343:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3923:173:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3940:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3951:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3933:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3933:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3933:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3974:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3985:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3970:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3970:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3990:2:18",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3963:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3963:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3963:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4013:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4024:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4009:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4009:18:18"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e5f464545",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4029:25:18",
                        "type": "",
                        "value": "Nomiswap: FORBIDDEN_FEE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4002:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4002:53:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4002:53:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4064:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4076:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4087:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4072:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4072:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4064:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_90b73549368af0ae6cdb0c9edf500f2f0d39c143efb4b8689b0b8abb658de3e2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3900:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3914:4:18",
                "type": ""
              }
            ],
            "src": "3749:347:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4202:117:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4212:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4224:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4235:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4220:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4220:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4212:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4254:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4269:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4277:34:18",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4265:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4265:47:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4247:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4247:66:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4247:66:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4171:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4182:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4193:4:18",
                "type": ""
              }
            ],
            "src": "4101:218:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4423:93:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4433:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4445:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4456:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4441:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4441:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4433:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4475:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4490:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4498:10:18",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4486:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4486:23:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4468:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4468:42:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4468:42:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4392:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4403:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4414:4:18",
                "type": ""
              }
            ],
            "src": "4324:192:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4646:155:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4656:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4668:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4679:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4664:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4664:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4656:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4698:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4713:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4721:10:18",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4709:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4709:23:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4691:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4691:42:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4691:42:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4753:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4764:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4749:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4749:18:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4773:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4781:12:18",
                            "type": "",
                            "value": "0xffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4769:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4769:25:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4742:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4742:53:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4742:53:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32_t_uint40__to_t_uint32_t_uint40__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4607:9:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4618:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4626:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4637:4:18",
                "type": ""
              }
            ],
            "src": "4521:280:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4980:179:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4997:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5008:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4990:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4990:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4990:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5031:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5042:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5027:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5027:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5047:2:18",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5020:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5020:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5020:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5070:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5081:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5066:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5066:18:18"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a204944454e544943414c5f414444524553534553",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5086:31:18",
                        "type": "",
                        "value": "Nomiswap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5059:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5059:59:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5059:59:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5127:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5139:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5150:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5135:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5135:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5127:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a90c6f057c10e1a53d74da75bc56c676fd121fbdb3c3cf8b1ff7e64725a22925__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4957:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4971:4:18",
                "type": ""
              }
            ],
            "src": "4806:353:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5338:172:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5355:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5366:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5348:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5348:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5348:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5389:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5400:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5385:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5385:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5405:2:18",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5378:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5378:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5378:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5428:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5439:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5424:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5424:18:18"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a205a45524f5f41444452455353",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5444:24:18",
                        "type": "",
                        "value": "Nomiswap: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5417:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5417:52:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5417:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5478:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5490:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5501:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5486:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5486:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5478:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_405e2892877ce8e6370fa3a0dded544224faed24ee93c93308d1a806b4e016ab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5315:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5329:4:18",
                "type": ""
              }
            ],
            "src": "5164:346:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5689:171:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5706:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5717:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5699:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5699:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5699:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5740:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5751:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5736:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5736:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5756:2:18",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5729:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5729:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5729:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5779:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5790:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5775:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5775:18:18"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20504149525f455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5795:23:18",
                        "type": "",
                        "value": "Nomiswap: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5768:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5768:51:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5768:51:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5828:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5840:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5851:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5836:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5836:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5828:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5ace30fe13309f9ef6658b58036e9987d38a6a9e5c2410c1ff9a1017d5d88bae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5666:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5680:4:18",
                "type": ""
              }
            ],
            "src": "5515:345:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5994:198:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6004:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6016:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6027:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6012:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6012:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6004:4:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6039:52:18",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6049:42:18",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6043:2:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6107:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6122:6:18"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6130:2:18"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6118:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6118:15:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6100:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6100:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6100:34:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6154:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6165:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6150:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6150:18:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6174:6:18"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6182:2:18"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6170:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6170:15:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6143:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6143:43:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6143:43:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5955:9:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5966:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5974:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5985:4:18",
                "type": ""
              }
            ],
            "src": "5865:327:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6380:283:18",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6390:27:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6410:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6404:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6404:13:18"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6394:6:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6452:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6460:4:18",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6448:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6448:17:18"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6467:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6472:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6426:21:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6426:53:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6426:53:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6488:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6505:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6510:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6501:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6501:16:18"
                  },
                  "variables": [
                    {
                      "name": "end_1",
                      "nodeType": "YulTypedName",
                      "src": "6492:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6526:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6548:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6542:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6542:13:18"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "6530:8:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6590:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6598:4:18",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6586:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6586:17:18"
                      },
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "6605:5:18"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "6612:8:18"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6564:21:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6564:57:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6564:57:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6630:27:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "6641:5:18"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "6648:8:18"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6637:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6637:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6630:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6348:3:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6353:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6361:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6372:3:18",
                "type": ""
              }
            ],
            "src": "6197:466:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6815:221:18",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6825:76:18",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6835:66:18",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6829:2:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6917:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6930:2:18",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6934:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "6926:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6926:15:18"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6943:2:18"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6922:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6922:24:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6910:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6910:37:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6910:37:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6967:3:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6972:2:18",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6963:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6963:12:18"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6985:2:18",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "6989:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "6981:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6981:15:18"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6998:2:18"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6977:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6977:24:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6956:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6956:46:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6956:46:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7011:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7022:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7027:2:18",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7018:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7018:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7011:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6783:3:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6788:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6796:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6807:3:18",
                "type": ""
              }
            ],
            "src": "6668:368:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7215:176:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7232:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7243:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7225:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7225:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7225:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7266:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7277:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7262:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7262:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7282:2:18",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7255:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7255:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7255:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7305:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7316:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7301:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7301:18:18"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20504149525f4e4f545f43524541544544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7321:28:18",
                        "type": "",
                        "value": "Nomiswap: PAIR_NOT_CREATED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7294:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7294:56:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7294:56:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7359:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7371:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7382:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7367:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7367:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7359:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4cd3c6d7e8df26671528fa650a7de99101eba8529ad12a9bcaca2a5489122164__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7192:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7206:4:18",
                "type": ""
              }
            ],
            "src": "7041:350:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7525:168:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7535:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7547:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7558:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7543:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7543:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7535:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7577:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7592:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7600:42:18",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7588:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7588:55:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7570:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7570:74:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7570:74:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7664:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7675:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7660:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7660:18:18"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7680:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7653:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7653:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7653:34:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7486:9:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7497:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7505:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7516:4:18",
                "type": ""
              }
            ],
            "src": "7396:297:18"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint128(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint32(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint32t_uint40(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint32(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xffffffffff))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Nomiswap: FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_90b73549368af0ae6cdb0c9edf500f2f0d39c143efb4b8689b0b8abb658de3e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Nomiswap: FORBIDDEN_FEE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_uint32_t_uint40__to_t_uint32_t_uint40__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_a90c6f057c10e1a53d74da75bc56c676fd121fbdb3c3cf8b1ff7e64725a22925__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Nomiswap: IDENTICAL_ADDRESSES\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_405e2892877ce8e6370fa3a0dded544224faed24ee93c93308d1a806b4e016ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Nomiswap: ZERO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5ace30fe13309f9ef6658b58036e9987d38a6a9e5c2410c1ff9a1017d5d88bae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Nomiswap: PAIR_EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_stringliteral_4cd3c6d7e8df26671528fa650a7de99101eba8529ad12a9bcaca2a5489122164__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Nomiswap: PAIR_NOT_CREATED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "157:2862:7:-:0;;;;;338:37;;;:::i;:::-;-1:-1:-1;;338:37:7;;;;;;;;;;;;;;;;321:55;;338:37;;321:55;;:::i;:::-;;;;;;;;;;;;;311:66;;;;;;279:98;;552:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;596:11;:26;;-1:-1:-1;;;;;;596:26:7;-1:-1:-1;;;;;596:26:7;;;;;;;;;;157:2862;;;;;;;;;;:::o;14:426:18:-;143:3;181:6;175:13;206:1;216:129;230:6;227:1;224:13;216:129;;;328:4;312:14;;;308:25;;302:32;289:11;;;282:53;245:12;216:129;;;363:6;360:1;357:13;354:48;;;398:1;389:6;384:3;380:16;373:27;354:48;-1:-1:-1;418:16:18;;;;;14:426;-1:-1:-1;;14:426:18:o;445:290::-;515:6;568:2;556:9;547:7;543:23;539:32;536:52;;;584:1;581;574:12;536:52;610:16;;-1:-1:-1;;;;;655:31:18;;645:42;;635:70;;701:1;698;691:12;635:70;724:5;445:290;-1:-1:-1;;;445:290:18:o;:::-;157:2862:7;;;;;;",
  "deployedSourceMap": "157:2862:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;221:20;;;;;;;;;;;;190:42:18;178:55;;;160:74;;148:2;133:18;221:20:7;;;;;;;;247:26;;;;;;;;;520:25;;;;;;:::i;:::-;;:::i;279:98::-;;;;;;;;;576:25:18;;;564:2;549:18;279:98:7;430:177:18;2182:246:7;;;;;;:::i;:::-;;:::i;:::-;;383:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;635:94::-;707:8;:15;635:94;;2852:164;;;;;;:::i;:::-;;:::i;2434:192::-;;;;;;:::i;:::-;;:::i;2011:165::-;;;;;;:::i;:::-;;:::i;2632:214::-;;;;;;:::i;:::-;;:::i;735:1123::-;;;;;;:::i;:::-;;:::i;452:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1864:141;;;;;;:::i;:::-;;:::i;520:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;520:25:7;:::o;2182:246::-;2274:11;;;;2260:10;:25;2252:57;;;;;;;3603:2:18;2252:57:7;;;3585:21:18;3642:2;3622:18;;;3615:30;3681:21;3661:18;;;3654:49;3720:18;;2252:57:7;;;;;;;;;2337:1;2327:7;:11;;;2319:47;;;;;;;3951:2:18;2319:47:7;;;3933:21:18;3990:2;3970:18;;;3963:30;4029:25;4009:18;;;4002:53;4072:18;;2319:47:7;3749:347:18;2319:47:7;2376:45;;;;;4277:34:18;4265:47;;2376:45:7;;;4247:66:18;2376:36:7;;;;;;4220:18:18;;2376:45:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2182:246;;:::o;2852:164::-;2927:11;;;;2913:10;:25;2905:57;;;;;;;3603:2:18;2905:57:7;;;3585:21:18;3642:2;3622:18;;;3615:30;3681:21;3661:18;;;3654:49;3720:18;;2905:57:7;3401:343:18;2905:57:7;2991:5;2972:35;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2852:164;:::o;2434:192::-;2527:11;;;;2513:10;:25;2505:57;;;;;;;3603:2:18;2505:57:7;;;3585:21:18;3642:2;3622:18;;;3615:30;3681:21;3661:18;;;3654:49;3720:18;;2505:57:7;3401:343:18;2505:57:7;2572:47;;;;;4498:10:18;4486:23;;2572:47:7;;;4468:42:18;2572:37:7;;;;;;4441:18:18;;2572:47:7;4324:192:18;2011:165:7;2098:11;;;;2084:10;:25;2076:57;;;;;;;3603:2:18;2076:57:7;;;3585:21:18;3642:2;3622:18;;;3615:30;3681:21;3661:18;;;3654:49;3720:18;;2076:57:7;3401:343:18;2076:57:7;2143:11;:26;;;;;;;;;;;;;;;2011:165::o;2632:214::-;2740:11;;;;2726:10;:25;2718:57;;;;;;;3603:2:18;2718:57:7;;;3585:21:18;3642:2;3622:18;;;3615:30;3681:21;3661:18;;;3654:49;3720:18;;2718:57:7;3401:343:18;2718:57:7;2785:54;;;;;4721:10:18;4709:23;;2785:54:7;;;4691:42:18;4781:12;4769:25;;4749:18;;;4742:53;2785:31:7;;;;;;4664:18:18;;2785:54:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:214;;;:::o;735:1123::-;851:11;;805:12;;851:11;;837:10;:25;829:57;;;;;;;3603:2:18;829:57:7;;;3585:21:18;3642:2;3622:18;;;3615:30;3681:21;3661:18;;;3654:49;3720:18;;829:57:7;3401:343:18;829:57:7;914:6;904:16;;:6;:16;;;896:58;;;;;;;5008:2:18;896:58:7;;;4990:21:18;5047:2;5027:18;;;5020:30;5086:31;5066:18;;;5059:59;5135:18;;896:58:7;4806:353:18;896:58:7;965:14;981;1008:6;999:15;;:6;:15;;;:53;;1037:6;1045;999:53;;;1018:6;1026;999:53;964:88;;-1:-1:-1;964:88:7;-1:-1:-1;1070:20:7;;;1062:55;;;;;;;5366:2:18;1062:55:7;;;5348:21:18;5405:2;5385:18;;;5378:30;5444:24;5424:18;;;5417:52;5486:18;;1062:55:7;5164:346:18;1062:55:7;1135:37;:15;;;1170:1;1135:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:37;1127:71;;;;;;;5717:2:18;1127:71:7;;;5699:21:18;5756:2;5736:18;;;5729:30;5795:23;5775:18;;;5768:51;5836:18;;1127:71:7;5515:345:18;1127:71:7;1238:25;1266:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6049:42:18;6118:15;;;1266:37:7;1368:26;;6100:34:18;6170:15;;6150:18;;;6143:43;1266:37:7;;-1:-1:-1;1313:21:7;;1266:37;;6012:18:18;;1368:26:7;;;;;;;;;;;;;;1337:58;;;1368:26;1337:58;;:::i;:::-;;;;;;;;;;;;;;;6835:66:18;6930:2;6926:15;;;6922:24;;1337:58:7;1430:32;;6910:37:18;6981:15;;;6977:24;6963:12;;;6956:46;1337:58:7;-1:-1:-1;1405:12:7;;7018::18;;1430:32:7;;;;;;;;;;;;1420:43;;;;;;1405:58;;1551:4;1540:8;1534:15;1529:2;1519:8;1515:17;1512:1;1504:52;1496:60;-1:-1:-1;1583:18:7;;;1575:57;;;;;;;7243:2:18;1575:57:7;;;7225:21:18;7282:2;7262:18;;;7255:30;7321:28;7301:18;;;7294:56;7367:18;;1575:57:7;7041:350:18;1575:57:7;1642:15;;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:30;;;;;;;;;;;;;;1682:15;;;;;;:23;;;;;;;;:30;;;;;;;;1767:8;:19;;-1:-1:-1;1767:19:7;;;;;;;;;;;;;;;;;;;;;;1835:15;;1801:50;;7570:74:18;;;7660:18;;;7653:34;1801:50:7;;7543:18:18;1801:50:7;;;;;;;819:1039;;;;;735:1123;;;;:::o;1864:141::-;1939:11;;;;1925:10;:25;1917:57;;;;;;;3603:2:18;1917:57:7;;;3585:21:18;3642:2;3622:18;;;3615:30;3681:21;3661:18;;;3654:49;3720:18;;1917:57:7;3401:343:18;1917:57:7;1984:5;:14;;;;;;;;;;;;;;;1864:141::o;-1:-1:-1:-;;;;;;;;:::o;245:180:18:-;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;-1:-1:-1;396:23:18;;245:180;-1:-1:-1;245:180:18:o;612:196::-;680:20;;740:42;729:54;;719:65;;709:93;;798:1;795;788:12;709:93;612:196;;;:::o;813:375::-;881:6;889;942:2;930:9;921:7;917:23;913:32;910:52;;;958:1;955;948:12;910:52;981:29;1000:9;981:29;:::i;:::-;971:39;;1060:2;1049:9;1045:18;1032:32;1104:34;1097:5;1093:46;1086:5;1083:57;1073:85;;1154:1;1151;1144:12;1073:85;1177:5;1167:15;;;813:375;;;;;:::o;1193:258::-;1265:1;1275:113;1289:6;1286:1;1283:13;1275:113;;;1365:11;;;1359:18;1346:11;;;1339:39;1311:2;1304:10;1275:113;;;1406:6;1403:1;1400:13;1397:48;;;1441:1;1432:6;1427:3;1423:16;1416:27;1397:48;;1193:258;;;:::o;1456:442::-;1605:2;1594:9;1587:21;1568:4;1637:6;1631:13;1680:6;1675:2;1664:9;1660:18;1653:34;1696:66;1755:6;1750:2;1739:9;1735:18;1730:2;1722:6;1718:15;1696:66;:::i;:::-;1814:2;1802:15;1819:66;1798:88;1783:104;;;;1889:2;1779:113;;1456:442;-1:-1:-1;;1456:442:18:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:18:o;2276:163::-;2343:20;;2403:10;2392:22;;2382:33;;2372:61;;2429:1;2426;2419:12;2444:258;2511:6;2519;2572:2;2560:9;2551:7;2547:23;2543:32;2540:52;;;2588:1;2585;2578:12;2540:52;2611:29;2630:9;2611:29;:::i;:::-;2601:39;;2659:37;2692:2;2681:9;2677:18;2659:37;:::i;:::-;2649:47;;2444:258;;;;;:::o;2707:424::-;2782:6;2790;2798;2851:2;2839:9;2830:7;2826:23;2822:32;2819:52;;;2867:1;2864;2857:12;2819:52;2890:29;2909:9;2890:29;:::i;:::-;2880:39;;2938:37;2971:2;2960:9;2956:18;2938:37;:::i;:::-;2928:47;;3025:2;3014:9;3010:18;2997:32;3069:12;3062:5;3058:24;3051:5;3048:35;3038:63;;3097:1;3094;3087:12;3038:63;3120:5;3110:15;;;2707:424;;;;;:::o;3136:260::-;3204:6;3212;3265:2;3253:9;3244:7;3240:23;3236:32;3233:52;;;3281:1;3278;3271:12;3233:52;3304:29;3323:9;3304:29;:::i;:::-;3294:39;;3352:38;3386:2;3375:9;3371:18;3352:38;:::i;6197:466::-;6372:3;6410:6;6404:13;6426:53;6472:6;6467:3;6460:4;6452:6;6448:17;6426:53;:::i;:::-;6542:13;;6501:16;;;;6564:57;6542:13;6501:16;6598:4;6586:17;;6564:57;:::i;:::-;6637:20;;6197:466;-1:-1:-1;;;;6197:466:18:o",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.15;\n\nimport './NomiswapStablePair.sol';\nimport './interfaces/INomiswapStableFactory.sol';\n\ncontract NomiswapStableFactory is INomiswapStableFactory {\n\n    address public feeTo;\n    address public feeToSetter;\n    bytes32 public INIT_CODE_HASH = keccak256(abi.encodePacked(type(NomiswapStablePair).creationCode));\n    string public constant version = 'NomiswapStableFactory 2.0.0';\n\n    mapping(address => mapping(address => address)) public getPair;\n    address[] public allPairs;\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    function allPairsLength() external view returns (uint) {\n        return allPairs.length;\n    }\n\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        require(tokenA != tokenB, 'Nomiswap: IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'Nomiswap: ZERO_ADDRESS');\n        require(getPair[token0][token1] == address(0), 'Nomiswap: PAIR_EXISTS'); // single check is sufficient\n        bytes memory creationCode = type(NomiswapStablePair).creationCode;\n        bytes memory bytecode = abi.encodePacked(creationCode, abi.encode(token0, token1));\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        require(pair != address(0), \"Nomiswap: PAIR_NOT_CREATED\");\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        feeToSetter = _feeToSetter;\n    }\n\n    function setDevFee(address _pair, uint128 _devFee) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        require(_devFee > 0, 'Nomiswap: FORBIDDEN_FEE');\n        INomiswapStablePair(_pair).setDevFee(_devFee);\n    }\n\n    function setSwapFee(address _pair, uint32 _swapFee) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        INomiswapStablePair(_pair).setSwapFee(_swapFee);\n    }\n\n    function rampA(address _pair, uint32 _futureA, uint40 _futureTime) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        NomiswapStablePair(_pair).rampA(_futureA, _futureTime);\n    }\n\n    function stopRampA(address _pair) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        NomiswapStablePair(_pair).stopRampA();\n    }\n\n}\n",
  "sourcePath": "/Users/plyuriy/projects/dex/stableswap-contracts/contracts/NomiswapStableFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/NomiswapStableFactory.sol",
    "exportedSymbols": {
      "Address": [
        754
      ],
      "FactoryGuard": [
        3822
      ],
      "IERC20": [
        117
      ],
      "IERC20Metadata": [
        142
      ],
      "IERC20Permit": [
        178
      ],
      "INomiswapCallee": [
        3361
      ],
      "INomiswapERC20": [
        3401
      ],
      "INomiswapFactory": [
        3476
      ],
      "INomiswapPair": [
        3589
      ],
      "INomiswapStableFactory": [
        3609
      ],
      "INomiswapStablePair": [
        3680
      ],
      "MathUtils": [
        3751
      ],
      "NomiswapStableERC20": [
        1186
      ],
      "NomiswapStableFactory": [
        1508
      ],
      "NomiswapStablePair": [
        3347
      ],
      "ReentrancyGuard": [
        39
      ],
      "SafeERC20": [
        459
      ],
      "UQ112x112": [
        3795
      ]
    },
    "id": 1509,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1188,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:24:7"
      },
      {
        "absolutePath": "project:/contracts/NomiswapStablePair.sol",
        "file": "./NomiswapStablePair.sol",
        "id": 1189,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1509,
        "sourceUnit": 3348,
        "src": "71:34:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/INomiswapStableFactory.sol",
        "file": "./interfaces/INomiswapStableFactory.sol",
        "id": 1190,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1509,
        "sourceUnit": 3610,
        "src": "106:49:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1191,
              "name": "INomiswapStableFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3609,
              "src": "191:22:7"
            },
            "id": 1192,
            "nodeType": "InheritanceSpecifier",
            "src": "191:22:7"
          }
        ],
        "canonicalName": "NomiswapStableFactory",
        "contractDependencies": [
          3347
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1508,
        "linearizedBaseContracts": [
          1508,
          3609,
          3476
        ],
        "name": "NomiswapStableFactory",
        "nameLocation": "166:21:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              3418
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 1194,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "236:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 1508,
            "src": "221:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1193,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "221:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3423
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 1196,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "262:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 1508,
            "src": "247:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1195,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "247:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3428
            ],
            "constant": false,
            "functionSelector": "257671f5",
            "id": 1207,
            "mutability": "mutable",
            "name": "INIT_CODE_HASH",
            "nameLocation": "294:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 1508,
            "src": "279:98:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1197,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "279:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1202,
                            "name": "NomiswapStablePair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3347,
                            "src": "343:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NomiswapStablePair_$3347_$",
                              "typeString": "type(contract NomiswapStablePair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_NomiswapStablePair_$3347_$",
                              "typeString": "type(contract NomiswapStablePair)"
                            }
                          ],
                          "id": 1201,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "338:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "338:24:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_NomiswapStablePair_$3347",
                          "typeString": "type(contract NomiswapStablePair)"
                        }
                      },
                      "id": 1204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "338:37:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "expression": {
                      "id": 1199,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "321:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 1200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "321:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 1205,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "321:55:7",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 1198,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "311:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1206,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "311:66:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "54fd4d50",
            "id": 1210,
            "mutability": "constant",
            "name": "version",
            "nameLocation": "406:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1508,
            "src": "383:62:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 1208,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "383:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4e6f6d6973776170537461626c65466163746f727920322e302e30",
              "id": 1209,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "416:29:7",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_061470f587127d7add81460e1eb090ae06c7a1c2665ed82f285015a91a83c4fc",
                "typeString": "literal_string \"NomiswapStableFactory 2.0.0\""
              },
              "value": "NomiswapStableFactory 2.0.0"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3437
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 1216,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "507:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1508,
            "src": "452:62:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1215,
              "keyType": {
                "id": 1211,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "460:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "452:47:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1214,
                "keyType": {
                  "id": 1212,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "479:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "471:27:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1213,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "490:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3444
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 1219,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "537:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1508,
            "src": "520:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1217,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "520:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1218,
              "nodeType": "ArrayTypeName",
              "src": "520:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1228,
              "nodeType": "Block",
              "src": "586:43:7",
              "statements": [
                {
                  "expression": {
                    "id": 1226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1224,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1196,
                      "src": "596:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1225,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1221,
                      "src": "610:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "596:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1227,
                  "nodeType": "ExpressionStatement",
                  "src": "596:26:7"
                }
              ]
            },
            "id": 1229,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1221,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "572:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1229,
                  "src": "564:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "563:22:7"
            },
            "returnParameters": {
              "id": 1223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:0:7"
            },
            "scope": 1508,
            "src": "552:77:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3449
            ],
            "body": {
              "id": 1237,
              "nodeType": "Block",
              "src": "690:39:7",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1234,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1219,
                      "src": "707:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "707:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1233,
                  "id": 1236,
                  "nodeType": "Return",
                  "src": "700:22:7"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 1238,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "644:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:2:7"
            },
            "returnParameters": {
              "id": 1233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1232,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1238,
                  "src": "684:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1231,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "683:6:7"
            },
            "scope": 1508,
            "src": "635:94:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3458
            ],
            "body": {
              "id": 1371,
              "nodeType": "Block",
              "src": "819:1039:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1248,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "837:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "837:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1250,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "851:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "837:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "864:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "829:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "829:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1254,
                  "nodeType": "ExpressionStatement",
                  "src": "829:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1256,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1240,
                          "src": "904:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1257,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1242,
                          "src": "914:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "904:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a204944454e544943414c5f414444524553534553",
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "922:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a90c6f057c10e1a53d74da75bc56c676fd121fbdb3c3cf8b1ff7e64725a22925",
                          "typeString": "literal_string \"Nomiswap: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Nomiswap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a90c6f057c10e1a53d74da75bc56c676fd121fbdb3c3cf8b1ff7e64725a22925",
                          "typeString": "literal_string \"Nomiswap: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "896:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "896:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1261,
                  "nodeType": "ExpressionStatement",
                  "src": "896:58:7"
                },
                {
                  "assignments": [
                    1263,
                    1265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1263,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "973:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1371,
                      "src": "965:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1262,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "965:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1265,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "989:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1371,
                      "src": "981:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1264,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "981:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1276,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1266,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1240,
                        "src": "999:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1267,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1242,
                        "src": "1008:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "999:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 1272,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1242,
                          "src": "1037:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1273,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1240,
                          "src": "1045:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1274,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1036:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "999:53:7",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 1269,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1240,
                          "src": "1018:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1270,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1242,
                          "src": "1026:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1271,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1017:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "964:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1278,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1263,
                          "src": "1070:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1088:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1080:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1279,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1080:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1080:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1070:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a205a45524f5f41444452455353",
                        "id": 1284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1092:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_405e2892877ce8e6370fa3a0dded544224faed24ee93c93308d1a806b4e016ab",
                          "typeString": "literal_string \"Nomiswap: ZERO_ADDRESS\""
                        },
                        "value": "Nomiswap: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_405e2892877ce8e6370fa3a0dded544224faed24ee93c93308d1a806b4e016ab",
                          "typeString": "literal_string \"Nomiswap: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 1277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1062:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1062:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1286,
                  "nodeType": "ExpressionStatement",
                  "src": "1062:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1288,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1216,
                              "src": "1135:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 1290,
                            "indexExpression": {
                              "id": 1289,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1263,
                              "src": "1143:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1135:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1292,
                          "indexExpression": {
                            "id": 1291,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "1151:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1135:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1170:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1162:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1293,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1162:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1162:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1135:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20504149525f455849535453",
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1174:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ace30fe13309f9ef6658b58036e9987d38a6a9e5c2410c1ff9a1017d5d88bae",
                          "typeString": "literal_string \"Nomiswap: PAIR_EXISTS\""
                        },
                        "value": "Nomiswap: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ace30fe13309f9ef6658b58036e9987d38a6a9e5c2410c1ff9a1017d5d88bae",
                          "typeString": "literal_string \"Nomiswap: PAIR_EXISTS\""
                        }
                      ],
                      "id": 1287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1127:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1127:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1300,
                  "nodeType": "ExpressionStatement",
                  "src": "1127:71:7"
                },
                {
                  "assignments": [
                    1302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1302,
                      "mutability": "mutable",
                      "name": "creationCode",
                      "nameLocation": "1251:12:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1371,
                      "src": "1238:25:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1301,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1238:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1307,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1304,
                          "name": "NomiswapStablePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3347,
                          "src": "1271:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NomiswapStablePair_$3347_$",
                            "typeString": "type(contract NomiswapStablePair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_NomiswapStablePair_$3347_$",
                            "typeString": "type(contract NomiswapStablePair)"
                          }
                        ],
                        "id": 1303,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1266:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1266:24:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_NomiswapStablePair_$3347",
                        "typeString": "type(contract NomiswapStablePair)"
                      }
                    },
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1266:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1238:65:7"
                },
                {
                  "assignments": [
                    1309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1309,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1326:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1371,
                      "src": "1313:21:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1308,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1313:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1319,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1312,
                        "name": "creationCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "1354:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1315,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1263,
                            "src": "1379:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1316,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "1387:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1313,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1368:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1368:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1368:26:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1310,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "1337:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "1337:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1337:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1313:82:7"
                },
                {
                  "assignments": [
                    1321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1321,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1413:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1371,
                      "src": "1405:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1320,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1405:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1329,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1325,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1263,
                            "src": "1447:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1326,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "1455:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1323,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1430:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1430:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1430:32:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1322,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1420:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1420:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1405:58:7"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1482:84:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1496:60:7",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1512:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1519:8:7"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1529:2:7",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1515:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1515:17:7"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1540:8:7"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1534:5:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1534:15:7"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1551:4:7"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1504:7:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1504:52:7"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1496:4:7"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1309,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1519:8:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1309,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1540:8:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1245,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1496:4:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1321,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1551:4:7",
                      "valueSize": 1
                    }
                  ],
                  "id": 1330,
                  "nodeType": "InlineAssembly",
                  "src": "1473:93:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1332,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "1583:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1599:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1591:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1333,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1591:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1591:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1583:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20504149525f4e4f545f43524541544544",
                        "id": 1338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1603:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cd3c6d7e8df26671528fa650a7de99101eba8529ad12a9bcaca2a5489122164",
                          "typeString": "literal_string \"Nomiswap: PAIR_NOT_CREATED\""
                        },
                        "value": "Nomiswap: PAIR_NOT_CREATED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cd3c6d7e8df26671528fa650a7de99101eba8529ad12a9bcaca2a5489122164",
                          "typeString": "literal_string \"Nomiswap: PAIR_NOT_CREATED\""
                        }
                      ],
                      "id": 1331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1575:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1575:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1340,
                  "nodeType": "ExpressionStatement",
                  "src": "1575:57:7"
                },
                {
                  "expression": {
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1341,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1216,
                          "src": "1642:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1344,
                        "indexExpression": {
                          "id": 1342,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1263,
                          "src": "1650:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1642:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1345,
                      "indexExpression": {
                        "id": 1343,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1265,
                        "src": "1658:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1642:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1346,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1245,
                      "src": "1668:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1642:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1348,
                  "nodeType": "ExpressionStatement",
                  "src": "1642:30:7"
                },
                {
                  "expression": {
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1349,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1216,
                          "src": "1682:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1352,
                        "indexExpression": {
                          "id": 1350,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1265,
                          "src": "1690:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1682:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1353,
                      "indexExpression": {
                        "id": 1351,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1263,
                        "src": "1698:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1682:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1354,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1245,
                      "src": "1708:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1682:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1356,
                  "nodeType": "ExpressionStatement",
                  "src": "1682:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1360,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1245,
                        "src": "1781:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1357,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1219,
                        "src": "1767:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1767:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1767:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1362,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:19:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1364,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1263,
                        "src": "1813:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1365,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1265,
                        "src": "1821:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1366,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1245,
                        "src": "1829:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1367,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1219,
                          "src": "1835:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1835:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1363,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3413,
                      "src": "1801:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1370,
                  "nodeType": "EmitStatement",
                  "src": "1796:55:7"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 1372,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "744:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1240,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "763:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1372,
                  "src": "755:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "755:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1242,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "779:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1372,
                  "src": "771:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "754:32:7"
            },
            "returnParameters": {
              "id": 1246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1245,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "813:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1372,
                  "src": "805:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "804:14:7"
            },
            "scope": 1508,
            "src": "735:1123:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3463
            ],
            "body": {
              "id": 1389,
              "nodeType": "Block",
              "src": "1907:98:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1378,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1925:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1925:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1380,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "1939:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1925:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1952:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1917:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1917:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1384,
                  "nodeType": "ExpressionStatement",
                  "src": "1917:57:7"
                },
                {
                  "expression": {
                    "id": 1387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1385,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1194,
                      "src": "1984:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1386,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1374,
                      "src": "1992:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1984:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1388,
                  "nodeType": "ExpressionStatement",
                  "src": "1984:14:7"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 1390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1873:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1374,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1890:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1390,
                  "src": "1882:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1881:16:7"
            },
            "returnParameters": {
              "id": 1376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1907:0:7"
            },
            "scope": 1508,
            "src": "1864:141:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3468
            ],
            "body": {
              "id": 1407,
              "nodeType": "Block",
              "src": "2066:110:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1396,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2084:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2084:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1398,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "2098:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2084:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2111:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2076:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1402,
                  "nodeType": "ExpressionStatement",
                  "src": "2076:57:7"
                },
                {
                  "expression": {
                    "id": 1405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1403,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1196,
                      "src": "2143:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1404,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1392,
                      "src": "2157:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2143:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1406,
                  "nodeType": "ExpressionStatement",
                  "src": "2143:26:7"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 1408,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "2020:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1392,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "2043:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1408,
                  "src": "2035:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2035:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2034:22:7"
            },
            "returnParameters": {
              "id": 1394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2066:0:7"
            },
            "scope": 1508,
            "src": "2011:165:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1437,
              "nodeType": "Block",
              "src": "2242:186:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1416,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2260:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2260:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1418,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "2274:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2260:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2287:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1415,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2252:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2252:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1422,
                  "nodeType": "ExpressionStatement",
                  "src": "2252:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 1426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1424,
                          "name": "_devFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1412,
                          "src": "2327:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2337:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2327:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e5f464545",
                        "id": 1427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2340:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90b73549368af0ae6cdb0c9edf500f2f0d39c143efb4b8689b0b8abb658de3e2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN_FEE\""
                        },
                        "value": "Nomiswap: FORBIDDEN_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90b73549368af0ae6cdb0c9edf500f2f0d39c143efb4b8689b0b8abb658de3e2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN_FEE\""
                        }
                      ],
                      "id": 1423,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2319:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2319:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1429,
                  "nodeType": "ExpressionStatement",
                  "src": "2319:47:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1434,
                        "name": "_devFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1412,
                        "src": "2413:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1431,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1410,
                            "src": "2396:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1430,
                          "name": "INomiswapStablePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3680,
                          "src": "2376:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_INomiswapStablePair_$3680_$",
                            "typeString": "type(contract INomiswapStablePair)"
                          }
                        },
                        "id": 1432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2376:26:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INomiswapStablePair_$3680",
                          "typeString": "contract INomiswapStablePair"
                        }
                      },
                      "id": 1433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDevFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3651,
                      "src": "2376:36:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint128_$returns$__$",
                        "typeString": "function (uint128) external"
                      }
                    },
                    "id": 1435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2376:45:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1436,
                  "nodeType": "ExpressionStatement",
                  "src": "2376:45:7"
                }
              ]
            },
            "functionSelector": "52b5c71e",
            "id": 1438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDevFee",
            "nameLocation": "2191:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1410,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "2209:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1438,
                  "src": "2201:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2201:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1412,
                  "mutability": "mutable",
                  "name": "_devFee",
                  "nameLocation": "2224:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1438,
                  "src": "2216:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1411,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2216:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2200:32:7"
            },
            "returnParameters": {
              "id": 1414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2242:0:7"
            },
            "scope": 1508,
            "src": "2182:246:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3475
            ],
            "body": {
              "id": 1460,
              "nodeType": "Block",
              "src": "2495:131:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1446,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2513:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2513:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1448,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "2527:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2513:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2540:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2505:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2505:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1452,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1457,
                        "name": "_swapFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1442,
                        "src": "2610:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1454,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1440,
                            "src": "2592:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1453,
                          "name": "INomiswapStablePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3680,
                          "src": "2572:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_INomiswapStablePair_$3680_$",
                            "typeString": "type(contract INomiswapStablePair)"
                          }
                        },
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2572:26:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INomiswapStablePair_$3680",
                          "typeString": "contract INomiswapStablePair"
                        }
                      },
                      "id": 1456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSwapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3646,
                      "src": "2572:37:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32) external"
                      }
                    },
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2572:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1459,
                  "nodeType": "ExpressionStatement",
                  "src": "2572:47:7"
                }
              ]
            },
            "functionSelector": "9e68ceb8",
            "id": 1461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSwapFee",
            "nameLocation": "2443:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1440,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "2462:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "2454:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2454:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1442,
                  "mutability": "mutable",
                  "name": "_swapFee",
                  "nameLocation": "2476:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "2469:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1441,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2469:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2453:32:7"
            },
            "returnParameters": {
              "id": 1444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2495:0:7"
            },
            "scope": 1508,
            "src": "2434:192:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3603
            ],
            "body": {
              "id": 1486,
              "nodeType": "Block",
              "src": "2708:138:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1471,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2726:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2726:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1473,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "2740:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2726:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2753:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1470,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2718:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2718:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1477,
                  "nodeType": "ExpressionStatement",
                  "src": "2718:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1482,
                        "name": "_futureA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1465,
                        "src": "2817:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1483,
                        "name": "_futureTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1467,
                        "src": "2827:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1479,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1463,
                            "src": "2804:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1478,
                          "name": "NomiswapStablePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3347,
                          "src": "2785:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NomiswapStablePair_$3347_$",
                            "typeString": "type(contract NomiswapStablePair)"
                          }
                        },
                        "id": 1480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2785:25:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NomiswapStablePair_$3347",
                          "typeString": "contract NomiswapStablePair"
                        }
                      },
                      "id": 1481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rampA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2553,
                      "src": "2785:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint40_$returns$__$",
                        "typeString": "function (uint32,uint40) external"
                      }
                    },
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2785:54:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1485,
                  "nodeType": "ExpressionStatement",
                  "src": "2785:54:7"
                }
              ]
            },
            "functionSelector": "bcec1e4d",
            "id": 1487,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rampA",
            "nameLocation": "2641:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1463,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "2655:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1487,
                  "src": "2647:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2647:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1465,
                  "mutability": "mutable",
                  "name": "_futureA",
                  "nameLocation": "2669:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1487,
                  "src": "2662:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1464,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2662:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1467,
                  "mutability": "mutable",
                  "name": "_futureTime",
                  "nameLocation": "2686:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1487,
                  "src": "2679:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1466,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "2679:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2646:52:7"
            },
            "returnParameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2708:0:7"
            },
            "scope": 1508,
            "src": "2632:214:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3608
            ],
            "body": {
              "id": 1506,
              "nodeType": "Block",
              "src": "2895:121:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1493,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2913:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2913:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1495,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "2927:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2913:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2940:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2905:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2905:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1499,
                  "nodeType": "ExpressionStatement",
                  "src": "2905:57:7"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1501,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1489,
                            "src": "2991:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1500,
                          "name": "NomiswapStablePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3347,
                          "src": "2972:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NomiswapStablePair_$3347_$",
                            "typeString": "type(contract NomiswapStablePair)"
                          }
                        },
                        "id": 1502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2972:25:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NomiswapStablePair_$3347",
                          "typeString": "contract NomiswapStablePair"
                        }
                      },
                      "id": 1503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopRampA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2600,
                      "src": "2972:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2972:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1505,
                  "nodeType": "ExpressionStatement",
                  "src": "2972:37:7"
                }
              ]
            },
            "functionSelector": "6864a4b3",
            "id": 1507,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stopRampA",
            "nameLocation": "2861:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1489,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "2879:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1507,
                  "src": "2871:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2871:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2870:15:7"
            },
            "returnParameters": {
              "id": 1491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2895:0:7"
            },
            "scope": 1508,
            "src": "2852:164:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1509,
        "src": "157:2862:7",
        "usedErrors": []
      }
    ],
    "src": "45:2975:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-12-12T10:22:13.048Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}