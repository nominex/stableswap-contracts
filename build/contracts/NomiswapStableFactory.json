{
  "contractName": "NomiswapStableFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INIT_CODE_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_devFee",
          "type": "uint128"
        }
      ],
      "name": "setDevFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_swapFee",
          "type": "uint32"
        }
      ],
      "name": "setSwapFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_futureA",
          "type": "uint32"
        },
        {
          "internalType": "uint40",
          "name": "_futureTime",
          "type": "uint40"
        }
      ],
      "name": "rampA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        }
      ],
      "name": "stopRampA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INIT_CODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_futureA\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"_futureTime\",\"type\":\"uint40\"}],\"name\":\"rampA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_devFee\",\"type\":\"uint128\"}],\"name\":\"setDevFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_swapFee\",\"type\":\"uint32\"}],\"name\":\"setSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"}],\"name\":\"stopRampA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NomiswapStableFactory.sol\":\"NomiswapStableFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"project:/contracts/NomiswapStableERC20.sol\":{\"keccak256\":\"0xd4e93be0840371a2d67e1d97e54427a2d0707c65a637624289f58bcbeec333a7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2cb80793ac22127609c362b7d2ef23b698fca2b2845572a4ac3ca6021fbd3107\",\"dweb:/ipfs/QmWKuC1bNoQ8acXBYEjX5d6kkonbbcw4TxKu7tBEDzYgj4\"]},\"project:/contracts/NomiswapStableFactory.sol\":{\"keccak256\":\"0xcc7553a4c67505696663199c2b2b93b126db29712a796571c6395ac72e91ab8e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dba9c13eb74f1867dd9c5fc00c9ae176056ccaeea945322dda7b0defab1ff9d4\",\"dweb:/ipfs/QmSJ3sHbhodKFrUuKWXwNwEcyqsBvQUGPYXtGyzvTbpWZd\"]},\"project:/contracts/NomiswapStablePair.sol\":{\"keccak256\":\"0x7a3f33720d783a62b0126b438ea49caad6440a138476c7e735ab6be6ad370b76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6bc132e48a6b1296cf2e12660bf26bd44989ac2e57f3aafbc9a81f9d1c96d1de\",\"dweb:/ipfs/QmUvYtuk8YCoceu2AykxN59jtPBN6F3b6937PhQTcswBqQ\"]},\"project:/contracts/interfaces/INomiswapCallee.sol\":{\"keccak256\":\"0xacd4b53dd95d9b5411449f8207eaf820cb409bbe471dbca714c76a53c34dd2ba\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a9038bbed61d51309fa8fc4c2cc4b953fb80b941780cb34258ebdf0e6f639323\",\"dweb:/ipfs/QmQSHYywSioABgon7fCvnPM5ir4T4FvEPiDzGyAz6bweeP\"]},\"project:/contracts/interfaces/INomiswapERC20.sol\":{\"keccak256\":\"0x2737e32674994900a880c61b46af7bfcd7f593789e710bdc51d36b9e5c2e4949\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7cbe5cc81643ed32aa81c41ac672a1477d018ec62ed2ff4c72e1e6259e5cabbe\",\"dweb:/ipfs/QmY6tZsTSzvdA5UQKpB1RYkjCoQQPDNQZ1a24eaDZW3z51\"]},\"project:/contracts/interfaces/INomiswapFactory.sol\":{\"keccak256\":\"0xc5137e516b4343883f1f0677640c6085b0703a08ee43e6aa646e90c83558f234\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://142455df84a3786d4d85ebe5047e59722c1206a1174dd58a6477616b0797ea2d\",\"dweb:/ipfs/QmQ8oZGGk6rVQt5HDrtTKy9sSTziw7HmoeREFSz35uEspB\"]},\"project:/contracts/interfaces/INomiswapPair.sol\":{\"keccak256\":\"0x0c8e15c45a7fc369f3653849907983dee36578a3f3fc9f6efec46b696f2270ba\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://85c7d10e9133e3b8bb8740e5296db96fbc8ca65ccdedc664e4c0dcdf3fef9367\",\"dweb:/ipfs/QmeTRvnvcL5aZVk4BtprWz8TbdrjheJDqGswG81m7g1SQH\"]},\"project:/contracts/interfaces/INomiswapStableFactory.sol\":{\"keccak256\":\"0x23c893698ad4b2be2fd227a6447c7fce6f541ffc42e46fe0fc28d41223326383\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e55e7d8049cc5f33604d0b993671ecd8d2602e572341e9c01060fb66f3a31100\",\"dweb:/ipfs/QmRwTutky42bL2K3rPQoUPSHMuEkrv48S7Y7f9ByTLUJPG\"]},\"project:/contracts/interfaces/INomiswapStablePair.sol\":{\"keccak256\":\"0xa1fc0ec05979c95974fcb063511608eda0a7fa604cd51f76f7b2bdd46d8426bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2f4931165a9c0b53b8329a84aa6b5fc753d8443d99c328d690f6d8abfa8739ba\",\"dweb:/ipfs/QmSreerYfBtPaa1QmJqwLvQMYg312s9ud8bkbiRvCAAhLb\"]},\"project:/contracts/libraries/MathUtils.sol\":{\"keccak256\":\"0x8dab218f7960e9d09cf585d11636f0718534e736fe5d00fe5ada686d75219296\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://38318737164b4e1fb5d97d9dea537d277423c1ea33b9dd69209f7c73294120d5\",\"dweb:/ipfs/QmSGYHviCuzsg7Gy1korkCJ9a5sFZpwEuVnS9rfjq5jZzH\"]},\"project:/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x95ff0ef08c4d04cb3fd73d792b654beb75b2a53b6236ad6b8319aa455f9e930b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ebbb2d706cedae4883c790ecc7767c48948e8ed62d32d5c5b26b917c1a7d05e5\",\"dweb:/ipfs/QmV9vBsmXgFFjGouxTZUfajD7uWvf7DWSEUVHDzoBinTL6\"]},\"project:/contracts/util/FactoryGuard.sol\":{\"keccak256\":\"0x33c3e985d80539165debff54bb360d9c67642aeef4a655c4183e72a12509b0f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://383a650b5007f6fedc47993c757bec0681c41ade07501fc8f129f8e8f46a10d1\",\"dweb:/ipfs/QmTw9VA8kgchDWFxMtcqdw3Se5JJPpZZ5tWD7gAQVEUjdB\"]}},\"version\":1}",
  "bytecode": "0x6080604081905261001060a061009d565b601f1982820381018352601f90910116604081905261003291906020016100ab565b6040516020818303038152906040528051906020012060025534801561005757600080fd5b506040516200a56d3803806200a56d833981016040819052610078916100e6565b600180546001600160a01b0319166001600160a01b0392909216919091179055610116565b614a0e8062005b5f83390190565b6000825160005b818110156100cc57602081860181015185830152016100b2565b818111156100db576000828501525b509190910192915050565b6000602082840312156100f857600080fd5b81516001600160a01b038116811461010f57600080fd5b9392505050565b615a3980620001266000396000f3fe60806040523480156200001157600080fd5b5060043610620000f15760003560e01c80636864a4b31162000097578063bcec1e4d116200006e578063bcec1e4d14620001f9578063c9c653961462000210578063e6a439051462000227578063f46901ed146200026b57600080fd5b80636864a4b314620001b45780639e68ceb814620001cb578063a2e74af614620001e257600080fd5b8063257671f511620000cc578063257671f5146200017957806352b5c71e1462000192578063574f2ba314620001ab57600080fd5b8063017e7e5814620000f6578063094b741514620001415780631e3dd18b1462000162575b600080fd5b600054620001179073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b600154620001179073ffffffffffffffffffffffffffffffffffffffff1681565b620001176200017336600462000e0a565b62000282565b6200018360025481565b60405190815260200162000138565b620001a9620001a336600462000e4e565b620002ba565b005b60045462000183565b620001a9620001c536600462000e9e565b62000457565b620001a9620001dc36600462000ed8565b6200053f565b620001a9620001f336600462000e9e565b6200061b565b620001a96200020a36600462000f10565b620006e5565b620001176200022136600462000f67565b62000801565b620001176200023836600462000f67565b600360209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b620001a96200027c36600462000e9e565b62000d32565b600481815481106200029357600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60015473ffffffffffffffffffffffffffffffffffffffff16331462000341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e0000000000000000000000000060448201526064015b60405180910390fd5b6000816fffffffffffffffffffffffffffffffff1611620003bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4e6f6d69737761703a20464f5242494444454e5f464545000000000000000000604482015260640162000338565b6040517f111f8ef30000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff8216600482015273ffffffffffffffffffffffffffffffffffffffff83169063111f8ef3906024015b600060405180830381600087803b1580156200043a57600080fd5b505af11580156200044f573d6000803e3d6000fd5b505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff163314620004da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000338565b8073ffffffffffffffffffffffffffffffffffffffff1663c4db7fa06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200052357600080fd5b505af115801562000538573d6000803e3d6000fd5b5050505050565b60015473ffffffffffffffffffffffffffffffffffffffff163314620005c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000338565b6040517fd6d788c300000000000000000000000000000000000000000000000000000000815263ffffffff8216600482015273ffffffffffffffffffffffffffffffffffffffff83169063d6d788c3906024016200041f565b60015473ffffffffffffffffffffffffffffffffffffffff1633146200069e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000338565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff16331462000768576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000338565b6040517f73c48bb500000000000000000000000000000000000000000000000000000000815263ffffffff8316600482015264ffffffffff8216602482015273ffffffffffffffffffffffffffffffffffffffff8416906373c48bb590604401600060405180830381600087803b158015620007e357600080fd5b505af1158015620007f8573d6000803e3d6000fd5b50505050505050565b60015460009073ffffffffffffffffffffffffffffffffffffffff16331462000887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000338565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200091e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4e6f6d69737761703a204944454e544943414c5f414444524553534553000000604482015260640162000338565b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106200095d57838562000960565b84845b909250905073ffffffffffffffffffffffffffffffffffffffff8216620009e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f6d69737761703a205a45524f5f4144445245535300000000000000000000604482015260640162000338565b73ffffffffffffffffffffffffffffffffffffffff82811660009081526003602090815260408083208585168452909152902054161562000a82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4e6f6d69737761703a20504149525f4558495354530000000000000000000000604482015260640162000338565b60006040518060200162000a969062000dfc565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604081815273ffffffffffffffffffffffffffffffffffffffff8681166020840152851690820152606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262000b2d929160200162000fd4565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606086811b8216602085015285901b1660348301529150600090604801604051602081830303815290604052805190602001209050808251602084016000f5945073ffffffffffffffffffffffffffffffffffffffff851662000c3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4e6f6d69737761703a20504149525f4e4f545f43524541544544000000000000604482015260640162000338565b73ffffffffffffffffffffffffffffffffffffffff84811660008181526003602081815260408084208987168086529083528185208054978d167fffffffffffffffffffffffff000000000000000000000000000000000000000098891681179091559383528185208686528352818520805488168517905560048054600181018255958190527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b60015473ffffffffffffffffffffffffffffffffffffffff16331462000db5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000338565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b614a0e8062000ff683390190565b60006020828403121562000e1d57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811462000e4957600080fd5b919050565b6000806040838503121562000e6257600080fd5b62000e6d8362000e24565b915060208301356fffffffffffffffffffffffffffffffff8116811462000e9357600080fd5b809150509250929050565b60006020828403121562000eb157600080fd5b62000ebc8262000e24565b9392505050565b803563ffffffff8116811462000e4957600080fd5b6000806040838503121562000eec57600080fd5b62000ef78362000e24565b915062000f076020840162000ec3565b90509250929050565b60008060006060848603121562000f2657600080fd5b62000f318462000e24565b925062000f416020850162000ec3565b9150604084013564ffffffffff8116811462000f5c57600080fd5b809150509250925092565b6000806040838503121562000f7b57600080fd5b62000f868362000e24565b915062000f076020840162000e24565b6000815160005b8181101562000fb9576020818501810151868301520162000f9d565b8181111562000fc9576000828601525b509290920192915050565b600062000fed62000fe6838662000f96565b8462000f96565b94935050505056fe60c0604052600880546001600160801b031916600117905560076200002a600160701b600362000459565b6200003691906200047b565b600880546001600160801b03928316600160801b029216919091179055620000616064605562000459565b600a805463ffffffff191663ffffffff92909216919091179055620000896064605562000459565b600a805463ffffffff60201b63ffffffff60901b01191664010000000063ffffffff939093169290920263ffffffff60901b191691909117601960921b179055348015620000d657600080fd5b5060405162004a0e38038062004a0e833981016040819052620000f991620004bb565b604080518082018252601381527f4e6f6d697377617020737461626c65204c5073000000000000000000000000006020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527f22155260db1abf6474eb894108f4b66f54f6b4a9c481b6e3e789468ed505cc97918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a0830152339160c00160408051808303601f190181528282528051602091820120608052600160049081556001600160a01b0395861660a052600a805464ffffffffff60681b19166d01000000000000000000000000004264ffffffffff1602179055600580546001600160a01b03199081168a8916908117909255600680549091169789169790971790965563313ce56760e01b84529151600095945063313ce5679383810193908290030181865afa15801562000286573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ac9190620004f3565b905060128160ff161115620003055760405162461bcd60e51b81526020600482015260256024820152600080516020620049ee8339815191526044820152643a37b5b2b760d91b60648201526084015b60405180910390fd5b620003128160126200051f565b6200031f90600a62000685565b600960006101000a8154816001600160801b0302191690836001600160801b031602179055506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000386573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003ac9190620004f3565b905060128160ff161115620004015760405162461bcd60e51b81526020600482015260256024820152600080516020620049ee8339815191526044820152643a37b5b2b760d91b6064820152608401620002fc565b6200040e8160126200051f565b6200041b90600a62000685565b600980546001600160801b03928316600160801b029216919091179055506200069f92505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161562000476576200047662000443565b500290565b6000826200049957634e487b7160e01b600052601260045260246000fd5b500490565b80516001600160a01b0381168114620004b657600080fd5b919050565b60008060408385031215620004cf57600080fd5b620004da836200049e565b9150620004ea602084016200049e565b90509250929050565b6000602082840312156200050657600080fd5b815160ff811681146200051857600080fd5b9392505050565b600060ff821660ff8416808210156200053c576200053c62000443565b90039392505050565b600181815b808511156200058c576001600160801b0382900482111562000570576200057062000443565b808516156200057e57918102915b93841c93908002906200054a565b509250929050565b600082620005a5575060016200067f565b81620005b4575060006200067f565b8160018114620005cd5760028114620005d85762000613565b60019150506200067f565b60ff841115620005ec57620005ec62000443565b6001841b91506001600160801b038211156200060c576200060c62000443565b506200067f565b5060208310610133831016604e8410600b841016171562000652575081810a6001600160801b038111156200064c576200064c62000443565b6200067f565b6200065e838362000545565b6001600160801b038190048211156200067b576200067b62000443565b0290505b92915050565b60006200051860ff84166001600160801b03841662000594565b60805160a0516142ff620006ef6000396000818161064a01528181610fce015281816118cd0152818161256901528181612ceb015261361b0152600081816104340152612a6001526142ff6000f3fe608060405234801561001057600080fd5b50600436106102775760003560e01c806373c48bb511610160578063bc25cf77116100d8578063d46300fd1161008c578063d6d788c311610071578063d6d788c3146106c4578063dd62ed3e146106d7578063fff6cae91461070257600080fd5b8063d46300fd146106a9578063d505accf146106b157600080fd5b8063c4db7fa0116100bd578063c4db7fa01461066e578063ca706bcf14610676578063d21220a71461068957600080fd5b8063bc25cf7714610635578063c45a01551461064857600080fd5b8063a0be06f91161012f578063a9059cbb11610114578063a9059cbb146105fd578063ba9a7a5614610610578063baa8c7cb1461061957600080fd5b8063a0be06f9146105ce578063a457c2d7146105ea57600080fd5b806373c48bb51461056b5780637ecebe001461057e57806389afcb441461059e57806395d89b41146105c657600080fd5b8063313ce567116101f357806354cf2aeb116101c25780636827e764116101a75780636827e764146105085780636a6278421461053857806370a082311461054b57600080fd5b806354cf2aeb146104ba578063632db21c146104f557600080fd5b8063313ce567146104155780633644e5151461042f57806339509351146104565780634e25dc471461046957600080fd5b80630dfe16811161024a57806318160ddd1161022f57806318160ddd146103c457806323b872dd146103db57806330adf81f146103ee57600080fd5b80630dfe16811461036c578063111f8ef3146103b157600080fd5b8063022c0d9f1461027c57806306fdde03146102915780630902f1ac146102e3578063095ea7b314610349575b600080fd5b61028f61028a366004613c2d565b61070a565b005b6102cd6040518060400160405280601381526020017f4e6f6d697377617020737461626c65204c50730000000000000000000000000081525081565b6040516102da9190613cf3565b60405180910390f35b600754604080516dffffffffffffffffffffffffffff80841682526e01000000000000000000000000000084041660208201527c010000000000000000000000000000000000000000000000000000000090920463ffffffff16908201526060016102da565b61035c610357366004613d44565b610f9f565b60405190151581526020016102da565b60055461038c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102da565b61028f6103bf366004613d70565b610fb6565b6103cd60005481565b6040519081526020016102da565b61035c6103e9366004613da2565b611106565b6103cd7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61041d601281565b60405160ff90911681526020016102da565b6103cd7f000000000000000000000000000000000000000000000000000000000000000081565b61035c610464366004613d44565b6111e1565b6009546104999070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1681565b6040516fffffffffffffffffffffffffffffffff90911681526020016102da565b600a546104e0907201000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff90911681526020016102da565b6103cd610503366004613d44565b61122a565b6008546104999070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1681565b6103cd610546366004613de3565b61146d565b6103cd610559366004613de3565b60016020526000908152604090205481565b61028f610579366004613e19565b611844565b6103cd61058c366004613de3565b60036020526000908152604090205481565b6105b16105ac366004613de3565b611c38565b604080519283526020830191909152016102da565b6102cd61207a565b600854610499906fffffffffffffffffffffffffffffffff1681565b61035c6105f8366004613d44565b61223c565b61035c61060b366004613d44565b61230c565b6103cd6103e881565b600954610499906fffffffffffffffffffffffffffffffff1681565b61028f610643366004613de3565b612319565b7f000000000000000000000000000000000000000000000000000000000000000061038c565b61028f6124e0565b6103cd610684366004613d44565b6126ed565b60065461038c9073ffffffffffffffffffffffffffffffffffffffff1681565b6103cd6128f1565b61028f6106bf366004613e5a565b6129cd565b61028f6106d2366004613ed1565b612cd3565b6103cd6106e5366004613eec565b600260209081526000928352604080842090915290825290205481565b61028f612e58565b60026004540361077b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026004558415158061078e5750600084115b610819576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4e6f6d69737761703a20494e53554646494349454e545f4f55545055545f414d60448201527f4f554e54000000000000000000000000000000000000000000000000000000006064820152608401610772565b6000806108756007546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915081871080156108a857508086105b61090e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4e6f6d69737761703a20494e53554646494349454e545f4c49515549444954596044820152606401610772565b600554600654600091829173ffffffffffffffffffffffffffffffffffffffff91821691908116908916821480159061097357508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b6109d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f6d69737761703a20494e56414c49445f544f0000000000000000000000006044820152606401610772565b8a156109ea576109ea828a8d613001565b89156109fb576109fb818a8c613001565b8615610a8e576040517f2210968200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a1690632210968290610a5b9033908f908f908e908e90600401613f1a565b600060405180830381600087803b158015610a7557600080fd5b505af1158015610a89573d6000803e3d6000fd5b505050505b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1c9190613f92565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8216906370a0823190602401602060405180830381865afa158015610b89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bad9190613f92565b9250505060008985610bbf9190613fda565b8311610bcc576000610be0565b610bd68a86613fda565b610be09084613fda565b90506000610bee8a86613fda565b8311610bfb576000610c0f565b610c058a86613fda565b610c0f9084613fda565b90506000821180610c205750600081115b610cac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4e6f6d69737761703a20494e53554646494349454e545f494e5055545f414d4f60448201527f554e5400000000000000000000000000000000000000000000000000000000006064820152608401610772565b6000610cb66128f1565b600a546009549192507201000000000000000000000000000000000000900463ffffffff16906fffffffffffffffffffffffffffffffff808216917001000000000000000000000000000000009004166000620186a083610d17868a613ff1565b610d24620186a08d613ff1565b610d2e9190613fda565b610d389190613ff1565b610d42919061405d565b90506000620186a083610d55878a613ff1565b610d62620186a08d613ff1565b610d6c9190613fda565b610d769190613ff1565b610d80919061405d565b90506000610d8f838389613093565b90506000610d9d868f613ff1565b90506000610dab868f613ff1565b90506000610dba83838c613093565b905080841015610e26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4e6f6d69737761703a20440000000000000000000000000000000000000000006044820152606401610772565b6000610e338f8f8d6131c0565b90506000610e418383613fda565b600054610e4e9190613ff1565b60085490915060009084906e01000000000000000000000000000090610e9a9070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1686613ff1565b610ea4919061405d565b610eae9190614071565b9050610eba818361405d565b60088054600090610ede9084906fffffffffffffffffffffffffffffffff16614089565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050505050505050505050505050610f2b8484613209565b60408051838152602081018390529081018c9052606081018b905273ffffffffffffffffffffffffffffffffffffffff8a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600455505050505050505050565b6000610fac33848461339c565b5060015b92915050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611055576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e000000000000000000000000006044820152606401610772565b806fffffffffffffffffffffffffffffffff166000036110d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4e6f6d6973776170537461626c65506169723a206465762066656520300000006044820152606401610772565b600880546fffffffffffffffffffffffffffffffff928316700100000000000000000000000000000000029216919091179055565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff146111cb5773ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902054611199908390613fda565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602090815260408083203384529091529020555b6111d684848461340b565b5060015b9392505050565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091610fac918590611225908690614071565b61339c565b60008060006112886007546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506009546dffffffffffffffffffffffffffff9283169450911691506fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041681840281840260006112de6128f1565b905060006112ed848484613093565b60055490915073ffffffffffffffffffffffffffffffffffffffff908116908c160361137957898502830360006113258284866134da565b905060006113358783038a6135f4565b600a5490915061136f90620186a08084029163ffffffff72010000000000000000000000000000000000009091048116909103906135f416565b9b5050505061145f565b60065473ffffffffffffffffffffffffffffffffffffffff8c81169116146113fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e56414c49445f494e5055545f544f4b454e000000000000000000000000006044820152606401610772565b8986028403600061140f8284866134da565b9050600061141f868303896135f4565b600a5490915061145990620186a08084029163ffffffff72010000000000000000000000000000000000009091048116909103906135f416565b9b505050505b505050505050505092915050565b60006002600454036114db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b600260045560008061153c6007546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506005546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015292945090925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa1580156115b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d89190613f92565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa15801561164c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116709190613f92565b905061167a613617565b60008054906116996dffffffffffffffffffffffffffff871685613fda565b905060006116b76dffffffffffffffffffffffffffff871685613fda565b9050826000036116fe5760006116cb6128f1565b905060006116da8787846131c0565b90506116e86103e882613fda565b99506116f760006103e8613766565b5050611753565b6117506dffffffffffffffffffffffffffff881661171c8585613ff1565b611726919061405d565b6dffffffffffffffffffffffffffff88166117418685613ff1565b61174b919061405d565b613811565b97505b600088116117e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e6f6d69737761703a20494e53554646494349454e545f4c495155494449545960448201527f5f4d494e544544000000000000000000000000000000000000000000000000006064820152608401610772565b6117ed8989613766565b6117f78585613209565b604080518381526020810183905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600455509395945050505050565b6002600454036118b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b60026004553373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611954576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e000000000000000000000000006044820152606401610772565b600a5461197890620151809068010000000000000000900464ffffffffff16614071565b4210156119e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4e6f6d6973776170537461626c65506169723a20494e56414c49445f54494d456044820152606401610772565b6119ee6201518042614071565b8164ffffffffff161015611a84576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e6f6d6973776170537461626c65506169723a20494e56414c49445f4655545560448201527f52455f54494d45000000000000000000000000000000000000000000000000006064820152608401610772565b6000611a8e6128f1565b90506000611aa3606463ffffffff8616613ff1565b905060008463ffffffff16118015611ac35750620f42408463ffffffff16105b611acc57600080fd5b8163ffffffff168163ffffffff161015611b0a578163ffffffff1660648263ffffffff16611afa9190613ff1565b1015611b0557600080fd5b611b2d565b611b1b606463ffffffff8416613ff1565b8163ffffffff161115611b2d57600080fd5b600a805463ffffffff8481167fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009092168217640100000000918516918202177fffffffffffffffffffffffffffff00000000000000000000ffffffffffffffff16680100000000000000004264ffffffffff818116929092027fffffffffffffffffffffffffffff0000000000ffffffffffffffffffffffffff16929092176d0100000000000000000000000000918916918202179094556040805193845260208401929092529082015260608101919091527fa2b71ec6df949300b59aab36b55e189697b750119dd349fcfa8c0f779e83c2549060800160405180910390a1505060016004555050565b600080600260045403611ca7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b600260049081556005546006546040517f70a08231000000000000000000000000000000000000000000000000000000008152309381019390935273ffffffffffffffffffffffffffffffffffffffff9182169291169060009083906370a0823190602401602060405180830381865afa158015611d29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4d9190613f92565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015611dbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de19190613f92565b30600090815260016020526040902054909150611dfc613617565b60005480611e0a8584613ff1565b611e14919061405d565b975080611e218484613ff1565b611e2b919061405d565b9650600088118015611e3d5750600087115b611ec9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e6f6d69737761703a20494e53554646494349454e545f4c495155494449545960448201527f5f4255524e4544000000000000000000000000000000000000000000000000006064820152608401610772565b611ed33083613827565b611ede868a8a613001565b611ee9858a89613001565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015611f53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f779190613f92565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015611fe4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120089190613f92565b92506120148484613209565b604080518981526020810189905273ffffffffffffffffffffffffffffffffffffffff8b169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050506001600481905550915091565b604080518082018252600781527f4e4d582d534c5000000000000000000000000000000000000000000000000000602082015260055482517f95d89b41000000000000000000000000000000000000000000000000000000008152925160609373ffffffffffffffffffffffffffffffffffffffff909216916395d89b419160048083019260009291908290030181865afa15801561211d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261216391908101906140ec565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156121d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261221691908101906140ec565b604051602001612228939291906141ac565b604051602081830303815290604052905090565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054828110156122fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f4e6f6d6973776170537461626c6545524332303a20646563726561736564206160448201527f6c6c6f77616e63652062656c6f77207a65726f000000000000000000000000006064820152608401610772565b6111d633856112258685613fda565b6000610fac33848461340b565b600260045403612385576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b600260049081556005546006546007546040517f70a08231000000000000000000000000000000000000000000000000000000008152309481019490945273ffffffffffffffffffffffffffffffffffffffff92831693929091169161245691849186916dffffffffffffffffffffffffffff169083906370a08231906024015b602060405180830381865afa158015612423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124479190613f92565b6124519190613fda565b613001565b6007546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526124d691839186916e01000000000000000000000000000090046dffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401612406565b5050600160045550565b60026004540361254c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b60026004553373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146125f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e000000000000000000000000006044820152606401610772565b60006125fa6128f1565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001663ffffffff83169081176401000000008202177fffffffffffffffffffffffffffff00000000000000000000ffffffffffffffff16680100000000000000004264ffffffffff81169182027fffffffffffffffffffffffffffff0000000000ffffffffffffffffffffffffff16929092176d010000000000000000000000000091909102179092556040805191825260208201929092529192507f46e22fb3709ad289f62ce63d469248536dbc78d82b84a3d7e74ad606dc201938910160405180910390a1506001600455565b600080600061274b6007546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b50600954600a546dffffffffffffffffffffffffffff93841695509190921692506fffffffffffffffffffffffffffffffff8083169270010000000000000000000000000000000090041690620186a0720100000000000000000000000000000000000090910463ffffffff168702878202030482850282850260006127cf6128f1565b905060006127de848484613093565b60055490915073ffffffffffffffffffffffffffffffffffffffff908116908d160361283357848702840160006128168284866134da565b905087818603816128295761282961402e565b049b5050506128e2565b60065473ffffffffffffffffffffffffffffffffffffffff8d81169116146128b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e56414c49445f494e5055545f544f4b454e000000000000000000000000006044820152606401610772565b848602830160006128c98284866134da565b905088818703816128dc576128dc61402e565b049b5050505b50505050505050505092915050565b600a546000906d0100000000000000000000000000810464ffffffffff1690640100000000900463ffffffff1642821115610fb057600a5463ffffffff81169068010000000000000000900464ffffffffff1681831115612991576129568185613fda565b6129608385613fda565b61296a8342613fda565b6129749190613ff1565b61297e919061405d565b6129889083614071565b94505050505090565b61299b8185613fda565b6129a58484613fda565b6129af8342613fda565b6129b99190613ff1565b6129c3919061405d565b6129889083613fda565b42841015612a37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f6d69737761703a20455850495245440000000000000000000000000000006044820152606401610772565b73ffffffffffffffffffffffffffffffffffffffff8716600090815260036020526040812080547f0000000000000000000000000000000000000000000000000000000000000000917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9187612ab283614222565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001612b539291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015612bdc573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590612c5757508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b612cbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4e6f6d69737761703a20494e56414c49445f5349474e415455524500000000006044820152606401610772565b612cc889898961339c565b505050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614612d72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e000000000000000000000000006044820152606401610772565b620186a08163ffffffff161115612e0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4e6f6d6973776170537461626c65506169723a20464f5242494444454e5f464560448201527f45000000000000000000000000000000000000000000000000000000000000006064820152608401610772565b600a805463ffffffff9092167201000000000000000000000000000000000000027fffffffffffffffffffff00000000ffffffffffffffffffffffffffffffffffff909216919091179055565b600260045403612ec4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b600260049081556005546040517f70a082310000000000000000000000000000000000000000000000000000000081523092810192909252612ffa9173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015612f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f639190613f92565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015612fd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ff59190613f92565b613209565b6001600455565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261308e9084906138da565b505050565b6000806130a08486614071565b905060006130af846004613ff1565b9050816000036130c4576000925050506111da565b600082815b6101008110156131b4576000600489848c6130e48280613ff1565b6130ee919061405d565b6130f89190613ff1565b613102919061405d565b61310c919061405d565b905082935080600361311e9190613ff1565b83600161312c60648961405d565b6131369190613fda565b6131409190613ff1565b61314a9190614071565b83613156836002613ff1565b60646131628a8a613ff1565b61316c919061405d565b6131769190614071565b6131809190613ff1565b61318a919061405d565b925061319683856139e6565b156131a157506131b4565b50806131ac81614222565b9150506130c9565b50979650505050505050565b6009546000906fffffffffffffffffffffffffffffffff80821686029170010000000000000000000000000000000090041684026131ff828286613093565b9695505050505050565b6dffffffffffffffffffffffffffff821180159061323557506dffffffffffffffffffffffffffff8111155b61329b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e6f6d69737761703a204f564552464c4f5700000000000000000000000000006044820152606401610772565b60006132ac6401000000004261425a565b6007805463ffffffff83167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff8781166e0100000000000000000000000000009081027fffffffff000000000000000000000000000000000000000000000000000000009095168a83161794909417918216831794859055604080519382169282169290921783529290930490911660208201529192507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604090205461343c908290613fda565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152600160205260408082209390935590841681522054613479908290614071565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906133fe9085815260200190565b6000806134e8836004613ff1565b905060006134f7866002613ff1565b6135018680613ff1565b61350b919061405d565b9050606461351a836002613ff1565b613524919061405d565b61352e8683613ff1565b613538919061405d565b9050600082613548606488613ff1565b613552919061405d565b61355c9088614071565b9050600086945060005b6101008110156135e8578591506000846135808480613ff1565b61358a9190614071565b90506000898561359b8a6002613ff1565b6135a59190614071565b6135af9190613fda565b90506135bb82826135f4565b97506135c788856139e6565b156135d35750506135e8565b505080806135e090614222565b915050613566565b50505050509392505050565b60008160016136038286614071565b61360d9190613fda565b6111da919061405d565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015613684573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136a8919061426e565b60085490915073ffffffffffffffffffffffffffffffffffffffff8216158015916fffffffffffffffffffffffffffffffff169061372d57600181111561308e576136fd836136f8600184613fda565b613766565b600880547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166001179055505050565b600181111561308e57600880547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166001179055505050565b806000546137749190614071565b600090815573ffffffffffffffffffffffffffffffffffffffff83168152600160205260409020546137a7908290614071565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906138059085815260200190565b60405180910390a35050565b600081831061382057816111da565b5090919050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040902054613858908290613fda565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260408120919091555461388d908290613fda565b600090815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001613805565b600061393c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16613a089092919063ffffffff16565b80519091501561308e578080602001905181019061395a919061428b565b61308e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610772565b6000818311156139fd575060018183031115610fb0565b506001919003111590565b6060613a178484600085613a1f565b949350505050565b606082471015613ab1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610772565b73ffffffffffffffffffffffffffffffffffffffff85163b613b2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610772565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051613b5891906142ad565b60006040518083038185875af1925050503d8060008114613b95576040519150601f19603f3d011682016040523d82523d6000602084013e613b9a565b606091505b5091509150613baa828286613bb5565b979650505050505050565b60608315613bc45750816111da565b825115613bd45782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107729190613cf3565b73ffffffffffffffffffffffffffffffffffffffff81168114613c2a57600080fd5b50565b600080600080600060808688031215613c4557600080fd5b85359450602086013593506040860135613c5e81613c08565b9250606086013567ffffffffffffffff80821115613c7b57600080fd5b818801915088601f830112613c8f57600080fd5b813581811115613c9e57600080fd5b896020828501011115613cb057600080fd5b9699959850939650602001949392505050565b60005b83811015613cde578181015183820152602001613cc6565b83811115613ced576000848401525b50505050565b6020815260008251806020840152613d12816040850160208701613cc3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008060408385031215613d5757600080fd5b8235613d6281613c08565b946020939093013593505050565b600060208284031215613d8257600080fd5b81356fffffffffffffffffffffffffffffffff811681146111da57600080fd5b600080600060608486031215613db757600080fd5b8335613dc281613c08565b92506020840135613dd281613c08565b929592945050506040919091013590565b600060208284031215613df557600080fd5b81356111da81613c08565b803563ffffffff81168114613e1457600080fd5b919050565b60008060408385031215613e2c57600080fd5b613e3583613e00565b9150602083013564ffffffffff81168114613e4f57600080fd5b809150509250929050565b600080600080600080600060e0888a031215613e7557600080fd5b8735613e8081613c08565b96506020880135613e9081613c08565b95506040880135945060608801359350608088013560ff81168114613eb457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600060208284031215613ee357600080fd5b6111da82613e00565b60008060408385031215613eff57600080fd5b8235613f0a81613c08565b91506020830135613e4f81613c08565b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101949350505050565b600060208284031215613fa457600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015613fec57613fec613fab565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561402957614029613fab565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261406c5761406c61402e565b500490565b6000821982111561408457614084613fab565b500190565b60006fffffffffffffffffffffffffffffffff8083168185168083038211156140b4576140b4613fab565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156140fe57600080fd5b815167ffffffffffffffff8082111561411657600080fd5b818401915084601f83011261412a57600080fd5b81518181111561413c5761413c6140bd565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715614182576141826140bd565b8160405282815287602084870101111561419b57600080fd5b613baa836020830160208801613cc3565b600084516141be818460208901613cc3565b80830190507f2d0000000000000000000000000000000000000000000000000000000000000080825285516141fa816001850160208a01613cc3565b60019201918201528351614215816002840160208801613cc3565b0160020195945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361425357614253613fab565b5060010190565b6000826142695761426961402e565b500690565b60006020828403121561428057600080fd5b81516111da81613c08565b60006020828403121561429d57600080fd5b815180151581146111da57600080fd5b600082516142bf818460208701613cc3565b919091019291505056fea2646970667358221220d2244b5fd2da0217b2d20886c6ebb54c2abb18c30a73b1efc3dc8ba3b279118464736f6c634300080f00334e6f6d6973776170537461626c65506169723a20756e737570706f7274656420a264697066735822122038d630bc3b8b72448995a465e4277e423e8399b2b49c0cd1d8271bb02e9b312b64736f6c634300080f003360c0604052600880546001600160801b031916600117905560076200002a600160701b600362000459565b6200003691906200047b565b600880546001600160801b03928316600160801b029216919091179055620000616064605562000459565b600a805463ffffffff191663ffffffff92909216919091179055620000896064605562000459565b600a805463ffffffff60201b63ffffffff60901b01191664010000000063ffffffff939093169290920263ffffffff60901b191691909117601960921b179055348015620000d657600080fd5b5060405162004a0e38038062004a0e833981016040819052620000f991620004bb565b604080518082018252601381527f4e6f6d697377617020737461626c65204c5073000000000000000000000000006020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527f22155260db1abf6474eb894108f4b66f54f6b4a9c481b6e3e789468ed505cc97918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a0830152339160c00160408051808303601f190181528282528051602091820120608052600160049081556001600160a01b0395861660a052600a805464ffffffffff60681b19166d01000000000000000000000000004264ffffffffff1602179055600580546001600160a01b03199081168a8916908117909255600680549091169789169790971790965563313ce56760e01b84529151600095945063313ce5679383810193908290030181865afa15801562000286573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ac9190620004f3565b905060128160ff161115620003055760405162461bcd60e51b81526020600482015260256024820152600080516020620049ee8339815191526044820152643a37b5b2b760d91b60648201526084015b60405180910390fd5b620003128160126200051f565b6200031f90600a62000685565b600960006101000a8154816001600160801b0302191690836001600160801b031602179055506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000386573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003ac9190620004f3565b905060128160ff161115620004015760405162461bcd60e51b81526020600482015260256024820152600080516020620049ee8339815191526044820152643a37b5b2b760d91b6064820152608401620002fc565b6200040e8160126200051f565b6200041b90600a62000685565b600980546001600160801b03928316600160801b029216919091179055506200069f92505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161562000476576200047662000443565b500290565b6000826200049957634e487b7160e01b600052601260045260246000fd5b500490565b80516001600160a01b0381168114620004b657600080fd5b919050565b60008060408385031215620004cf57600080fd5b620004da836200049e565b9150620004ea602084016200049e565b90509250929050565b6000602082840312156200050657600080fd5b815160ff811681146200051857600080fd5b9392505050565b600060ff821660ff8416808210156200053c576200053c62000443565b90039392505050565b600181815b808511156200058c576001600160801b0382900482111562000570576200057062000443565b808516156200057e57918102915b93841c93908002906200054a565b509250929050565b600082620005a5575060016200067f565b81620005b4575060006200067f565b8160018114620005cd5760028114620005d85762000613565b60019150506200067f565b60ff841115620005ec57620005ec62000443565b6001841b91506001600160801b038211156200060c576200060c62000443565b506200067f565b5060208310610133831016604e8410600b841016171562000652575081810a6001600160801b038111156200064c576200064c62000443565b6200067f565b6200065e838362000545565b6001600160801b038190048211156200067b576200067b62000443565b0290505b92915050565b60006200051860ff84166001600160801b03841662000594565b60805160a0516142ff620006ef6000396000818161064a01528181610fce015281816118cd0152818161256901528181612ceb015261361b0152600081816104340152612a6001526142ff6000f3fe608060405234801561001057600080fd5b50600436106102775760003560e01c806373c48bb511610160578063bc25cf77116100d8578063d46300fd1161008c578063d6d788c311610071578063d6d788c3146106c4578063dd62ed3e146106d7578063fff6cae91461070257600080fd5b8063d46300fd146106a9578063d505accf146106b157600080fd5b8063c4db7fa0116100bd578063c4db7fa01461066e578063ca706bcf14610676578063d21220a71461068957600080fd5b8063bc25cf7714610635578063c45a01551461064857600080fd5b8063a0be06f91161012f578063a9059cbb11610114578063a9059cbb146105fd578063ba9a7a5614610610578063baa8c7cb1461061957600080fd5b8063a0be06f9146105ce578063a457c2d7146105ea57600080fd5b806373c48bb51461056b5780637ecebe001461057e57806389afcb441461059e57806395d89b41146105c657600080fd5b8063313ce567116101f357806354cf2aeb116101c25780636827e764116101a75780636827e764146105085780636a6278421461053857806370a082311461054b57600080fd5b806354cf2aeb146104ba578063632db21c146104f557600080fd5b8063313ce567146104155780633644e5151461042f57806339509351146104565780634e25dc471461046957600080fd5b80630dfe16811161024a57806318160ddd1161022f57806318160ddd146103c457806323b872dd146103db57806330adf81f146103ee57600080fd5b80630dfe16811461036c578063111f8ef3146103b157600080fd5b8063022c0d9f1461027c57806306fdde03146102915780630902f1ac146102e3578063095ea7b314610349575b600080fd5b61028f61028a366004613c2d565b61070a565b005b6102cd6040518060400160405280601381526020017f4e6f6d697377617020737461626c65204c50730000000000000000000000000081525081565b6040516102da9190613cf3565b60405180910390f35b600754604080516dffffffffffffffffffffffffffff80841682526e01000000000000000000000000000084041660208201527c010000000000000000000000000000000000000000000000000000000090920463ffffffff16908201526060016102da565b61035c610357366004613d44565b610f9f565b60405190151581526020016102da565b60055461038c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102da565b61028f6103bf366004613d70565b610fb6565b6103cd60005481565b6040519081526020016102da565b61035c6103e9366004613da2565b611106565b6103cd7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61041d601281565b60405160ff90911681526020016102da565b6103cd7f000000000000000000000000000000000000000000000000000000000000000081565b61035c610464366004613d44565b6111e1565b6009546104999070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1681565b6040516fffffffffffffffffffffffffffffffff90911681526020016102da565b600a546104e0907201000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff90911681526020016102da565b6103cd610503366004613d44565b61122a565b6008546104999070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1681565b6103cd610546366004613de3565b61146d565b6103cd610559366004613de3565b60016020526000908152604090205481565b61028f610579366004613e19565b611844565b6103cd61058c366004613de3565b60036020526000908152604090205481565b6105b16105ac366004613de3565b611c38565b604080519283526020830191909152016102da565b6102cd61207a565b600854610499906fffffffffffffffffffffffffffffffff1681565b61035c6105f8366004613d44565b61223c565b61035c61060b366004613d44565b61230c565b6103cd6103e881565b600954610499906fffffffffffffffffffffffffffffffff1681565b61028f610643366004613de3565b612319565b7f000000000000000000000000000000000000000000000000000000000000000061038c565b61028f6124e0565b6103cd610684366004613d44565b6126ed565b60065461038c9073ffffffffffffffffffffffffffffffffffffffff1681565b6103cd6128f1565b61028f6106bf366004613e5a565b6129cd565b61028f6106d2366004613ed1565b612cd3565b6103cd6106e5366004613eec565b600260209081526000928352604080842090915290825290205481565b61028f612e58565b60026004540361077b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026004558415158061078e5750600084115b610819576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4e6f6d69737761703a20494e53554646494349454e545f4f55545055545f414d60448201527f4f554e54000000000000000000000000000000000000000000000000000000006064820152608401610772565b6000806108756007546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915081871080156108a857508086105b61090e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4e6f6d69737761703a20494e53554646494349454e545f4c49515549444954596044820152606401610772565b600554600654600091829173ffffffffffffffffffffffffffffffffffffffff91821691908116908916821480159061097357508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b6109d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f6d69737761703a20494e56414c49445f544f0000000000000000000000006044820152606401610772565b8a156109ea576109ea828a8d613001565b89156109fb576109fb818a8c613001565b8615610a8e576040517f2210968200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a1690632210968290610a5b9033908f908f908e908e90600401613f1a565b600060405180830381600087803b158015610a7557600080fd5b505af1158015610a89573d6000803e3d6000fd5b505050505b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1c9190613f92565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8216906370a0823190602401602060405180830381865afa158015610b89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bad9190613f92565b9250505060008985610bbf9190613fda565b8311610bcc576000610be0565b610bd68a86613fda565b610be09084613fda565b90506000610bee8a86613fda565b8311610bfb576000610c0f565b610c058a86613fda565b610c0f9084613fda565b90506000821180610c205750600081115b610cac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4e6f6d69737761703a20494e53554646494349454e545f494e5055545f414d4f60448201527f554e5400000000000000000000000000000000000000000000000000000000006064820152608401610772565b6000610cb66128f1565b600a546009549192507201000000000000000000000000000000000000900463ffffffff16906fffffffffffffffffffffffffffffffff808216917001000000000000000000000000000000009004166000620186a083610d17868a613ff1565b610d24620186a08d613ff1565b610d2e9190613fda565b610d389190613ff1565b610d42919061405d565b90506000620186a083610d55878a613ff1565b610d62620186a08d613ff1565b610d6c9190613fda565b610d769190613ff1565b610d80919061405d565b90506000610d8f838389613093565b90506000610d9d868f613ff1565b90506000610dab868f613ff1565b90506000610dba83838c613093565b905080841015610e26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4e6f6d69737761703a20440000000000000000000000000000000000000000006044820152606401610772565b6000610e338f8f8d6131c0565b90506000610e418383613fda565b600054610e4e9190613ff1565b60085490915060009084906e01000000000000000000000000000090610e9a9070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1686613ff1565b610ea4919061405d565b610eae9190614071565b9050610eba818361405d565b60088054600090610ede9084906fffffffffffffffffffffffffffffffff16614089565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050505050505050505050505050610f2b8484613209565b60408051838152602081018390529081018c9052606081018b905273ffffffffffffffffffffffffffffffffffffffff8a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600455505050505050505050565b6000610fac33848461339c565b5060015b92915050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611055576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e000000000000000000000000006044820152606401610772565b806fffffffffffffffffffffffffffffffff166000036110d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4e6f6d6973776170537461626c65506169723a206465762066656520300000006044820152606401610772565b600880546fffffffffffffffffffffffffffffffff928316700100000000000000000000000000000000029216919091179055565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff146111cb5773ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902054611199908390613fda565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602090815260408083203384529091529020555b6111d684848461340b565b5060015b9392505050565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091610fac918590611225908690614071565b61339c565b60008060006112886007546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506009546dffffffffffffffffffffffffffff9283169450911691506fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041681840281840260006112de6128f1565b905060006112ed848484613093565b60055490915073ffffffffffffffffffffffffffffffffffffffff908116908c160361137957898502830360006113258284866134da565b905060006113358783038a6135f4565b600a5490915061136f90620186a08084029163ffffffff72010000000000000000000000000000000000009091048116909103906135f416565b9b5050505061145f565b60065473ffffffffffffffffffffffffffffffffffffffff8c81169116146113fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e56414c49445f494e5055545f544f4b454e000000000000000000000000006044820152606401610772565b8986028403600061140f8284866134da565b9050600061141f868303896135f4565b600a5490915061145990620186a08084029163ffffffff72010000000000000000000000000000000000009091048116909103906135f416565b9b505050505b505050505050505092915050565b60006002600454036114db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b600260045560008061153c6007546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506005546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015292945090925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa1580156115b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d89190613f92565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa15801561164c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116709190613f92565b905061167a613617565b60008054906116996dffffffffffffffffffffffffffff871685613fda565b905060006116b76dffffffffffffffffffffffffffff871685613fda565b9050826000036116fe5760006116cb6128f1565b905060006116da8787846131c0565b90506116e86103e882613fda565b99506116f760006103e8613766565b5050611753565b6117506dffffffffffffffffffffffffffff881661171c8585613ff1565b611726919061405d565b6dffffffffffffffffffffffffffff88166117418685613ff1565b61174b919061405d565b613811565b97505b600088116117e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e6f6d69737761703a20494e53554646494349454e545f4c495155494449545960448201527f5f4d494e544544000000000000000000000000000000000000000000000000006064820152608401610772565b6117ed8989613766565b6117f78585613209565b604080518381526020810183905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600455509395945050505050565b6002600454036118b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b60026004553373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611954576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e000000000000000000000000006044820152606401610772565b600a5461197890620151809068010000000000000000900464ffffffffff16614071565b4210156119e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4e6f6d6973776170537461626c65506169723a20494e56414c49445f54494d456044820152606401610772565b6119ee6201518042614071565b8164ffffffffff161015611a84576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e6f6d6973776170537461626c65506169723a20494e56414c49445f4655545560448201527f52455f54494d45000000000000000000000000000000000000000000000000006064820152608401610772565b6000611a8e6128f1565b90506000611aa3606463ffffffff8616613ff1565b905060008463ffffffff16118015611ac35750620f42408463ffffffff16105b611acc57600080fd5b8163ffffffff168163ffffffff161015611b0a578163ffffffff1660648263ffffffff16611afa9190613ff1565b1015611b0557600080fd5b611b2d565b611b1b606463ffffffff8416613ff1565b8163ffffffff161115611b2d57600080fd5b600a805463ffffffff8481167fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009092168217640100000000918516918202177fffffffffffffffffffffffffffff00000000000000000000ffffffffffffffff16680100000000000000004264ffffffffff818116929092027fffffffffffffffffffffffffffff0000000000ffffffffffffffffffffffffff16929092176d0100000000000000000000000000918916918202179094556040805193845260208401929092529082015260608101919091527fa2b71ec6df949300b59aab36b55e189697b750119dd349fcfa8c0f779e83c2549060800160405180910390a1505060016004555050565b600080600260045403611ca7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b600260049081556005546006546040517f70a08231000000000000000000000000000000000000000000000000000000008152309381019390935273ffffffffffffffffffffffffffffffffffffffff9182169291169060009083906370a0823190602401602060405180830381865afa158015611d29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4d9190613f92565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015611dbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de19190613f92565b30600090815260016020526040902054909150611dfc613617565b60005480611e0a8584613ff1565b611e14919061405d565b975080611e218484613ff1565b611e2b919061405d565b9650600088118015611e3d5750600087115b611ec9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e6f6d69737761703a20494e53554646494349454e545f4c495155494449545960448201527f5f4255524e4544000000000000000000000000000000000000000000000000006064820152608401610772565b611ed33083613827565b611ede868a8a613001565b611ee9858a89613001565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015611f53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f779190613f92565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015611fe4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120089190613f92565b92506120148484613209565b604080518981526020810189905273ffffffffffffffffffffffffffffffffffffffff8b169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050506001600481905550915091565b604080518082018252600781527f4e4d582d534c5000000000000000000000000000000000000000000000000000602082015260055482517f95d89b41000000000000000000000000000000000000000000000000000000008152925160609373ffffffffffffffffffffffffffffffffffffffff909216916395d89b419160048083019260009291908290030181865afa15801561211d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261216391908101906140ec565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156121d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261221691908101906140ec565b604051602001612228939291906141ac565b604051602081830303815290604052905090565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054828110156122fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f4e6f6d6973776170537461626c6545524332303a20646563726561736564206160448201527f6c6c6f77616e63652062656c6f77207a65726f000000000000000000000000006064820152608401610772565b6111d633856112258685613fda565b6000610fac33848461340b565b600260045403612385576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b600260049081556005546006546007546040517f70a08231000000000000000000000000000000000000000000000000000000008152309481019490945273ffffffffffffffffffffffffffffffffffffffff92831693929091169161245691849186916dffffffffffffffffffffffffffff169083906370a08231906024015b602060405180830381865afa158015612423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124479190613f92565b6124519190613fda565b613001565b6007546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526124d691839186916e01000000000000000000000000000090046dffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401612406565b5050600160045550565b60026004540361254c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b60026004553373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146125f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e000000000000000000000000006044820152606401610772565b60006125fa6128f1565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001663ffffffff83169081176401000000008202177fffffffffffffffffffffffffffff00000000000000000000ffffffffffffffff16680100000000000000004264ffffffffff81169182027fffffffffffffffffffffffffffff0000000000ffffffffffffffffffffffffff16929092176d010000000000000000000000000091909102179092556040805191825260208201929092529192507f46e22fb3709ad289f62ce63d469248536dbc78d82b84a3d7e74ad606dc201938910160405180910390a1506001600455565b600080600061274b6007546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b50600954600a546dffffffffffffffffffffffffffff93841695509190921692506fffffffffffffffffffffffffffffffff8083169270010000000000000000000000000000000090041690620186a0720100000000000000000000000000000000000090910463ffffffff168702878202030482850282850260006127cf6128f1565b905060006127de848484613093565b60055490915073ffffffffffffffffffffffffffffffffffffffff908116908d160361283357848702840160006128168284866134da565b905087818603816128295761282961402e565b049b5050506128e2565b60065473ffffffffffffffffffffffffffffffffffffffff8d81169116146128b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e56414c49445f494e5055545f544f4b454e000000000000000000000000006044820152606401610772565b848602830160006128c98284866134da565b905088818703816128dc576128dc61402e565b049b5050505b50505050505050505092915050565b600a546000906d0100000000000000000000000000810464ffffffffff1690640100000000900463ffffffff1642821115610fb057600a5463ffffffff81169068010000000000000000900464ffffffffff1681831115612991576129568185613fda565b6129608385613fda565b61296a8342613fda565b6129749190613ff1565b61297e919061405d565b6129889083614071565b94505050505090565b61299b8185613fda565b6129a58484613fda565b6129af8342613fda565b6129b99190613ff1565b6129c3919061405d565b6129889083613fda565b42841015612a37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f6d69737761703a20455850495245440000000000000000000000000000006044820152606401610772565b73ffffffffffffffffffffffffffffffffffffffff8716600090815260036020526040812080547f0000000000000000000000000000000000000000000000000000000000000000917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9187612ab283614222565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001612b539291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015612bdc573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590612c5757508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b612cbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4e6f6d69737761703a20494e56414c49445f5349474e415455524500000000006044820152606401610772565b612cc889898961339c565b505050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614612d72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e000000000000000000000000006044820152606401610772565b620186a08163ffffffff161115612e0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4e6f6d6973776170537461626c65506169723a20464f5242494444454e5f464560448201527f45000000000000000000000000000000000000000000000000000000000000006064820152608401610772565b600a805463ffffffff9092167201000000000000000000000000000000000000027fffffffffffffffffffff00000000ffffffffffffffffffffffffffffffffffff909216919091179055565b600260045403612ec4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b600260049081556005546040517f70a082310000000000000000000000000000000000000000000000000000000081523092810192909252612ffa9173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015612f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f639190613f92565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015612fd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ff59190613f92565b613209565b6001600455565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261308e9084906138da565b505050565b6000806130a08486614071565b905060006130af846004613ff1565b9050816000036130c4576000925050506111da565b600082815b6101008110156131b4576000600489848c6130e48280613ff1565b6130ee919061405d565b6130f89190613ff1565b613102919061405d565b61310c919061405d565b905082935080600361311e9190613ff1565b83600161312c60648961405d565b6131369190613fda565b6131409190613ff1565b61314a9190614071565b83613156836002613ff1565b60646131628a8a613ff1565b61316c919061405d565b6131769190614071565b6131809190613ff1565b61318a919061405d565b925061319683856139e6565b156131a157506131b4565b50806131ac81614222565b9150506130c9565b50979650505050505050565b6009546000906fffffffffffffffffffffffffffffffff80821686029170010000000000000000000000000000000090041684026131ff828286613093565b9695505050505050565b6dffffffffffffffffffffffffffff821180159061323557506dffffffffffffffffffffffffffff8111155b61329b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e6f6d69737761703a204f564552464c4f5700000000000000000000000000006044820152606401610772565b60006132ac6401000000004261425a565b6007805463ffffffff83167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff8781166e0100000000000000000000000000009081027fffffffff000000000000000000000000000000000000000000000000000000009095168a83161794909417918216831794859055604080519382169282169290921783529290930490911660208201529192507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604090205461343c908290613fda565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152600160205260408082209390935590841681522054613479908290614071565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906133fe9085815260200190565b6000806134e8836004613ff1565b905060006134f7866002613ff1565b6135018680613ff1565b61350b919061405d565b9050606461351a836002613ff1565b613524919061405d565b61352e8683613ff1565b613538919061405d565b9050600082613548606488613ff1565b613552919061405d565b61355c9088614071565b9050600086945060005b6101008110156135e8578591506000846135808480613ff1565b61358a9190614071565b90506000898561359b8a6002613ff1565b6135a59190614071565b6135af9190613fda565b90506135bb82826135f4565b97506135c788856139e6565b156135d35750506135e8565b505080806135e090614222565b915050613566565b50505050509392505050565b60008160016136038286614071565b61360d9190613fda565b6111da919061405d565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015613684573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136a8919061426e565b60085490915073ffffffffffffffffffffffffffffffffffffffff8216158015916fffffffffffffffffffffffffffffffff169061372d57600181111561308e576136fd836136f8600184613fda565b613766565b600880547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166001179055505050565b600181111561308e57600880547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166001179055505050565b806000546137749190614071565b600090815573ffffffffffffffffffffffffffffffffffffffff83168152600160205260409020546137a7908290614071565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906138059085815260200190565b60405180910390a35050565b600081831061382057816111da565b5090919050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040902054613858908290613fda565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260408120919091555461388d908290613fda565b600090815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001613805565b600061393c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16613a089092919063ffffffff16565b80519091501561308e578080602001905181019061395a919061428b565b61308e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610772565b6000818311156139fd575060018183031115610fb0565b506001919003111590565b6060613a178484600085613a1f565b949350505050565b606082471015613ab1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610772565b73ffffffffffffffffffffffffffffffffffffffff85163b613b2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610772565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051613b5891906142ad565b60006040518083038185875af1925050503d8060008114613b95576040519150601f19603f3d011682016040523d82523d6000602084013e613b9a565b606091505b5091509150613baa828286613bb5565b979650505050505050565b60608315613bc45750816111da565b825115613bd45782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107729190613cf3565b73ffffffffffffffffffffffffffffffffffffffff81168114613c2a57600080fd5b50565b600080600080600060808688031215613c4557600080fd5b85359450602086013593506040860135613c5e81613c08565b9250606086013567ffffffffffffffff80821115613c7b57600080fd5b818801915088601f830112613c8f57600080fd5b813581811115613c9e57600080fd5b896020828501011115613cb057600080fd5b9699959850939650602001949392505050565b60005b83811015613cde578181015183820152602001613cc6565b83811115613ced576000848401525b50505050565b6020815260008251806020840152613d12816040850160208701613cc3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008060408385031215613d5757600080fd5b8235613d6281613c08565b946020939093013593505050565b600060208284031215613d8257600080fd5b81356fffffffffffffffffffffffffffffffff811681146111da57600080fd5b600080600060608486031215613db757600080fd5b8335613dc281613c08565b92506020840135613dd281613c08565b929592945050506040919091013590565b600060208284031215613df557600080fd5b81356111da81613c08565b803563ffffffff81168114613e1457600080fd5b919050565b60008060408385031215613e2c57600080fd5b613e3583613e00565b9150602083013564ffffffffff81168114613e4f57600080fd5b809150509250929050565b600080600080600080600060e0888a031215613e7557600080fd5b8735613e8081613c08565b96506020880135613e9081613c08565b95506040880135945060608801359350608088013560ff81168114613eb457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600060208284031215613ee357600080fd5b6111da82613e00565b60008060408385031215613eff57600080fd5b8235613f0a81613c08565b91506020830135613e4f81613c08565b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101949350505050565b600060208284031215613fa457600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015613fec57613fec613fab565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561402957614029613fab565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261406c5761406c61402e565b500490565b6000821982111561408457614084613fab565b500190565b60006fffffffffffffffffffffffffffffffff8083168185168083038211156140b4576140b4613fab565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156140fe57600080fd5b815167ffffffffffffffff8082111561411657600080fd5b818401915084601f83011261412a57600080fd5b81518181111561413c5761413c6140bd565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715614182576141826140bd565b8160405282815287602084870101111561419b57600080fd5b613baa836020830160208801613cc3565b600084516141be818460208901613cc3565b80830190507f2d0000000000000000000000000000000000000000000000000000000000000080825285516141fa816001850160208a01613cc3565b60019201918201528351614215816002840160208801613cc3565b0160020195945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361425357614253613fab565b5060010190565b6000826142695761426961402e565b500690565b60006020828403121561428057600080fd5b81516111da81613c08565b60006020828403121561429d57600080fd5b815180151581146111da57600080fd5b600082516142bf818460208701613cc3565b919091019291505056fea2646970667358221220d2244b5fd2da0217b2d20886c6ebb54c2abb18c30a73b1efc3dc8ba3b279118464736f6c634300080f00334e6f6d6973776170537461626c65506169723a20756e737570706f7274656420",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000f15760003560e01c80636864a4b31162000097578063bcec1e4d116200006e578063bcec1e4d14620001f9578063c9c653961462000210578063e6a439051462000227578063f46901ed146200026b57600080fd5b80636864a4b314620001b45780639e68ceb814620001cb578063a2e74af614620001e257600080fd5b8063257671f511620000cc578063257671f5146200017957806352b5c71e1462000192578063574f2ba314620001ab57600080fd5b8063017e7e5814620000f6578063094b741514620001415780631e3dd18b1462000162575b600080fd5b600054620001179073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b600154620001179073ffffffffffffffffffffffffffffffffffffffff1681565b620001176200017336600462000e0a565b62000282565b6200018360025481565b60405190815260200162000138565b620001a9620001a336600462000e4e565b620002ba565b005b60045462000183565b620001a9620001c536600462000e9e565b62000457565b620001a9620001dc36600462000ed8565b6200053f565b620001a9620001f336600462000e9e565b6200061b565b620001a96200020a36600462000f10565b620006e5565b620001176200022136600462000f67565b62000801565b620001176200023836600462000f67565b600360209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b620001a96200027c36600462000e9e565b62000d32565b600481815481106200029357600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60015473ffffffffffffffffffffffffffffffffffffffff16331462000341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e0000000000000000000000000060448201526064015b60405180910390fd5b6000816fffffffffffffffffffffffffffffffff1611620003bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4e6f6d69737761703a20464f5242494444454e5f464545000000000000000000604482015260640162000338565b6040517f111f8ef30000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff8216600482015273ffffffffffffffffffffffffffffffffffffffff83169063111f8ef3906024015b600060405180830381600087803b1580156200043a57600080fd5b505af11580156200044f573d6000803e3d6000fd5b505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff163314620004da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000338565b8073ffffffffffffffffffffffffffffffffffffffff1663c4db7fa06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200052357600080fd5b505af115801562000538573d6000803e3d6000fd5b5050505050565b60015473ffffffffffffffffffffffffffffffffffffffff163314620005c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000338565b6040517fd6d788c300000000000000000000000000000000000000000000000000000000815263ffffffff8216600482015273ffffffffffffffffffffffffffffffffffffffff83169063d6d788c3906024016200041f565b60015473ffffffffffffffffffffffffffffffffffffffff1633146200069e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000338565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff16331462000768576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000338565b6040517f73c48bb500000000000000000000000000000000000000000000000000000000815263ffffffff8316600482015264ffffffffff8216602482015273ffffffffffffffffffffffffffffffffffffffff8416906373c48bb590604401600060405180830381600087803b158015620007e357600080fd5b505af1158015620007f8573d6000803e3d6000fd5b50505050505050565b60015460009073ffffffffffffffffffffffffffffffffffffffff16331462000887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000338565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200091e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4e6f6d69737761703a204944454e544943414c5f414444524553534553000000604482015260640162000338565b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106200095d57838562000960565b84845b909250905073ffffffffffffffffffffffffffffffffffffffff8216620009e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f6d69737761703a205a45524f5f4144445245535300000000000000000000604482015260640162000338565b73ffffffffffffffffffffffffffffffffffffffff82811660009081526003602090815260408083208585168452909152902054161562000a82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4e6f6d69737761703a20504149525f4558495354530000000000000000000000604482015260640162000338565b60006040518060200162000a969062000dfc565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604081815273ffffffffffffffffffffffffffffffffffffffff8681166020840152851690820152606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262000b2d929160200162000fd4565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606086811b8216602085015285901b1660348301529150600090604801604051602081830303815290604052805190602001209050808251602084016000f5945073ffffffffffffffffffffffffffffffffffffffff851662000c3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4e6f6d69737761703a20504149525f4e4f545f43524541544544000000000000604482015260640162000338565b73ffffffffffffffffffffffffffffffffffffffff84811660008181526003602081815260408084208987168086529083528185208054978d167fffffffffffffffffffffffff000000000000000000000000000000000000000098891681179091559383528185208686528352818520805488168517905560048054600181018255958190527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b60015473ffffffffffffffffffffffffffffffffffffffff16331462000db5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e00000000000000000000000000604482015260640162000338565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b614a0e8062000ff683390190565b60006020828403121562000e1d57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811462000e4957600080fd5b919050565b6000806040838503121562000e6257600080fd5b62000e6d8362000e24565b915060208301356fffffffffffffffffffffffffffffffff8116811462000e9357600080fd5b809150509250929050565b60006020828403121562000eb157600080fd5b62000ebc8262000e24565b9392505050565b803563ffffffff8116811462000e4957600080fd5b6000806040838503121562000eec57600080fd5b62000ef78362000e24565b915062000f076020840162000ec3565b90509250929050565b60008060006060848603121562000f2657600080fd5b62000f318462000e24565b925062000f416020850162000ec3565b9150604084013564ffffffffff8116811462000f5c57600080fd5b809150509250925092565b6000806040838503121562000f7b57600080fd5b62000f868362000e24565b915062000f076020840162000e24565b6000815160005b8181101562000fb9576020818501810151868301520162000f9d565b8181111562000fc9576000828601525b509290920192915050565b600062000fed62000fe6838662000f96565b8462000f96565b94935050505056fe60c0604052600880546001600160801b031916600117905560076200002a600160701b600362000459565b6200003691906200047b565b600880546001600160801b03928316600160801b029216919091179055620000616064605562000459565b600a805463ffffffff191663ffffffff92909216919091179055620000896064605562000459565b600a805463ffffffff60201b63ffffffff60901b01191664010000000063ffffffff939093169290920263ffffffff60901b191691909117601960921b179055348015620000d657600080fd5b5060405162004a0e38038062004a0e833981016040819052620000f991620004bb565b604080518082018252601381527f4e6f6d697377617020737461626c65204c5073000000000000000000000000006020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527f22155260db1abf6474eb894108f4b66f54f6b4a9c481b6e3e789468ed505cc97918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a0830152339160c00160408051808303601f190181528282528051602091820120608052600160049081556001600160a01b0395861660a052600a805464ffffffffff60681b19166d01000000000000000000000000004264ffffffffff1602179055600580546001600160a01b03199081168a8916908117909255600680549091169789169790971790965563313ce56760e01b84529151600095945063313ce5679383810193908290030181865afa15801562000286573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ac9190620004f3565b905060128160ff161115620003055760405162461bcd60e51b81526020600482015260256024820152600080516020620049ee8339815191526044820152643a37b5b2b760d91b60648201526084015b60405180910390fd5b620003128160126200051f565b6200031f90600a62000685565b600960006101000a8154816001600160801b0302191690836001600160801b031602179055506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000386573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003ac9190620004f3565b905060128160ff161115620004015760405162461bcd60e51b81526020600482015260256024820152600080516020620049ee8339815191526044820152643a37b5b2b760d91b6064820152608401620002fc565b6200040e8160126200051f565b6200041b90600a62000685565b600980546001600160801b03928316600160801b029216919091179055506200069f92505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161562000476576200047662000443565b500290565b6000826200049957634e487b7160e01b600052601260045260246000fd5b500490565b80516001600160a01b0381168114620004b657600080fd5b919050565b60008060408385031215620004cf57600080fd5b620004da836200049e565b9150620004ea602084016200049e565b90509250929050565b6000602082840312156200050657600080fd5b815160ff811681146200051857600080fd5b9392505050565b600060ff821660ff8416808210156200053c576200053c62000443565b90039392505050565b600181815b808511156200058c576001600160801b0382900482111562000570576200057062000443565b808516156200057e57918102915b93841c93908002906200054a565b509250929050565b600082620005a5575060016200067f565b81620005b4575060006200067f565b8160018114620005cd5760028114620005d85762000613565b60019150506200067f565b60ff841115620005ec57620005ec62000443565b6001841b91506001600160801b038211156200060c576200060c62000443565b506200067f565b5060208310610133831016604e8410600b841016171562000652575081810a6001600160801b038111156200064c576200064c62000443565b6200067f565b6200065e838362000545565b6001600160801b038190048211156200067b576200067b62000443565b0290505b92915050565b60006200051860ff84166001600160801b03841662000594565b60805160a0516142ff620006ef6000396000818161064a01528181610fce015281816118cd0152818161256901528181612ceb015261361b0152600081816104340152612a6001526142ff6000f3fe608060405234801561001057600080fd5b50600436106102775760003560e01c806373c48bb511610160578063bc25cf77116100d8578063d46300fd1161008c578063d6d788c311610071578063d6d788c3146106c4578063dd62ed3e146106d7578063fff6cae91461070257600080fd5b8063d46300fd146106a9578063d505accf146106b157600080fd5b8063c4db7fa0116100bd578063c4db7fa01461066e578063ca706bcf14610676578063d21220a71461068957600080fd5b8063bc25cf7714610635578063c45a01551461064857600080fd5b8063a0be06f91161012f578063a9059cbb11610114578063a9059cbb146105fd578063ba9a7a5614610610578063baa8c7cb1461061957600080fd5b8063a0be06f9146105ce578063a457c2d7146105ea57600080fd5b806373c48bb51461056b5780637ecebe001461057e57806389afcb441461059e57806395d89b41146105c657600080fd5b8063313ce567116101f357806354cf2aeb116101c25780636827e764116101a75780636827e764146105085780636a6278421461053857806370a082311461054b57600080fd5b806354cf2aeb146104ba578063632db21c146104f557600080fd5b8063313ce567146104155780633644e5151461042f57806339509351146104565780634e25dc471461046957600080fd5b80630dfe16811161024a57806318160ddd1161022f57806318160ddd146103c457806323b872dd146103db57806330adf81f146103ee57600080fd5b80630dfe16811461036c578063111f8ef3146103b157600080fd5b8063022c0d9f1461027c57806306fdde03146102915780630902f1ac146102e3578063095ea7b314610349575b600080fd5b61028f61028a366004613c2d565b61070a565b005b6102cd6040518060400160405280601381526020017f4e6f6d697377617020737461626c65204c50730000000000000000000000000081525081565b6040516102da9190613cf3565b60405180910390f35b600754604080516dffffffffffffffffffffffffffff80841682526e01000000000000000000000000000084041660208201527c010000000000000000000000000000000000000000000000000000000090920463ffffffff16908201526060016102da565b61035c610357366004613d44565b610f9f565b60405190151581526020016102da565b60055461038c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102da565b61028f6103bf366004613d70565b610fb6565b6103cd60005481565b6040519081526020016102da565b61035c6103e9366004613da2565b611106565b6103cd7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61041d601281565b60405160ff90911681526020016102da565b6103cd7f000000000000000000000000000000000000000000000000000000000000000081565b61035c610464366004613d44565b6111e1565b6009546104999070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1681565b6040516fffffffffffffffffffffffffffffffff90911681526020016102da565b600a546104e0907201000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff90911681526020016102da565b6103cd610503366004613d44565b61122a565b6008546104999070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1681565b6103cd610546366004613de3565b61146d565b6103cd610559366004613de3565b60016020526000908152604090205481565b61028f610579366004613e19565b611844565b6103cd61058c366004613de3565b60036020526000908152604090205481565b6105b16105ac366004613de3565b611c38565b604080519283526020830191909152016102da565b6102cd61207a565b600854610499906fffffffffffffffffffffffffffffffff1681565b61035c6105f8366004613d44565b61223c565b61035c61060b366004613d44565b61230c565b6103cd6103e881565b600954610499906fffffffffffffffffffffffffffffffff1681565b61028f610643366004613de3565b612319565b7f000000000000000000000000000000000000000000000000000000000000000061038c565b61028f6124e0565b6103cd610684366004613d44565b6126ed565b60065461038c9073ffffffffffffffffffffffffffffffffffffffff1681565b6103cd6128f1565b61028f6106bf366004613e5a565b6129cd565b61028f6106d2366004613ed1565b612cd3565b6103cd6106e5366004613eec565b600260209081526000928352604080842090915290825290205481565b61028f612e58565b60026004540361077b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026004558415158061078e5750600084115b610819576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4e6f6d69737761703a20494e53554646494349454e545f4f55545055545f414d60448201527f4f554e54000000000000000000000000000000000000000000000000000000006064820152608401610772565b6000806108756007546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915081871080156108a857508086105b61090e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4e6f6d69737761703a20494e53554646494349454e545f4c49515549444954596044820152606401610772565b600554600654600091829173ffffffffffffffffffffffffffffffffffffffff91821691908116908916821480159061097357508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b6109d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f6d69737761703a20494e56414c49445f544f0000000000000000000000006044820152606401610772565b8a156109ea576109ea828a8d613001565b89156109fb576109fb818a8c613001565b8615610a8e576040517f2210968200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a1690632210968290610a5b9033908f908f908e908e90600401613f1a565b600060405180830381600087803b158015610a7557600080fd5b505af1158015610a89573d6000803e3d6000fd5b505050505b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1c9190613f92565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8216906370a0823190602401602060405180830381865afa158015610b89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bad9190613f92565b9250505060008985610bbf9190613fda565b8311610bcc576000610be0565b610bd68a86613fda565b610be09084613fda565b90506000610bee8a86613fda565b8311610bfb576000610c0f565b610c058a86613fda565b610c0f9084613fda565b90506000821180610c205750600081115b610cac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4e6f6d69737761703a20494e53554646494349454e545f494e5055545f414d4f60448201527f554e5400000000000000000000000000000000000000000000000000000000006064820152608401610772565b6000610cb66128f1565b600a546009549192507201000000000000000000000000000000000000900463ffffffff16906fffffffffffffffffffffffffffffffff808216917001000000000000000000000000000000009004166000620186a083610d17868a613ff1565b610d24620186a08d613ff1565b610d2e9190613fda565b610d389190613ff1565b610d42919061405d565b90506000620186a083610d55878a613ff1565b610d62620186a08d613ff1565b610d6c9190613fda565b610d769190613ff1565b610d80919061405d565b90506000610d8f838389613093565b90506000610d9d868f613ff1565b90506000610dab868f613ff1565b90506000610dba83838c613093565b905080841015610e26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4e6f6d69737761703a20440000000000000000000000000000000000000000006044820152606401610772565b6000610e338f8f8d6131c0565b90506000610e418383613fda565b600054610e4e9190613ff1565b60085490915060009084906e01000000000000000000000000000090610e9a9070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1686613ff1565b610ea4919061405d565b610eae9190614071565b9050610eba818361405d565b60088054600090610ede9084906fffffffffffffffffffffffffffffffff16614089565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050505050505050505050505050610f2b8484613209565b60408051838152602081018390529081018c9052606081018b905273ffffffffffffffffffffffffffffffffffffffff8a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600455505050505050505050565b6000610fac33848461339c565b5060015b92915050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611055576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e000000000000000000000000006044820152606401610772565b806fffffffffffffffffffffffffffffffff166000036110d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4e6f6d6973776170537461626c65506169723a206465762066656520300000006044820152606401610772565b600880546fffffffffffffffffffffffffffffffff928316700100000000000000000000000000000000029216919091179055565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff146111cb5773ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902054611199908390613fda565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602090815260408083203384529091529020555b6111d684848461340b565b5060015b9392505050565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091610fac918590611225908690614071565b61339c565b60008060006112886007546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506009546dffffffffffffffffffffffffffff9283169450911691506fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041681840281840260006112de6128f1565b905060006112ed848484613093565b60055490915073ffffffffffffffffffffffffffffffffffffffff908116908c160361137957898502830360006113258284866134da565b905060006113358783038a6135f4565b600a5490915061136f90620186a08084029163ffffffff72010000000000000000000000000000000000009091048116909103906135f416565b9b5050505061145f565b60065473ffffffffffffffffffffffffffffffffffffffff8c81169116146113fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e56414c49445f494e5055545f544f4b454e000000000000000000000000006044820152606401610772565b8986028403600061140f8284866134da565b9050600061141f868303896135f4565b600a5490915061145990620186a08084029163ffffffff72010000000000000000000000000000000000009091048116909103906135f416565b9b505050505b505050505050505092915050565b60006002600454036114db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b600260045560008061153c6007546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b506005546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015292945090925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa1580156115b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d89190613f92565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa15801561164c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116709190613f92565b905061167a613617565b60008054906116996dffffffffffffffffffffffffffff871685613fda565b905060006116b76dffffffffffffffffffffffffffff871685613fda565b9050826000036116fe5760006116cb6128f1565b905060006116da8787846131c0565b90506116e86103e882613fda565b99506116f760006103e8613766565b5050611753565b6117506dffffffffffffffffffffffffffff881661171c8585613ff1565b611726919061405d565b6dffffffffffffffffffffffffffff88166117418685613ff1565b61174b919061405d565b613811565b97505b600088116117e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e6f6d69737761703a20494e53554646494349454e545f4c495155494449545960448201527f5f4d494e544544000000000000000000000000000000000000000000000000006064820152608401610772565b6117ed8989613766565b6117f78585613209565b604080518381526020810183905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600455509395945050505050565b6002600454036118b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b60026004553373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611954576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e000000000000000000000000006044820152606401610772565b600a5461197890620151809068010000000000000000900464ffffffffff16614071565b4210156119e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4e6f6d6973776170537461626c65506169723a20494e56414c49445f54494d456044820152606401610772565b6119ee6201518042614071565b8164ffffffffff161015611a84576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e6f6d6973776170537461626c65506169723a20494e56414c49445f4655545560448201527f52455f54494d45000000000000000000000000000000000000000000000000006064820152608401610772565b6000611a8e6128f1565b90506000611aa3606463ffffffff8616613ff1565b905060008463ffffffff16118015611ac35750620f42408463ffffffff16105b611acc57600080fd5b8163ffffffff168163ffffffff161015611b0a578163ffffffff1660648263ffffffff16611afa9190613ff1565b1015611b0557600080fd5b611b2d565b611b1b606463ffffffff8416613ff1565b8163ffffffff161115611b2d57600080fd5b600a805463ffffffff8481167fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009092168217640100000000918516918202177fffffffffffffffffffffffffffff00000000000000000000ffffffffffffffff16680100000000000000004264ffffffffff818116929092027fffffffffffffffffffffffffffff0000000000ffffffffffffffffffffffffff16929092176d0100000000000000000000000000918916918202179094556040805193845260208401929092529082015260608101919091527fa2b71ec6df949300b59aab36b55e189697b750119dd349fcfa8c0f779e83c2549060800160405180910390a1505060016004555050565b600080600260045403611ca7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b600260049081556005546006546040517f70a08231000000000000000000000000000000000000000000000000000000008152309381019390935273ffffffffffffffffffffffffffffffffffffffff9182169291169060009083906370a0823190602401602060405180830381865afa158015611d29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4d9190613f92565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015611dbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de19190613f92565b30600090815260016020526040902054909150611dfc613617565b60005480611e0a8584613ff1565b611e14919061405d565b975080611e218484613ff1565b611e2b919061405d565b9650600088118015611e3d5750600087115b611ec9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e6f6d69737761703a20494e53554646494349454e545f4c495155494449545960448201527f5f4255524e4544000000000000000000000000000000000000000000000000006064820152608401610772565b611ed33083613827565b611ede868a8a613001565b611ee9858a89613001565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015611f53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f779190613f92565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015611fe4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120089190613f92565b92506120148484613209565b604080518981526020810189905273ffffffffffffffffffffffffffffffffffffffff8b169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050506001600481905550915091565b604080518082018252600781527f4e4d582d534c5000000000000000000000000000000000000000000000000000602082015260055482517f95d89b41000000000000000000000000000000000000000000000000000000008152925160609373ffffffffffffffffffffffffffffffffffffffff909216916395d89b419160048083019260009291908290030181865afa15801561211d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261216391908101906140ec565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156121d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261221691908101906140ec565b604051602001612228939291906141ac565b604051602081830303815290604052905090565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054828110156122fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f4e6f6d6973776170537461626c6545524332303a20646563726561736564206160448201527f6c6c6f77616e63652062656c6f77207a65726f000000000000000000000000006064820152608401610772565b6111d633856112258685613fda565b6000610fac33848461340b565b600260045403612385576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b600260049081556005546006546007546040517f70a08231000000000000000000000000000000000000000000000000000000008152309481019490945273ffffffffffffffffffffffffffffffffffffffff92831693929091169161245691849186916dffffffffffffffffffffffffffff169083906370a08231906024015b602060405180830381865afa158015612423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124479190613f92565b6124519190613fda565b613001565b6007546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526124d691839186916e01000000000000000000000000000090046dffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401612406565b5050600160045550565b60026004540361254c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b60026004553373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146125f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e000000000000000000000000006044820152606401610772565b60006125fa6128f1565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001663ffffffff83169081176401000000008202177fffffffffffffffffffffffffffff00000000000000000000ffffffffffffffff16680100000000000000004264ffffffffff81169182027fffffffffffffffffffffffffffff0000000000ffffffffffffffffffffffffff16929092176d010000000000000000000000000091909102179092556040805191825260208201929092529192507f46e22fb3709ad289f62ce63d469248536dbc78d82b84a3d7e74ad606dc201938910160405180910390a1506001600455565b600080600061274b6007546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b50600954600a546dffffffffffffffffffffffffffff93841695509190921692506fffffffffffffffffffffffffffffffff8083169270010000000000000000000000000000000090041690620186a0720100000000000000000000000000000000000090910463ffffffff168702878202030482850282850260006127cf6128f1565b905060006127de848484613093565b60055490915073ffffffffffffffffffffffffffffffffffffffff908116908d160361283357848702840160006128168284866134da565b905087818603816128295761282961402e565b049b5050506128e2565b60065473ffffffffffffffffffffffffffffffffffffffff8d81169116146128b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e56414c49445f494e5055545f544f4b454e000000000000000000000000006044820152606401610772565b848602830160006128c98284866134da565b905088818703816128dc576128dc61402e565b049b5050505b50505050505050505092915050565b600a546000906d0100000000000000000000000000810464ffffffffff1690640100000000900463ffffffff1642821115610fb057600a5463ffffffff81169068010000000000000000900464ffffffffff1681831115612991576129568185613fda565b6129608385613fda565b61296a8342613fda565b6129749190613ff1565b61297e919061405d565b6129889083614071565b94505050505090565b61299b8185613fda565b6129a58484613fda565b6129af8342613fda565b6129b99190613ff1565b6129c3919061405d565b6129889083613fda565b42841015612a37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f6d69737761703a20455850495245440000000000000000000000000000006044820152606401610772565b73ffffffffffffffffffffffffffffffffffffffff8716600090815260036020526040812080547f0000000000000000000000000000000000000000000000000000000000000000917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9187612ab283614222565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001612b539291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015612bdc573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590612c5757508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b612cbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4e6f6d69737761703a20494e56414c49445f5349474e415455524500000000006044820152606401610772565b612cc889898961339c565b505050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614612d72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f6d69737761703a20464f5242494444454e000000000000000000000000006044820152606401610772565b620186a08163ffffffff161115612e0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4e6f6d6973776170537461626c65506169723a20464f5242494444454e5f464560448201527f45000000000000000000000000000000000000000000000000000000000000006064820152608401610772565b600a805463ffffffff9092167201000000000000000000000000000000000000027fffffffffffffffffffff00000000ffffffffffffffffffffffffffffffffffff909216919091179055565b600260045403612ec4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610772565b600260049081556005546040517f70a082310000000000000000000000000000000000000000000000000000000081523092810192909252612ffa9173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015612f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f639190613f92565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015612fd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ff59190613f92565b613209565b6001600455565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261308e9084906138da565b505050565b6000806130a08486614071565b905060006130af846004613ff1565b9050816000036130c4576000925050506111da565b600082815b6101008110156131b4576000600489848c6130e48280613ff1565b6130ee919061405d565b6130f89190613ff1565b613102919061405d565b61310c919061405d565b905082935080600361311e9190613ff1565b83600161312c60648961405d565b6131369190613fda565b6131409190613ff1565b61314a9190614071565b83613156836002613ff1565b60646131628a8a613ff1565b61316c919061405d565b6131769190614071565b6131809190613ff1565b61318a919061405d565b925061319683856139e6565b156131a157506131b4565b50806131ac81614222565b9150506130c9565b50979650505050505050565b6009546000906fffffffffffffffffffffffffffffffff80821686029170010000000000000000000000000000000090041684026131ff828286613093565b9695505050505050565b6dffffffffffffffffffffffffffff821180159061323557506dffffffffffffffffffffffffffff8111155b61329b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e6f6d69737761703a204f564552464c4f5700000000000000000000000000006044820152606401610772565b60006132ac6401000000004261425a565b6007805463ffffffff83167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff8781166e0100000000000000000000000000009081027fffffffff000000000000000000000000000000000000000000000000000000009095168a83161794909417918216831794859055604080519382169282169290921783529290930490911660208201529192507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604090205461343c908290613fda565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152600160205260408082209390935590841681522054613479908290614071565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906133fe9085815260200190565b6000806134e8836004613ff1565b905060006134f7866002613ff1565b6135018680613ff1565b61350b919061405d565b9050606461351a836002613ff1565b613524919061405d565b61352e8683613ff1565b613538919061405d565b9050600082613548606488613ff1565b613552919061405d565b61355c9088614071565b9050600086945060005b6101008110156135e8578591506000846135808480613ff1565b61358a9190614071565b90506000898561359b8a6002613ff1565b6135a59190614071565b6135af9190613fda565b90506135bb82826135f4565b97506135c788856139e6565b156135d35750506135e8565b505080806135e090614222565b915050613566565b50505050509392505050565b60008160016136038286614071565b61360d9190613fda565b6111da919061405d565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015613684573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136a8919061426e565b60085490915073ffffffffffffffffffffffffffffffffffffffff8216158015916fffffffffffffffffffffffffffffffff169061372d57600181111561308e576136fd836136f8600184613fda565b613766565b600880547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166001179055505050565b600181111561308e57600880547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166001179055505050565b806000546137749190614071565b600090815573ffffffffffffffffffffffffffffffffffffffff83168152600160205260409020546137a7908290614071565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906138059085815260200190565b60405180910390a35050565b600081831061382057816111da565b5090919050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040902054613858908290613fda565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260408120919091555461388d908290613fda565b600090815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001613805565b600061393c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16613a089092919063ffffffff16565b80519091501561308e578080602001905181019061395a919061428b565b61308e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610772565b6000818311156139fd575060018183031115610fb0565b506001919003111590565b6060613a178484600085613a1f565b949350505050565b606082471015613ab1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610772565b73ffffffffffffffffffffffffffffffffffffffff85163b613b2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610772565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051613b5891906142ad565b60006040518083038185875af1925050503d8060008114613b95576040519150601f19603f3d011682016040523d82523d6000602084013e613b9a565b606091505b5091509150613baa828286613bb5565b979650505050505050565b60608315613bc45750816111da565b825115613bd45782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107729190613cf3565b73ffffffffffffffffffffffffffffffffffffffff81168114613c2a57600080fd5b50565b600080600080600060808688031215613c4557600080fd5b85359450602086013593506040860135613c5e81613c08565b9250606086013567ffffffffffffffff80821115613c7b57600080fd5b818801915088601f830112613c8f57600080fd5b813581811115613c9e57600080fd5b896020828501011115613cb057600080fd5b9699959850939650602001949392505050565b60005b83811015613cde578181015183820152602001613cc6565b83811115613ced576000848401525b50505050565b6020815260008251806020840152613d12816040850160208701613cc3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008060408385031215613d5757600080fd5b8235613d6281613c08565b946020939093013593505050565b600060208284031215613d8257600080fd5b81356fffffffffffffffffffffffffffffffff811681146111da57600080fd5b600080600060608486031215613db757600080fd5b8335613dc281613c08565b92506020840135613dd281613c08565b929592945050506040919091013590565b600060208284031215613df557600080fd5b81356111da81613c08565b803563ffffffff81168114613e1457600080fd5b919050565b60008060408385031215613e2c57600080fd5b613e3583613e00565b9150602083013564ffffffffff81168114613e4f57600080fd5b809150509250929050565b600080600080600080600060e0888a031215613e7557600080fd5b8735613e8081613c08565b96506020880135613e9081613c08565b95506040880135945060608801359350608088013560ff81168114613eb457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600060208284031215613ee357600080fd5b6111da82613e00565b60008060408385031215613eff57600080fd5b8235613f0a81613c08565b91506020830135613e4f81613c08565b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101949350505050565b600060208284031215613fa457600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015613fec57613fec613fab565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561402957614029613fab565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261406c5761406c61402e565b500490565b6000821982111561408457614084613fab565b500190565b60006fffffffffffffffffffffffffffffffff8083168185168083038211156140b4576140b4613fab565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156140fe57600080fd5b815167ffffffffffffffff8082111561411657600080fd5b818401915084601f83011261412a57600080fd5b81518181111561413c5761413c6140bd565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715614182576141826140bd565b8160405282815287602084870101111561419b57600080fd5b613baa836020830160208801613cc3565b600084516141be818460208901613cc3565b80830190507f2d0000000000000000000000000000000000000000000000000000000000000080825285516141fa816001850160208a01613cc3565b60019201918201528351614215816002840160208801613cc3565b0160020195945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361425357614253613fab565b5060010190565b6000826142695761426961402e565b500690565b60006020828403121561428057600080fd5b81516111da81613c08565b60006020828403121561429d57600080fd5b815180151581146111da57600080fd5b600082516142bf818460208701613cc3565b919091019291505056fea2646970667358221220d2244b5fd2da0217b2d20886c6ebb54c2abb18c30a73b1efc3dc8ba3b279118464736f6c634300080f00334e6f6d6973776170537461626c65506169723a20756e737570706f7274656420a264697066735822122038d630bc3b8b72448995a465e4277e423e8399b2b49c0cd1d8271bb02e9b312b64736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:737:18",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:18",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "151:289:18",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "161:27:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "181:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "175:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "175:13:18"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "165:6:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "197:10:18",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "206:1:18",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "201:1:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:77:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "293:3:18"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "298:1:18"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "289:3:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "289:11:18"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "316:6:18"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "324:1:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "312:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "312:14:18"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "328:4:18",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "308:3:18"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "308:25:18"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "302:5:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "302:32:18"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "282:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "282:53:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "282:53:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "227:1:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "230:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "224:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:13:18"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "238:21:18",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "240:17:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "249:1:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "252:4:18",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "245:3:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "245:12:18"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "240:1:18"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "220:3:18",
                    "statements": []
                  },
                  "src": "216:129:18"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "371:31:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "384:3:18"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "389:6:18"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "380:3:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "380:16:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "398:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "373:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "373:27:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "373:27:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "360:1:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "363:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "357:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "357:13:18"
                  },
                  "nodeType": "YulIf",
                  "src": "354:48:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "411:23:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "422:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "427:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:16:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "411:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "127:3:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "132:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "143:3:18",
                "type": ""
              }
            ],
            "src": "14:426:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "526:209:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "572:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "581:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "584:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "574:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "574:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "574:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "547:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "556:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "543:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "543:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "568:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "539:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "539:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "536:52:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "597:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "616:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "610:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "610:16:18"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "601:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "689:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "698:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "701:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "691:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "691:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "691:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "648:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:18"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "674:3:18",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "679:1:18",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "670:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "670:11:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "683:1:18",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "666:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "666:19:18"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "655:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "655:31:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "645:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "645:42:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "638:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "638:50:18"
                  },
                  "nodeType": "YulIf",
                  "src": "635:70:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "714:15:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "724:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "714:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "492:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "503:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "515:6:18",
                "type": ""
              }
            ],
            "src": "445:290:18"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7121:18",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:18",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:125:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "190:42:18",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:55:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:74:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:74:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:18",
                "type": ""
              }
            ],
            "src": "14:226:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "315:110:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "361:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "370:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "373:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "363:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "363:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "363:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "336:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "345:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "332:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "332:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "357:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "325:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "386:33:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "409:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "396:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "396:23:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "386:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "281:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "292:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "304:6:18",
                "type": ""
              }
            ],
            "src": "245:180:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "531:76:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "541:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "553:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "564:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "549:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "549:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "541:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "583:9:18"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "594:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "576:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "576:25:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "576:25:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "500:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "511:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "522:4:18",
                "type": ""
              }
            ],
            "src": "430:177:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "661:147:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "671:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "693:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "680:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "680:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "671:5:18"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "786:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "795:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "798:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "788:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "788:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "788:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "722:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "733:5:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "740:42:18",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "729:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "729:54:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "719:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "719:65:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "712:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "712:73:18"
                  },
                  "nodeType": "YulIf",
                  "src": "709:93:18"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "640:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "651:5:18",
                "type": ""
              }
            ],
            "src": "612:196:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "900:288:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "946:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "955:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "958:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "948:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "948:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "948:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "921:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "930:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "917:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "917:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "942:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "913:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "913:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "910:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "971:39:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1000:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "981:18:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "981:29:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "971:6:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1019:45:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1049:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1060:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1045:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1045:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1032:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1032:32:18"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1023:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1142:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1151:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1154:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1144:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1144:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1144:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1086:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1097:5:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1104:34:18",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1093:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1093:46:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1083:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1083:57:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1076:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1076:65:18"
                  },
                  "nodeType": "YulIf",
                  "src": "1073:85:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1167:15:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1177:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1167:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "858:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "869:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "881:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "889:6:18",
                "type": ""
              }
            ],
            "src": "813:375:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1294:76:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1304:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1316:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1327:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1312:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1312:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1304:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1346:9:18"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1357:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1339:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1339:25:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1339:25:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1263:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1274:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1285:4:18",
                "type": ""
              }
            ],
            "src": "1193:177:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1445:116:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1491:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1500:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1503:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1493:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1493:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1493:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1466:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1475:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1462:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1462:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1487:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1458:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1458:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "1455:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1516:39:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1545:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1526:18:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1526:29:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1516:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1411:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1422:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1434:6:18",
                "type": ""
              }
            ],
            "src": "1375:186:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1614:115:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1624:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1646:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1633:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1633:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1624:5:18"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1707:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1716:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1719:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1709:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1709:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1709:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1675:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1686:5:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1693:10:18",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1682:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1682:22:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1672:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1672:33:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1665:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1665:41:18"
                  },
                  "nodeType": "YulIf",
                  "src": "1662:61:18"
                }
              ]
            },
            "name": "abi_decode_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1593:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1604:5:18",
                "type": ""
              }
            ],
            "src": "1566:163:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1820:172:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1866:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1875:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1878:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1868:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1868:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1868:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1841:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1850:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1837:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1837:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1862:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1833:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1833:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "1830:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1891:39:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1920:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1901:18:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1901:29:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1891:6:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1939:47:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1971:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1982:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1967:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1967:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "1949:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1949:37:18"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1939:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1778:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1789:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1801:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1809:6:18",
                "type": ""
              }
            ],
            "src": "1734:258:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2099:322:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2145:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2154:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2157:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2147:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2147:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2147:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2120:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2129:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2116:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2116:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2141:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2112:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2112:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "2109:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2170:39:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2199:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2180:18:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2180:29:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2170:6:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2218:47:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2250:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2261:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2246:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2246:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "2228:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2228:37:18"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2218:6:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2274:45:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2304:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2315:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2300:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2300:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2287:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2287:32:18"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2278:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2375:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2384:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2387:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2377:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2377:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2377:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2341:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2352:5:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2359:12:18",
                                "type": "",
                                "value": "0xffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2348:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2348:24:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2338:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2338:35:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2331:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2331:43:18"
                  },
                  "nodeType": "YulIf",
                  "src": "2328:63:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2400:15:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2410:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2400:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint32t_uint40",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2049:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2060:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2072:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2080:6:18",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2088:6:18",
                "type": ""
              }
            ],
            "src": "1997:424:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2513:173:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2559:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2568:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2571:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2561:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2561:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2561:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2534:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2543:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2530:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2530:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2555:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2526:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2526:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "2523:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2584:39:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2613:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2594:18:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2594:29:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2584:6:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2632:48:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2665:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2676:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2661:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2661:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2642:18:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2642:38:18"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2632:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2471:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2482:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2494:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2502:6:18",
                "type": ""
              }
            ],
            "src": "2426:260:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2865:169:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2882:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2893:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2875:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2875:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2875:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2916:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2927:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2912:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2912:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2932:2:18",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2905:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2905:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2905:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2955:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2966:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2951:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2951:18:18"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2971:21:18",
                        "type": "",
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2944:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2944:49:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2944:49:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3002:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3014:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3025:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3010:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3010:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3002:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2842:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2856:4:18",
                "type": ""
              }
            ],
            "src": "2691:343:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3213:173:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3230:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3241:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3223:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3223:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3223:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3264:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3275:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3260:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3260:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3280:2:18",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3253:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3253:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3253:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3303:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3314:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3299:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3299:18:18"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e5f464545",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3319:25:18",
                        "type": "",
                        "value": "Nomiswap: FORBIDDEN_FEE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3292:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3292:53:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3292:53:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3354:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3366:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3377:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3362:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3362:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3354:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_90b73549368af0ae6cdb0c9edf500f2f0d39c143efb4b8689b0b8abb658de3e2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3190:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3204:4:18",
                "type": ""
              }
            ],
            "src": "3039:347:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3492:117:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3502:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3514:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3525:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3510:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3510:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3502:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3544:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3559:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3567:34:18",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3555:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3555:47:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3537:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3537:66:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3537:66:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3461:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3472:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3483:4:18",
                "type": ""
              }
            ],
            "src": "3391:218:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3713:93:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3723:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3735:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3746:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3731:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3731:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3723:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3765:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3780:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3788:10:18",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3776:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3776:23:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3758:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3758:42:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3758:42:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3682:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3693:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3704:4:18",
                "type": ""
              }
            ],
            "src": "3614:192:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3936:155:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3946:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3958:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3969:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3954:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3954:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3946:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3988:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4003:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4011:10:18",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3999:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3999:23:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3981:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3981:42:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3981:42:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4043:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4054:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4039:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4039:18:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4063:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4071:12:18",
                            "type": "",
                            "value": "0xffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4059:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4059:25:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4032:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4032:53:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4032:53:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32_t_uint40__to_t_uint32_t_uint40__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3897:9:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3908:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3916:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3927:4:18",
                "type": ""
              }
            ],
            "src": "3811:280:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4270:179:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4287:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4298:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4280:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4280:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4280:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4321:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4332:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4317:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4317:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4337:2:18",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4310:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4310:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4310:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4360:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4371:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4356:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4356:18:18"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a204944454e544943414c5f414444524553534553",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4376:31:18",
                        "type": "",
                        "value": "Nomiswap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4349:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4349:59:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4349:59:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4417:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4429:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4440:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4425:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4425:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4417:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a90c6f057c10e1a53d74da75bc56c676fd121fbdb3c3cf8b1ff7e64725a22925__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4247:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4261:4:18",
                "type": ""
              }
            ],
            "src": "4096:353:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4628:172:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4645:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4656:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4638:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4638:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4638:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4679:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4690:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4675:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4675:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4695:2:18",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4668:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4668:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4668:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4718:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4729:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4714:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4714:18:18"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a205a45524f5f41444452455353",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4734:24:18",
                        "type": "",
                        "value": "Nomiswap: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4707:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4707:52:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4707:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4768:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4780:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4791:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4776:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4776:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4768:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_405e2892877ce8e6370fa3a0dded544224faed24ee93c93308d1a806b4e016ab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4605:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4619:4:18",
                "type": ""
              }
            ],
            "src": "4454:346:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4979:171:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4996:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5007:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4989:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4989:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4989:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5030:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5041:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5026:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5026:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5046:2:18",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5019:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5019:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5019:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5069:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5080:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5065:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5065:18:18"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20504149525f455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5085:23:18",
                        "type": "",
                        "value": "Nomiswap: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5058:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5058:51:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5058:51:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5118:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5130:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5141:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5126:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5126:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5118:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5ace30fe13309f9ef6658b58036e9987d38a6a9e5c2410c1ff9a1017d5d88bae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4956:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4970:4:18",
                "type": ""
              }
            ],
            "src": "4805:345:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5284:198:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5294:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5306:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5317:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5302:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5302:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5294:4:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5329:52:18",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5339:42:18",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5333:2:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5397:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5412:6:18"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5420:2:18"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5408:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5408:15:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5390:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5390:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5390:34:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5444:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5455:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5440:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5440:18:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5464:6:18"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5472:2:18"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5460:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5460:15:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5433:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5433:43:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5433:43:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5245:9:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5256:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5264:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5275:4:18",
                "type": ""
              }
            ],
            "src": "5155:327:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5536:287:18",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5546:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5566:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5560:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5560:12:18"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5550:6:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5581:10:18",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5590:1:18",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5585:1:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5652:76:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5677:3:18"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5682:1:18"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5673:3:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5673:11:18"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "5700:5:18"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5707:1:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5696:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5696:13:18"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5711:4:18",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5692:3:18"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5692:24:18"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5686:5:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5686:31:18"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5666:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5666:52:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5666:52:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5611:1:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5614:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5608:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5608:13:18"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5622:21:18",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5624:17:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5633:1:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5636:4:18",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5629:3:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5629:12:18"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5624:1:18"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5604:3:18",
                    "statements": []
                  },
                  "src": "5600:128:18"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5754:31:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5767:3:18"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5772:6:18"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5763:3:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5763:16:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5781:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5756:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5756:27:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5756:27:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5743:1:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5746:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5740:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5740:13:18"
                  },
                  "nodeType": "YulIf",
                  "src": "5737:48:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5794:23:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5805:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5810:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5801:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5801:16:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5794:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5513:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5520:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5528:3:18",
                "type": ""
              }
            ],
            "src": "5487:336:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6011:78:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6021:62:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6045:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6070:6:18"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6078:3:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "6053:16:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6053:29:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "6028:16:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6028:55:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6021:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5979:3:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5984:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5992:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6003:3:18",
                "type": ""
              }
            ],
            "src": "5828:261:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6241:221:18",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6251:76:18",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6261:66:18",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6255:2:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6343:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6356:2:18",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6360:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "6352:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6352:15:18"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6369:2:18"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6348:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6348:24:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6336:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6336:37:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6336:37:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6393:3:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6398:2:18",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6389:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6389:12:18"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6411:2:18",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "6415:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "6407:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6407:15:18"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6424:2:18"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6403:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6403:24:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6382:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6382:46:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6382:46:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6437:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6448:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6453:2:18",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6444:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6444:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6437:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6209:3:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6214:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6222:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6233:3:18",
                "type": ""
              }
            ],
            "src": "6094:368:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6641:176:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6658:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6669:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6651:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6651:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6651:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6692:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6703:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6688:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6688:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6708:2:18",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6681:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6681:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6681:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6731:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6742:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6727:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6727:18:18"
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20504149525f4e4f545f43524541544544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6747:28:18",
                        "type": "",
                        "value": "Nomiswap: PAIR_NOT_CREATED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6720:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6720:56:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6720:56:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6785:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6797:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6808:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6793:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6793:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6785:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4cd3c6d7e8df26671528fa650a7de99101eba8529ad12a9bcaca2a5489122164__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6618:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6632:4:18",
                "type": ""
              }
            ],
            "src": "6467:350:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6951:168:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6961:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6973:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6984:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6969:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6969:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6961:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7003:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7018:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7026:42:18",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7014:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7014:55:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6996:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6996:74:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6996:74:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7090:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7101:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7086:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7086:18:18"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7106:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7079:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7079:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7079:34:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6912:9:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6923:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6931:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6942:4:18",
                "type": ""
              }
            ],
            "src": "6822:297:18"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint128(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint32(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint32t_uint40(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint32(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xffffffffff))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Nomiswap: FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_90b73549368af0ae6cdb0c9edf500f2f0d39c143efb4b8689b0b8abb658de3e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Nomiswap: FORBIDDEN_FEE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_uint32_t_uint40__to_t_uint32_t_uint40__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_a90c6f057c10e1a53d74da75bc56c676fd121fbdb3c3cf8b1ff7e64725a22925__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Nomiswap: IDENTICAL_ADDRESSES\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_405e2892877ce8e6370fa3a0dded544224faed24ee93c93308d1a806b4e016ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Nomiswap: ZERO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5ace30fe13309f9ef6658b58036e9987d38a6a9e5c2410c1ff9a1017d5d88bae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Nomiswap: PAIR_EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_bytes(value1, abi_encode_bytes(value0, pos))\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_stringliteral_4cd3c6d7e8df26671528fa650a7de99101eba8529ad12a9bcaca2a5489122164__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Nomiswap: PAIR_NOT_CREATED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "157:2745:7:-:0;;;;;338:37;;;:::i;:::-;-1:-1:-1;;338:37:7;;;;;;;;;;;;;;;;321:55;;338:37;;321:55;;:::i;:::-;;;;;;;;;;;;;311:66;;;;;;279:98;;484:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;528:11;:26;;-1:-1:-1;;;;;;528:26:7;-1:-1:-1;;;;;528:26:7;;;;;;;;;;157:2745;;;;;;;;;;:::o;14:426:18:-;143:3;181:6;175:13;206:1;216:129;230:6;227:1;224:13;216:129;;;328:4;312:14;;;308:25;;302:32;289:11;;;282:53;245:12;216:129;;;363:6;360:1;357:13;354:48;;;398:1;389:6;384:3;380:16;373:27;354:48;-1:-1:-1;418:16:18;;;;;14:426;-1:-1:-1;;14:426:18:o;445:290::-;515:6;568:2;556:9;547:7;543:23;539:32;536:52;;;584:1;581;574:12;536:52;610:16;;-1:-1:-1;;;;;655:31:18;;645:42;;635:70;;701:1;698;691:12;635:70;724:5;445:290;-1:-1:-1;;;445:290:18:o;:::-;157:2745:7;;;;;;",
  "deployedSourceMap": "157:2745:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;221:20;;;;;;;;;;;;190:42:18;178:55;;;160:74;;148:2;133:18;221:20:7;;;;;;;;247:26;;;;;;;;;452:25;;;;;;:::i;:::-;;:::i;279:98::-;;;;;;;;;576:25:18;;;564:2;549:18;279:98:7;430:177:18;2065:246:7;;;;;;:::i;:::-;;:::i;:::-;;567:94;639:8;:15;567:94;;2735:164;;;;;;:::i;:::-;;:::i;2317:192::-;;;;;;:::i;:::-;;:::i;1894:165::-;;;;;;:::i;:::-;;:::i;2515:214::-;;;;;;:::i;:::-;;:::i;667:1074::-;;;;;;:::i;:::-;;:::i;384:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1747:141;;;;;;:::i;:::-;;:::i;452:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;452:25:7;:::o;2065:246::-;2157:11;;;;2143:10;:25;2135:57;;;;;;;2893:2:18;2135:57:7;;;2875:21:18;2932:2;2912:18;;;2905:30;2971:21;2951:18;;;2944:49;3010:18;;2135:57:7;;;;;;;;;2220:1;2210:7;:11;;;2202:47;;;;;;;3241:2:18;2202:47:7;;;3223:21:18;3280:2;3260:18;;;3253:30;3319:25;3299:18;;;3292:53;3362:18;;2202:47:7;3039:347:18;2202:47:7;2259:45;;;;;3567:34:18;3555:47;;2259:45:7;;;3537:66:18;2259:36:7;;;;;;3510:18:18;;2259:45:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2065:246;;:::o;2735:164::-;2810:11;;;;2796:10;:25;2788:57;;;;;;;2893:2:18;2788:57:7;;;2875:21:18;2932:2;2912:18;;;2905:30;2971:21;2951:18;;;2944:49;3010:18;;2788:57:7;2691:343:18;2788:57:7;2874:5;2855:35;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:164;:::o;2317:192::-;2410:11;;;;2396:10;:25;2388:57;;;;;;;2893:2:18;2388:57:7;;;2875:21:18;2932:2;2912:18;;;2905:30;2971:21;2951:18;;;2944:49;3010:18;;2388:57:7;2691:343:18;2388:57:7;2455:47;;;;;3788:10:18;3776:23;;2455:47:7;;;3758:42:18;2455:37:7;;;;;;3731:18:18;;2455:47:7;3614:192:18;1894:165:7;1981:11;;;;1967:10;:25;1959:57;;;;;;;2893:2:18;1959:57:7;;;2875:21:18;2932:2;2912:18;;;2905:30;2971:21;2951:18;;;2944:49;3010:18;;1959:57:7;2691:343:18;1959:57:7;2026:11;:26;;;;;;;;;;;;;;;1894:165::o;2515:214::-;2623:11;;;;2609:10;:25;2601:57;;;;;;;2893:2:18;2601:57:7;;;2875:21:18;2932:2;2912:18;;;2905:30;2971:21;2951:18;;;2944:49;3010:18;;2601:57:7;2691:343:18;2601:57:7;2668:54;;;;;4011:10:18;3999:23;;2668:54:7;;;3981:42:18;4071:12;4059:25;;4039:18;;;4032:53;2668:31:7;;;;;;3954:18:18;;2668:54:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:214;;;:::o;667:1074::-;783:11;;737:12;;783:11;;769:10;:25;761:57;;;;;;;2893:2:18;761:57:7;;;2875:21:18;2932:2;2912:18;;;2905:30;2971:21;2951:18;;;2944:49;3010:18;;761:57:7;2691:343:18;761:57:7;846:6;836:16;;:6;:16;;;828:58;;;;;;;4298:2:18;828:58:7;;;4280:21:18;4337:2;4317:18;;;4310:30;4376:31;4356:18;;;4349:59;4425:18;;828:58:7;4096:353:18;828:58:7;897:14;913;940:6;931:15;;:6;:15;;;:53;;969:6;977;931:53;;;950:6;958;931:53;896:88;;-1:-1:-1;896:88:7;-1:-1:-1;1002:20:7;;;994:55;;;;;;;4656:2:18;994:55:7;;;4638:21:18;4695:2;4675:18;;;4668:30;4734:24;4714:18;;;4707:52;4776:18;;994:55:7;4454:346:18;994:55:7;1067:37;:15;;;1102:1;1067:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:37;1059:71;;;;;;;5007:2:18;1059:71:7;;;4989:21:18;5046:2;5026:18;;;5019:30;5085:23;5065:18;;;5058:51;5126:18;;1059:71:7;4805:345:18;1059:71:7;1170:21;1211:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5339:42:18;5408:15;;;1211:37:7;1250:27;;5390:34:18;5460:15;;5440:18;;;5433:43;5302:18;;1250:27:7;;;;;;;;;;;;;;1194:84;;;1250:27;1194:84;;:::i;:::-;;;;;;;;;;;;;;;6261:66:18;6356:2;6352:15;;;6348:24;;1194:84:7;1313:32;;6336:37:18;6407:15;;;6403:24;6389:12;;;6382:46;1194:84:7;-1:-1:-1;1288:12:7;;6444::18;;1313:32:7;;;;;;;;;;;;1303:43;;;;;;1288:58;;1434:4;1423:8;1417:15;1412:2;1402:8;1398:17;1395:1;1387:52;1379:60;-1:-1:-1;1466:18:7;;;1458:57;;;;;;;6669:2:18;1458:57:7;;;6651:21:18;6708:2;6688:18;;;6681:30;6747:28;6727:18;;;6720:56;6793:18;;1458:57:7;6467:350:18;1458:57:7;1525:15;;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:30;;;;;;;;;;;;;;1565:15;;;;;;:23;;;;;;;;:30;;;;;;;;1650:8;:19;;-1:-1:-1;1650:19:7;;;;;;;;;;;;;;;;;;;;;;1718:15;;1684:50;;6996:74:18;;;7086:18;;;7079:34;1684:50:7;;6969:18:18;1684:50:7;;;;;;;751:990;;;;667:1074;;;;:::o;1747:141::-;1822:11;;;;1808:10;:25;1800:57;;;;;;;2893:2:18;1800:57:7;;;2875:21:18;2932:2;2912:18;;;2905:30;2971:21;2951:18;;;2944:49;3010:18;;1800:57:7;2691:343:18;1800:57:7;1867:5;:14;;;;;;;;;;;;;;;1747:141::o;-1:-1:-1:-;;;;;;;;:::o;245:180:18:-;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;-1:-1:-1;396:23:18;;245:180;-1:-1:-1;245:180:18:o;612:196::-;680:20;;740:42;729:54;;719:65;;709:93;;798:1;795;788:12;709:93;612:196;;;:::o;813:375::-;881:6;889;942:2;930:9;921:7;917:23;913:32;910:52;;;958:1;955;948:12;910:52;981:29;1000:9;981:29;:::i;:::-;971:39;;1060:2;1049:9;1045:18;1032:32;1104:34;1097:5;1093:46;1086:5;1083:57;1073:85;;1154:1;1151;1144:12;1073:85;1177:5;1167:15;;;813:375;;;;;:::o;1375:186::-;1434:6;1487:2;1475:9;1466:7;1462:23;1458:32;1455:52;;;1503:1;1500;1493:12;1455:52;1526:29;1545:9;1526:29;:::i;:::-;1516:39;1375:186;-1:-1:-1;;;1375:186:18:o;1566:163::-;1633:20;;1693:10;1682:22;;1672:33;;1662:61;;1719:1;1716;1709:12;1734:258;1801:6;1809;1862:2;1850:9;1841:7;1837:23;1833:32;1830:52;;;1878:1;1875;1868:12;1830:52;1901:29;1920:9;1901:29;:::i;:::-;1891:39;;1949:37;1982:2;1971:9;1967:18;1949:37;:::i;:::-;1939:47;;1734:258;;;;;:::o;1997:424::-;2072:6;2080;2088;2141:2;2129:9;2120:7;2116:23;2112:32;2109:52;;;2157:1;2154;2147:12;2109:52;2180:29;2199:9;2180:29;:::i;:::-;2170:39;;2228:37;2261:2;2250:9;2246:18;2228:37;:::i;:::-;2218:47;;2315:2;2304:9;2300:18;2287:32;2359:12;2352:5;2348:24;2341:5;2338:35;2328:63;;2387:1;2384;2377:12;2328:63;2410:5;2400:15;;;1997:424;;;;;:::o;2426:260::-;2494:6;2502;2555:2;2543:9;2534:7;2530:23;2526:32;2523:52;;;2571:1;2568;2561:12;2523:52;2594:29;2613:9;2594:29;:::i;:::-;2584:39;;2642:38;2676:2;2665:9;2661:18;2642:38;:::i;5487:336::-;5528:3;5566:5;5560:12;5590:1;5600:128;5614:6;5611:1;5608:13;5600:128;;;5711:4;5696:13;;;5692:24;;5686:31;5673:11;;;5666:52;5629:12;5600:128;;;5746:6;5743:1;5740:13;5737:48;;;5781:1;5772:6;5767:3;5763:16;5756:27;5737:48;-1:-1:-1;5801:16:18;;;;;5487:336;-1:-1:-1;;5487:336:18:o;5828:261::-;6003:3;6028:55;6053:29;6078:3;6070:6;6053:29;:::i;:::-;6045:6;6028:55;:::i;:::-;6021:62;5828:261;-1:-1:-1;;;;5828:261:18:o",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.15;\n\nimport './NomiswapStablePair.sol';\nimport './interfaces/INomiswapStableFactory.sol';\n\ncontract NomiswapStableFactory is INomiswapStableFactory {\n\n    address public feeTo;\n    address public feeToSetter;\n    bytes32 public INIT_CODE_HASH = keccak256(abi.encodePacked(type(NomiswapStablePair).creationCode));\n\n    mapping(address => mapping(address => address)) public getPair;\n    address[] public allPairs;\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    function allPairsLength() external view returns (uint) {\n        return allPairs.length;\n    }\n\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        require(tokenA != tokenB, 'Nomiswap: IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'Nomiswap: ZERO_ADDRESS');\n        require(getPair[token0][token1] == address(0), 'Nomiswap: PAIR_EXISTS'); // single check is sufficient\n        bytes memory bytecode = abi.encodePacked(type(NomiswapStablePair).creationCode, abi.encode(token0,  token1));\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        require(pair != address(0), \"Nomiswap: PAIR_NOT_CREATED\");\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        feeToSetter = _feeToSetter;\n    }\n\n    function setDevFee(address _pair, uint128 _devFee) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        require(_devFee > 0, 'Nomiswap: FORBIDDEN_FEE');\n        INomiswapStablePair(_pair).setDevFee(_devFee);\n    }\n\n    function setSwapFee(address _pair, uint32 _swapFee) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        INomiswapStablePair(_pair).setSwapFee(_swapFee);\n    }\n\n    function rampA(address _pair, uint32 _futureA, uint40 _futureTime) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        NomiswapStablePair(_pair).rampA(_futureA, _futureTime);\n    }\n\n    function stopRampA(address _pair) external {\n        require(msg.sender == feeToSetter, 'Nomiswap: FORBIDDEN');\n        NomiswapStablePair(_pair).stopRampA();\n    }\n\n}\n",
  "sourcePath": "/home/eraserpl/NetBeansProjects/stableswap-contracts/contracts/NomiswapStableFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/NomiswapStableFactory.sol",
    "exportedSymbols": {
      "Address": [
        754
      ],
      "FactoryGuard": [
        3826
      ],
      "IERC20": [
        117
      ],
      "IERC20Metadata": [
        142
      ],
      "IERC20Permit": [
        178
      ],
      "INomiswapCallee": [
        3365
      ],
      "INomiswapERC20": [
        3405
      ],
      "INomiswapFactory": [
        3480
      ],
      "INomiswapPair": [
        3593
      ],
      "INomiswapStableFactory": [
        3613
      ],
      "INomiswapStablePair": [
        3684
      ],
      "MathUtils": [
        3755
      ],
      "NomiswapStableERC20": [
        1186
      ],
      "NomiswapStableFactory": [
        1501
      ],
      "NomiswapStablePair": [
        3351
      ],
      "ReentrancyGuard": [
        39
      ],
      "SafeERC20": [
        459
      ],
      "UQ112x112": [
        3799
      ]
    },
    "id": 1502,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1188,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:24:7"
      },
      {
        "absolutePath": "project:/contracts/NomiswapStablePair.sol",
        "file": "./NomiswapStablePair.sol",
        "id": 1189,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1502,
        "sourceUnit": 3352,
        "src": "71:34:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/INomiswapStableFactory.sol",
        "file": "./interfaces/INomiswapStableFactory.sol",
        "id": 1190,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1502,
        "sourceUnit": 3614,
        "src": "106:49:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1191,
              "name": "INomiswapStableFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3613,
              "src": "191:22:7"
            },
            "id": 1192,
            "nodeType": "InheritanceSpecifier",
            "src": "191:22:7"
          }
        ],
        "canonicalName": "NomiswapStableFactory",
        "contractDependencies": [
          3351
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1501,
        "linearizedBaseContracts": [
          1501,
          3613,
          3480
        ],
        "name": "NomiswapStableFactory",
        "nameLocation": "166:21:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              3422
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 1194,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "236:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 1501,
            "src": "221:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1193,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "221:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3427
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 1196,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "262:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 1501,
            "src": "247:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1195,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "247:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3432
            ],
            "constant": false,
            "functionSelector": "257671f5",
            "id": 1207,
            "mutability": "mutable",
            "name": "INIT_CODE_HASH",
            "nameLocation": "294:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 1501,
            "src": "279:98:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1197,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "279:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1202,
                            "name": "NomiswapStablePair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3351,
                            "src": "343:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NomiswapStablePair_$3351_$",
                              "typeString": "type(contract NomiswapStablePair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_NomiswapStablePair_$3351_$",
                              "typeString": "type(contract NomiswapStablePair)"
                            }
                          ],
                          "id": 1201,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "338:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "338:24:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_NomiswapStablePair_$3351",
                          "typeString": "type(contract NomiswapStablePair)"
                        }
                      },
                      "id": 1204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "338:37:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "expression": {
                      "id": 1199,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "321:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 1200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "321:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 1205,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "321:55:7",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 1198,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "311:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1206,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "311:66:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3441
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 1213,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "439:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1501,
            "src": "384:62:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1212,
              "keyType": {
                "id": 1208,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "392:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "384:47:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1211,
                "keyType": {
                  "id": 1209,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "411:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "403:27:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1210,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "422:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3448
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 1216,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "469:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1501,
            "src": "452:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1214,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "452:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1215,
              "nodeType": "ArrayTypeName",
              "src": "452:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1225,
              "nodeType": "Block",
              "src": "518:43:7",
              "statements": [
                {
                  "expression": {
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1221,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1196,
                      "src": "528:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1222,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1218,
                      "src": "542:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "528:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1224,
                  "nodeType": "ExpressionStatement",
                  "src": "528:26:7"
                }
              ]
            },
            "id": 1226,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1218,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "504:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "496:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "495:22:7"
            },
            "returnParameters": {
              "id": 1220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:0:7"
            },
            "scope": 1501,
            "src": "484:77:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3453
            ],
            "body": {
              "id": 1234,
              "nodeType": "Block",
              "src": "622:39:7",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1231,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1216,
                      "src": "639:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "639:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1230,
                  "id": 1233,
                  "nodeType": "Return",
                  "src": "632:22:7"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 1235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "576:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "590:2:7"
            },
            "returnParameters": {
              "id": 1230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1229,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1235,
                  "src": "616:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1228,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "615:6:7"
            },
            "scope": 1501,
            "src": "567:94:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3462
            ],
            "body": {
              "id": 1364,
              "nodeType": "Block",
              "src": "751:990:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1245,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "769:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "769:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1247,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "783:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "769:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "796:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "761:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "761:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1251,
                  "nodeType": "ExpressionStatement",
                  "src": "761:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1253,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1237,
                          "src": "836:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1254,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1239,
                          "src": "846:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "836:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a204944454e544943414c5f414444524553534553",
                        "id": 1256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "854:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a90c6f057c10e1a53d74da75bc56c676fd121fbdb3c3cf8b1ff7e64725a22925",
                          "typeString": "literal_string \"Nomiswap: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Nomiswap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a90c6f057c10e1a53d74da75bc56c676fd121fbdb3c3cf8b1ff7e64725a22925",
                          "typeString": "literal_string \"Nomiswap: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "828:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "828:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1258,
                  "nodeType": "ExpressionStatement",
                  "src": "828:58:7"
                },
                {
                  "assignments": [
                    1260,
                    1262
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1260,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "905:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1364,
                      "src": "897:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1259,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "897:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1262,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "921:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1364,
                      "src": "913:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1261,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "913:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1273,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1263,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1237,
                        "src": "931:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1264,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1239,
                        "src": "940:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "931:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 1269,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1239,
                          "src": "969:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1270,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1237,
                          "src": "977:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1271,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "968:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "931:53:7",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 1266,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1237,
                          "src": "950:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1267,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1239,
                          "src": "958:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1268,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "949:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "896:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1275,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1260,
                          "src": "1002:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1020:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1012:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1276,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1012:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1012:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1002:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a205a45524f5f41444452455353",
                        "id": 1281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1024:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_405e2892877ce8e6370fa3a0dded544224faed24ee93c93308d1a806b4e016ab",
                          "typeString": "literal_string \"Nomiswap: ZERO_ADDRESS\""
                        },
                        "value": "Nomiswap: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_405e2892877ce8e6370fa3a0dded544224faed24ee93c93308d1a806b4e016ab",
                          "typeString": "literal_string \"Nomiswap: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 1274,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "994:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "994:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1283,
                  "nodeType": "ExpressionStatement",
                  "src": "994:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1285,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1213,
                              "src": "1067:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 1287,
                            "indexExpression": {
                              "id": 1286,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1260,
                              "src": "1075:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1067:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1289,
                          "indexExpression": {
                            "id": 1288,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1262,
                            "src": "1083:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1067:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1102:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1094:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1290,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1094:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1094:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1067:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20504149525f455849535453",
                        "id": 1295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1106:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ace30fe13309f9ef6658b58036e9987d38a6a9e5c2410c1ff9a1017d5d88bae",
                          "typeString": "literal_string \"Nomiswap: PAIR_EXISTS\""
                        },
                        "value": "Nomiswap: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ace30fe13309f9ef6658b58036e9987d38a6a9e5c2410c1ff9a1017d5d88bae",
                          "typeString": "literal_string \"Nomiswap: PAIR_EXISTS\""
                        }
                      ],
                      "id": 1284,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1059:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1059:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1297,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:71:7"
                },
                {
                  "assignments": [
                    1299
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1299,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1183:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1364,
                      "src": "1170:21:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1298,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1170:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1312,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1303,
                              "name": "NomiswapStablePair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3351,
                              "src": "1216:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NomiswapStablePair_$3351_$",
                                "typeString": "type(contract NomiswapStablePair)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_NomiswapStablePair_$3351_$",
                                "typeString": "type(contract NomiswapStablePair)"
                              }
                            ],
                            "id": 1302,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "1211:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1211:24:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_NomiswapStablePair_$3351",
                            "typeString": "type(contract NomiswapStablePair)"
                          }
                        },
                        "id": 1305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "creationCode",
                        "nodeType": "MemberAccess",
                        "src": "1211:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1308,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "1261:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1309,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1262,
                            "src": "1270:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1306,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1250:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1250:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1250:27:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1300,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "1194:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "1194:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1194:84:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1170:108:7"
                },
                {
                  "assignments": [
                    1314
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1314,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1296:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1364,
                      "src": "1288:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1313,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1288:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1322,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1318,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "1330:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1319,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1262,
                            "src": "1338:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1316,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1313:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1313:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1313:32:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1315,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1303:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1303:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1288:58:7"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1365:84:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1379:60:7",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1395:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1402:8:7"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1412:2:7",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1398:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1398:17:7"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1423:8:7"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1417:5:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1417:15:7"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1434:4:7"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1387:7:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1387:52:7"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1379:4:7"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1299,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1402:8:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1299,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1423:8:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1242,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1379:4:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1314,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1434:4:7",
                      "valueSize": 1
                    }
                  ],
                  "id": 1323,
                  "nodeType": "InlineAssembly",
                  "src": "1356:93:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1325,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1242,
                          "src": "1466:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1482:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1474:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1326,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1474:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1474:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1466:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20504149525f4e4f545f43524541544544",
                        "id": 1331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1486:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cd3c6d7e8df26671528fa650a7de99101eba8529ad12a9bcaca2a5489122164",
                          "typeString": "literal_string \"Nomiswap: PAIR_NOT_CREATED\""
                        },
                        "value": "Nomiswap: PAIR_NOT_CREATED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cd3c6d7e8df26671528fa650a7de99101eba8529ad12a9bcaca2a5489122164",
                          "typeString": "literal_string \"Nomiswap: PAIR_NOT_CREATED\""
                        }
                      ],
                      "id": 1324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1458:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1458:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1333,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:57:7"
                },
                {
                  "expression": {
                    "id": 1340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1334,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1213,
                          "src": "1525:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1337,
                        "indexExpression": {
                          "id": 1335,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1260,
                          "src": "1533:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1525:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1338,
                      "indexExpression": {
                        "id": 1336,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1262,
                        "src": "1541:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1525:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1339,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "1551:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1525:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1341,
                  "nodeType": "ExpressionStatement",
                  "src": "1525:30:7"
                },
                {
                  "expression": {
                    "id": 1348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1342,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1213,
                          "src": "1565:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1345,
                        "indexExpression": {
                          "id": 1343,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1262,
                          "src": "1573:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1565:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1346,
                      "indexExpression": {
                        "id": 1344,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1260,
                        "src": "1581:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1565:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1347,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "1591:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1565:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1349,
                  "nodeType": "ExpressionStatement",
                  "src": "1565:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1353,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1242,
                        "src": "1664:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1350,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1216,
                        "src": "1650:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1650:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1355,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:19:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1357,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1260,
                        "src": "1696:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1358,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1262,
                        "src": "1704:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1359,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1242,
                        "src": "1712:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1360,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1216,
                          "src": "1718:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1718:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1356,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3417,
                      "src": "1684:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1684:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1363,
                  "nodeType": "EmitStatement",
                  "src": "1679:55:7"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 1365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "676:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1237,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "695:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "687:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1239,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "711:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "703:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "703:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "686:32:7"
            },
            "returnParameters": {
              "id": 1243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1242,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "745:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "737:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "737:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "736:14:7"
            },
            "scope": 1501,
            "src": "667:1074:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3467
            ],
            "body": {
              "id": 1382,
              "nodeType": "Block",
              "src": "1790:98:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1371,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1808:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1808:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1373,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "1822:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1808:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1835:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1800:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1800:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1377,
                  "nodeType": "ExpressionStatement",
                  "src": "1800:57:7"
                },
                {
                  "expression": {
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1378,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1194,
                      "src": "1867:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1379,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1367,
                      "src": "1875:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1867:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1381,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:14:7"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 1383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1756:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1367,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1773:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1383,
                  "src": "1765:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1765:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1764:16:7"
            },
            "returnParameters": {
              "id": 1369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1790:0:7"
            },
            "scope": 1501,
            "src": "1747:141:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3472
            ],
            "body": {
              "id": 1400,
              "nodeType": "Block",
              "src": "1949:110:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1389,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1967:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1967:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1391,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "1981:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1967:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1994:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1388,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1959:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1959:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1395,
                  "nodeType": "ExpressionStatement",
                  "src": "1959:57:7"
                },
                {
                  "expression": {
                    "id": 1398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1396,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1196,
                      "src": "2026:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1397,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1385,
                      "src": "2040:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2026:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1399,
                  "nodeType": "ExpressionStatement",
                  "src": "2026:26:7"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 1401,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1903:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1385,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1926:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1401,
                  "src": "1918:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1917:22:7"
            },
            "returnParameters": {
              "id": 1387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1949:0:7"
            },
            "scope": 1501,
            "src": "1894:165:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1430,
              "nodeType": "Block",
              "src": "2125:186:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1409,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2143:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2143:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1411,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "2157:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2143:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2170:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2135:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2135:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1415,
                  "nodeType": "ExpressionStatement",
                  "src": "2135:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 1419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1417,
                          "name": "_devFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1405,
                          "src": "2210:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2220:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2210:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e5f464545",
                        "id": 1420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2223:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90b73549368af0ae6cdb0c9edf500f2f0d39c143efb4b8689b0b8abb658de3e2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN_FEE\""
                        },
                        "value": "Nomiswap: FORBIDDEN_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90b73549368af0ae6cdb0c9edf500f2f0d39c143efb4b8689b0b8abb658de3e2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN_FEE\""
                        }
                      ],
                      "id": 1416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2202:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2202:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1422,
                  "nodeType": "ExpressionStatement",
                  "src": "2202:47:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1427,
                        "name": "_devFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "2296:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1424,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1403,
                            "src": "2279:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1423,
                          "name": "INomiswapStablePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3684,
                          "src": "2259:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_INomiswapStablePair_$3684_$",
                            "typeString": "type(contract INomiswapStablePair)"
                          }
                        },
                        "id": 1425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2259:26:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INomiswapStablePair_$3684",
                          "typeString": "contract INomiswapStablePair"
                        }
                      },
                      "id": 1426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDevFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3655,
                      "src": "2259:36:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint128_$returns$__$",
                        "typeString": "function (uint128) external"
                      }
                    },
                    "id": 1428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2259:45:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1429,
                  "nodeType": "ExpressionStatement",
                  "src": "2259:45:7"
                }
              ]
            },
            "functionSelector": "52b5c71e",
            "id": 1431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDevFee",
            "nameLocation": "2074:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1403,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "2092:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1431,
                  "src": "2084:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2084:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1405,
                  "mutability": "mutable",
                  "name": "_devFee",
                  "nameLocation": "2107:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1431,
                  "src": "2099:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2099:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2083:32:7"
            },
            "returnParameters": {
              "id": 1407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2125:0:7"
            },
            "scope": 1501,
            "src": "2065:246:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3479
            ],
            "body": {
              "id": 1453,
              "nodeType": "Block",
              "src": "2378:131:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1439,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2396:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2396:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1441,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "2410:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2396:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2423:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2388:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2388:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1445,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1450,
                        "name": "_swapFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1435,
                        "src": "2493:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1447,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1433,
                            "src": "2475:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1446,
                          "name": "INomiswapStablePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3684,
                          "src": "2455:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_INomiswapStablePair_$3684_$",
                            "typeString": "type(contract INomiswapStablePair)"
                          }
                        },
                        "id": 1448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2455:26:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INomiswapStablePair_$3684",
                          "typeString": "contract INomiswapStablePair"
                        }
                      },
                      "id": 1449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSwapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3650,
                      "src": "2455:37:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32) external"
                      }
                    },
                    "id": 1451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2455:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1452,
                  "nodeType": "ExpressionStatement",
                  "src": "2455:47:7"
                }
              ]
            },
            "functionSelector": "9e68ceb8",
            "id": 1454,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSwapFee",
            "nameLocation": "2326:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1433,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "2345:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1454,
                  "src": "2337:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2337:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1435,
                  "mutability": "mutable",
                  "name": "_swapFee",
                  "nameLocation": "2359:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1454,
                  "src": "2352:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1434,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2352:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2336:32:7"
            },
            "returnParameters": {
              "id": 1437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2378:0:7"
            },
            "scope": 1501,
            "src": "2317:192:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3607
            ],
            "body": {
              "id": 1479,
              "nodeType": "Block",
              "src": "2591:138:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1464,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2609:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2609:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1466,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "2623:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2609:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2636:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1463,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2601:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2601:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1470,
                  "nodeType": "ExpressionStatement",
                  "src": "2601:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1475,
                        "name": "_futureA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1458,
                        "src": "2700:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1476,
                        "name": "_futureTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1460,
                        "src": "2710:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1472,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1456,
                            "src": "2687:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1471,
                          "name": "NomiswapStablePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3351,
                          "src": "2668:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NomiswapStablePair_$3351_$",
                            "typeString": "type(contract NomiswapStablePair)"
                          }
                        },
                        "id": 1473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2668:25:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NomiswapStablePair_$3351",
                          "typeString": "contract NomiswapStablePair"
                        }
                      },
                      "id": 1474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rampA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2554,
                      "src": "2668:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint40_$returns$__$",
                        "typeString": "function (uint32,uint40) external"
                      }
                    },
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2668:54:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1478,
                  "nodeType": "ExpressionStatement",
                  "src": "2668:54:7"
                }
              ]
            },
            "functionSelector": "bcec1e4d",
            "id": 1480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rampA",
            "nameLocation": "2524:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1456,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "2538:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1480,
                  "src": "2530:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2530:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1458,
                  "mutability": "mutable",
                  "name": "_futureA",
                  "nameLocation": "2552:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1480,
                  "src": "2545:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1457,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2545:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1460,
                  "mutability": "mutable",
                  "name": "_futureTime",
                  "nameLocation": "2569:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1480,
                  "src": "2562:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1459,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "2562:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2529:52:7"
            },
            "returnParameters": {
              "id": 1462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2591:0:7"
            },
            "scope": 1501,
            "src": "2515:214:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3612
            ],
            "body": {
              "id": 1499,
              "nodeType": "Block",
              "src": "2778:121:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1486,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2796:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2796:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1488,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "2810:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2796:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6d69737761703a20464f5242494444454e",
                        "id": 1490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2823:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        },
                        "value": "Nomiswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35dde249629f3cc036e4a2e1e2ff64e2f3c72e9b31f3d0308579cf7267a2f9b2",
                          "typeString": "literal_string \"Nomiswap: FORBIDDEN\""
                        }
                      ],
                      "id": 1485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2788:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1492,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:57:7"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1494,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1482,
                            "src": "2874:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1493,
                          "name": "NomiswapStablePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3351,
                          "src": "2855:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NomiswapStablePair_$3351_$",
                            "typeString": "type(contract NomiswapStablePair)"
                          }
                        },
                        "id": 1495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2855:25:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NomiswapStablePair_$3351",
                          "typeString": "contract NomiswapStablePair"
                        }
                      },
                      "id": 1496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopRampA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2601,
                      "src": "2855:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2855:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1498,
                  "nodeType": "ExpressionStatement",
                  "src": "2855:37:7"
                }
              ]
            },
            "functionSelector": "6864a4b3",
            "id": 1500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stopRampA",
            "nameLocation": "2744:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1482,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "2762:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1500,
                  "src": "2754:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2754:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2753:15:7"
            },
            "returnParameters": {
              "id": 1484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2778:0:7"
            },
            "scope": 1501,
            "src": "2735:164:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1502,
        "src": "157:2745:7",
        "usedErrors": []
      }
    ],
    "src": "45:2858:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-09-06T08:00:15.070Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}